(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    644532,      11749]
NotebookOptionsPosition[    642929,      11693]
NotebookOutlinePosition[    643273,      11708]
CellTagsIndexPosition[    643230,      11705]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7163175271238613`*^9, 3.7163175981726503`*^9}, {
   3.716317638564206*^9, 3.7163176875324736`*^9}, {3.716317750389727*^9, 
   3.71631775043659*^9}, {3.716317863992218*^9, 3.7163180553189354`*^9}, {
   3.7163183748315725`*^9, 3.7163185409163446`*^9}, {3.716318579084041*^9, 
   3.71631878361265*^9}, {3.716318829683587*^9, 3.7163190000589333`*^9}, {
   3.716319287517725*^9, 3.7163193534995394`*^9}, {3.7163194380999117`*^9, 
   3.716319501659514*^9}, {3.716319560597309*^9, 3.716319571907333*^9}, {
   3.7163196440054417`*^9, 3.71631966261868*^9}, {3.716319743756151*^9, 
   3.7163198817458887`*^9}, {3.716319928801778*^9, 3.7163200266730957`*^9}, {
   3.716320059067789*^9, 3.716320063424622*^9}, {3.7163939087315764`*^9, 
   3.7163939239499054`*^9}, {3.716393964553217*^9, 3.7163939737081943`*^9}, {
   3.716394168666899*^9, 3.7163941697554207`*^9}, {3.716394207457821*^9, 
   3.7163942088703403`*^9}, {3.716418409677294*^9, 3.716418411861396*^9}, {
   3.71641885854364*^9, 3.716418902618147*^9}, {3.7164189420588107`*^9, 
   3.7164190081329823`*^9}, {3.7164190813534164`*^9, 
   3.7164192211985874`*^9}, {3.7164193761463118`*^9, 
   3.7164193822828074`*^9}, {3.7164234915793886`*^9, 3.716423536482237*^9}, {
   3.71642361915483*^9, 3.716423629418976*^9}, {3.7164253333615656`*^9, 
   3.7164253869003253`*^9}, {3.7164254507016597`*^9, 3.716425596848939*^9}, {
   3.7164256414681396`*^9, 3.7164256546163034`*^9}, {3.716425744042611*^9, 
   3.716425784273892*^9}, {3.7164260811751385`*^9, 3.7164261886649346`*^9}, {
   3.7164262532384596`*^9, 3.7164262873457975`*^9}, {3.716634766878872*^9, 
   3.7166347748255157`*^9}, {3.716634831057101*^9, 3.716634923458304*^9}, {
   3.716635916604142*^9, 3.7166359719060698`*^9}, {3.716636032626356*^9, 
   3.716636053216305*^9}, {3.7166361375046816`*^9, 3.716636175409775*^9}, {
   3.7166362217902684`*^9, 3.7166362920249004`*^9}, {3.7166363716821184`*^9, 
   3.716636372819496*^9}, {3.7166364711861057`*^9, 3.7166365419188147`*^9}, {
   3.7166366105190806`*^9, 3.71663661085608*^9}, {3.7166366427215214`*^9, 
   3.716636665199441*^9}, {3.7166366960250807`*^9, 3.716636697560192*^9}, 
   3.7166367397528396`*^9, {3.716636803848575*^9, 3.7166368192088203`*^9}, {
   3.71663703692212*^9, 3.7166370373913946`*^9}, {3.7166370977602897`*^9, 
   3.716637147480263*^9}, {3.7166372607671995`*^9, 3.716637426319886*^9}, {
   3.716638559556328*^9, 3.7166385612871075`*^9}, {3.716638933571245*^9, 
   3.7166389348858786`*^9}, {3.7166389781058917`*^9, 3.716639044036839*^9}, {
   3.7166403024332523`*^9, 3.716640307234989*^9}, {3.716647901943839*^9, 
   3.716647921275487*^9}, {3.7166480412523484`*^9, 3.716648056026106*^9}, {
   3.7166480864891415`*^9, 3.7166480939040966`*^9}, {3.7166481306508293`*^9, 
   3.716648131313507*^9}, {3.71664821230156*^9, 3.7166482130764065`*^9}, {
   3.7166483434863634`*^9, 3.7166483742016587`*^9}, {3.71664847373421*^9, 
   3.7166484740291033`*^9}, {3.71664856093606*^9, 3.716648595582373*^9}, {
   3.7166488123457985`*^9, 3.716648820219383*^9}, {3.71664885872954*^9, 
   3.7166488819441357`*^9}, {3.716648974716378*^9, 3.716649026596545*^9}, {
   3.716649140745675*^9, 3.7166496546606054`*^9}, {3.7166496951387997`*^9, 
   3.7166496959026966`*^9}, {3.716649801818532*^9, 3.716649847913123*^9}, {
   3.7166499379292707`*^9, 3.716649946209906*^9}, {3.7166500326025257`*^9, 
   3.7166500399134145`*^9}, {3.7166501048865204`*^9, 3.7166501436455374`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e1", "=", "0.09"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e2", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]", "=", "0.001"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqs", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Res", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"r", "*", 
         RowBox[{"Res", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Res", "[", "t", "]"}], "K"]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"A", "*", 
            RowBox[{"Res", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"H", "*", "A", "*", 
             RowBox[{"Res", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"q", "[", "t", "]"}], "*", "S1", "*", 
            RowBox[{"Res", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", 
             RowBox[{"q", "[", "t", "]"}], "*", "h1", "*", 
             RowBox[{"Res", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"B", "*", "A", "*", 
            RowBox[{"Res", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"H", "*", "A", "*", 
             RowBox[{"Res", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"M", "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"S2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", 
             RowBox[{"q", "[", "t", "]"}], "*", "h1", "*", 
             RowBox[{"Res", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"e1", "*", 
             RowBox[{"q", "[", "t", "]"}], "*", "S1", "*", 
             RowBox[{"Res", "[", "t", "]"}]}], 
            RowBox[{"1", "+", 
             RowBox[{"S1", "*", 
              RowBox[{"q", "[", "t", "]"}], "*", "h1", "*", 
              RowBox[{"Res", "[", "t", "]"}]}], "+", 
             RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
              RowBox[{"Con", "[", "t", "]"}]}]}]], "+", 
           FractionBox[
            RowBox[{"e2", "*", "S2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}], 
            RowBox[{"1", "+", 
             RowBox[{"S1", "*", 
              RowBox[{"q", "[", "t", "]"}], "*", "h1", "*", 
              RowBox[{"Res", "[", "t", "]"}]}], "+", 
             RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
              RowBox[{"Con", "[", "t", "]"}]}]}]]}], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}], "-", 
        RowBox[{"d", "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"q", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"v", "*", 
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"Res", "[", "t", "]"}], "*", "S1", "*", 
            RowBox[{"(", 
             RowBox[{"e1", "+", 
              RowBox[{
               RowBox[{"Con", "[", "t", "]"}], "*", "S2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"e1", "*", "h2"}], "-", 
                 RowBox[{"e2", "*", "h1"}]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"S1", "*", "h1", "*", 
               RowBox[{"Res", "[", "t", "]"}], "*", 
               RowBox[{"q", "[", "t", "]"}]}], "+", 
              RowBox[{"S2", "*", "h2", "*", 
               RowBox[{"Con", "[", "t", "]"}]}]}], ")"}], "^", "2"}]], 
          ")"}]}], "+", 
        FractionBox["\[Mu]", 
         RowBox[{"q", "[", "t", "]"}]], "-", 
        FractionBox["\[Mu]", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"q", "[", "t", "]"}]}], ")"}]]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Res", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "0", "]"}], "\[Equal]", "0.5"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"s", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{"eqs", ",", " ", 
    RowBox[{"{", 
     RowBox[{"Res", ",", "Con", ",", " ", "Pred", ",", " ", "q"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.716650130483031*^9, 3.716650146290153*^9}, {
  3.716650249751463*^9, 3.7166502804988194`*^9}, {3.716650360485014*^9, 
  3.71665057483858*^9}, {3.7166506067071695`*^9, 3.7166507668961782`*^9}, {
  3.7166508436123295`*^9, 3.7166509308285456`*^9}, {3.716725489183301*^9, 
  3.7167254902848263`*^9}, {3.7167267453552823`*^9, 3.7167267672205334`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Res", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAYpgGHjE3Jj8EHPrfq//vP2Ip8OiQ
YGRAPANVRqIb0T+4trAw9Tt1QMJYWoWaaHE/KX1tTz+Mf0B8vN30FqHAP/2G
1VZf1IRABgTUotqGMD+HWrGCUVCKQBsMPOI9jbY/R0DPX5Juj0Dyw9EnKh3z
PpUY1dxCfZJA+S4tmHTQ7D6ew6LZSTaVQOv6xCO83vk/wncRL3jAl0C8T1no
nHvuPnex3sJ/gZpAOiC29KTt+z9H9EyvrhOdQKLPF1/GhNE/rmmb6+qYn0C3
9U170SCFP1QyJDOAKqFAljz2pgLffz9eNMucHnGiQNxQ08FL+60/MXmhpSnT
o0Cyc4ky2RnDPlDXZ1a7LqVAsabko9eDij/8uX6z4HKmQDJQ2A6le3I/cd/E
r3LSp0CcPAbbS0C9P3OJW1iYGqlA9hSwY2ZLaz8+diGgKn6qQDKi7FnGnpA/
VHzXj0Pbq0BXlNIhx7rhP/gG3ivwIK1AuP/T+bGB8D9k1BNnCYKuQOjSEmoP
sCE/XiaaTrbLr0AX3WFCmshIP9FICO90h7BAXalg9mEBED/YH1sGxTaxQPDL
FxaD+/s/JTnW817asUDzzshbdvf7P9fz6DCvi7JAYvTt15sX3z4vu/PBwjmz
QMCWrscAK/c/zcQmKSDcs0AN2RtWdJXoP9Bv8d8zjLRAtDWcLrLOwT4ZXeRs
kTC1QGmEKgFl9rA+CFfPTbLRtUD2Ma+LTh4TP1vyUX6JgLZAm1fzh+8WSz/1
z/yEqiO3QPp/ndxnyzs/804/24HUt0Dqn9wxFm/xPzgQqgejebhAeoDi9nfN
qj8j3gyIhxu5QB1MD85iyPM/ck0HWCLLuUDYQ6k69bz2Pgj/Kf4Gb7pAjqHo
67Gz/j4CUuTzoSC7QN/df0H2lPk/orGWPQDPu0ANzsViYwa/PolTcV2ocbxA
tHlWGmxVrj7UluPMBiK9QInSlyautfU/Zhx+Eq/GvUAd2O9OlXz6P56uEKwa
aL5AsA8HqWEg5D864jqVPBe/QEoM0xTuPvM+HViNVKi6v0DKUkMjO2kCP7O3
uzHlNcBAuj2FoKoamT+qySzj14zAQNH1zaIJV/E/xPyxf+/dwECxZ+x80O/5
P5AAA0TiNcFAvmedK4663D5/JWjz+YfBQG4gtrKq1+g+IRuZyuzgwUBLE8GJ
mK/6PxYXxktBOMJAmHCE4M3HuT4uNAe4uonCQO5SDhf+8a8++CEUTA/iwkCJ
cNHcuFf4P+UwNcuINMNApRAHP3Tl+z+4M3L6/4fDQGqJvQhFNvk/vqPlzQ==

                    "]]}}}, {}}, {
                   DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10000.}, {0., 1.7489043105131223`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10000.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAYpgGHjE3Jj8EHPrfq//vP2Ip8OiQ
YGRAPANVRqIb0T+4trAw9Tt1QMJYWoWaaHE/KX1tTz+Mf0B8vN30FqHAP/2G
1VZf1IRABgTUotqGMD+HWrGCUVCKQBsMPOI9jbY/R0DPX5Juj0Dyw9EnKh3z
PpUY1dxCfZJA+S4tmHTQ7D6ew6LZSTaVQOv6xCO83vk/wncRL3jAl0C8T1no
nHvuPnex3sJ/gZpAOiC29KTt+z9H9EyvrhOdQKLPF1/GhNE/rmmb6+qYn0C3
9U170SCFP1QyJDOAKqFAljz2pgLffz9eNMucHnGiQNxQ08FL+60/MXmhpSnT
o0Cyc4ky2RnDPlDXZ1a7LqVAsabko9eDij/8uX6z4HKmQDJQ2A6le3I/cd/E
r3LSp0CcPAbbS0C9P3OJW1iYGqlA9hSwY2ZLaz8+diGgKn6qQDKi7FnGnpA/
VHzXj0Pbq0BXlNIhx7rhP/gG3ivwIK1AuP/T+bGB8D9k1BNnCYKuQOjSEmoP
sCE/XiaaTrbLr0AX3WFCmshIP9FICO90h7BAXalg9mEBED/YH1sGxTaxQPDL
FxaD+/s/JTnW817asUDzzshbdvf7P9fz6DCvi7JAYvTt15sX3z4vu/PBwjmz
QMCWrscAK/c/zcQmKSDcs0AN2RtWdJXoP9Bv8d8zjLRAtDWcLrLOwT4ZXeRs
kTC1QGmEKgFl9rA+CFfPTbLRtUD2Ma+LTh4TP1vyUX6JgLZAm1fzh+8WSz/1
z/yEqiO3QPp/ndxnyzs/804/24HUt0Dqn9wxFm/xPzgQqgejebhAeoDi9nfN
qj8j3gyIhxu5QB1MD85iyPM/ck0HWCLLuUDYQ6k69bz2Pgj/Kf4Gb7pAjqHo
67Gz/j4CUuTzoSC7QN/df0H2lPk/orGWPQDPu0ANzsViYwa/PolTcV2ocbxA
tHlWGmxVrj7UluPMBiK9QInSlyautfU/Zhx+Eq/GvUAd2O9OlXz6P56uEKwa
aL5AsA8HqWEg5D864jqVPBe/QEoM0xTuPvM+HViNVKi6v0DKUkMjO2kCP7O3
uzHlNcBAuj2FoKoamT+qySzj14zAQNH1zaIJV/E/xPyxf+/dwECxZ+x80O/5
P5AAA0TiNcFAvmedK4663D5/JWjz+YfBQG4gtrKq1+g+IRuZyuzgwUBLE8GJ
mK/6PxYXxktBOMJAmHCE4M3HuT4uNAe4uonCQO5SDhf+8a8++CEUTA/iwkCJ
cNHcuFf4P+UwNcuINMNApRAHP3Tl+z+4M3L6/4fDQGqJvQhFNvk/vqPlzQ==

                    "]]}}}, {}}, {
                   DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10000.}, {0., 1.7489043105131223`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10000.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 10000.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Con", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAYpgGHjE3Jj8kdOcJWADwP2Ip8OiQ
YGRAGOT7xoXxhD+4trAw9Tt1QB4KDBHiK6U/KX1tTz+Mf0CjxTgxbZ2DP/2G
1VZf1IRAyXMuFHNHuT+HWrGCUVCKQJWpbgAQ7oI/R0DPX5Juj0Af14dcH132
P5UY1dxCfZJA0759k98y9z+ew6LZSTaVQFDsJGHKQOI/wncRL3jAl0Aj4zAw
DxP6P3ex3sJ/gZpA3JnbEzAvuT9H9EyvrhOdQHgG7rNkcwZArmmb6+qYn0CN
fLAqV/cFQFQyJDOAKqFAD/i9I3oEjT9eNMucHnGiQHsea2oIS4I/MXmhpSnT
o0BVBuXmbVP1P1DXZ1a7LqVAJK37+OQhiT/8uX6z4HKmQAnoNEhLdZA/cd/E
r3LSp0A7QBLEA2EHQHOJW1iYGqlANoJ+ntYeBUA+diGgKn6qQFoWJxB4rYc/
VHzXj0Pbq0C2UbpMTzwEQPgG3ivwIK1Ah5eVwPKb/T9k1BNnCYKuQJlBQo1p
tqc/XiaaTrbLr0AJEfQ9STKbP9FICO90h7BAmoWJbnFErz/YH1sGxTaxQGOO
pfwekMs/JTnW817asUAnXGoyXBbMP9fz6DCvi7JAzopOeRPlwT8vu/PBwjmz
QJRNOtSH55Y/zcQmKSDcs0CTbGqxLt+FP9Bv8d8zjLRAEUUwH0/s9T8ZXeRs
kTC1QBQb1FrhovE/CFfPTbLRtUD9eZ8V++EAQFvyUX6JgLZAA/sYMzlomj/1
z/yEqiO3QHQREx3KOKA/804/24HUt0BFGv7n5RX8PzgQqgejebhAqMpdQUVL
B0Aj3gyIhxu5QGmO3Y7z9/c/ck0HWCLLuUBOOR14YPm2Pwj/Kf4Gb7pApjol
Md10tD8CUuTzoSC7QGNCYQ2pkeY/orGWPQDPu0AzYtSULHHRP4lTcV2ocbxA
Lvv7XwOn2z/UluPMBiK9QKnoVaDazZM/Zhx+Eq/GvUDrBqXbXnWjP56uEKwa
aL5AOj4Hms3Sgz864jqVPBe/QLV6XBUt7P0/HViNVKi6v0DdR0GaHND/P7O3
uzHlNcBANRpL9jODhT+qySzj14zAQNW6NW0FP/w/xPyxf+/dwECexY/6zmXk
P5AAA0TiNcFAb/dYbEduwj9/JWjz+YfBQLWTC4NGN70/IRuZyuzgwUBh3MUe
5VzfPxYXxktBOMJAV7Z8GB5n0z8uNAe4uonCQPgOsiIhpNo/+CEUTA/iwkAs
YMRYAXCaP+UwNcuINMNACJm7RnAzsT+4M3L6/4fDQGhKuHpSwOg/yPXFOg==

                    "]]}}}, {}}, {
                   DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10000.}, {0., 2.9223704641408665`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10000.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAYpgGHjE3Jj8kdOcJWADwP2Ip8OiQ
YGRAGOT7xoXxhD+4trAw9Tt1QB4KDBHiK6U/KX1tTz+Mf0CjxTgxbZ2DP/2G
1VZf1IRAyXMuFHNHuT+HWrGCUVCKQJWpbgAQ7oI/R0DPX5Juj0Af14dcH132
P5UY1dxCfZJA0759k98y9z+ew6LZSTaVQFDsJGHKQOI/wncRL3jAl0Aj4zAw
DxP6P3ex3sJ/gZpA3JnbEzAvuT9H9EyvrhOdQHgG7rNkcwZArmmb6+qYn0CN
fLAqV/cFQFQyJDOAKqFAD/i9I3oEjT9eNMucHnGiQHsea2oIS4I/MXmhpSnT
o0BVBuXmbVP1P1DXZ1a7LqVAJK37+OQhiT/8uX6z4HKmQAnoNEhLdZA/cd/E
r3LSp0A7QBLEA2EHQHOJW1iYGqlANoJ+ntYeBUA+diGgKn6qQFoWJxB4rYc/
VHzXj0Pbq0C2UbpMTzwEQPgG3ivwIK1Ah5eVwPKb/T9k1BNnCYKuQJlBQo1p
tqc/XiaaTrbLr0AJEfQ9STKbP9FICO90h7BAmoWJbnFErz/YH1sGxTaxQGOO
pfwekMs/JTnW817asUAnXGoyXBbMP9fz6DCvi7JAzopOeRPlwT8vu/PBwjmz
QJRNOtSH55Y/zcQmKSDcs0CTbGqxLt+FP9Bv8d8zjLRAEUUwH0/s9T8ZXeRs
kTC1QBQb1FrhovE/CFfPTbLRtUD9eZ8V++EAQFvyUX6JgLZAA/sYMzlomj/1
z/yEqiO3QHQREx3KOKA/804/24HUt0BFGv7n5RX8PzgQqgejebhAqMpdQUVL
B0Aj3gyIhxu5QGmO3Y7z9/c/ck0HWCLLuUBOOR14YPm2Pwj/Kf4Gb7pApjol
Md10tD8CUuTzoSC7QGNCYQ2pkeY/orGWPQDPu0AzYtSULHHRP4lTcV2ocbxA
Lvv7XwOn2z/UluPMBiK9QKnoVaDazZM/Zhx+Eq/GvUDrBqXbXnWjP56uEKwa
aL5AOj4Hms3Sgz864jqVPBe/QLV6XBUt7P0/HViNVKi6v0DdR0GaHND/P7O3
uzHlNcBANRpL9jODhT+qySzj14zAQNW6NW0FP/w/xPyxf+/dwECexY/6zmXk
P5AAA0TiNcFAb/dYbEduwj9/JWjz+YfBQLWTC4NGN70/IRuZyuzgwUBh3MUe
5VzfPxYXxktBOMJAV7Z8GB5n0z8uNAe4uonCQPgOsiIhpNo/+CEUTA/iwkAs
YMRYAXCaP+UwNcuINMNACJm7RnAzsT+4M3L6/4fDQGhKuHpSwOg/yPXFOg==

                    "]]}}}, {}}, {
                   DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10000.}, {0., 2.9223704641408665`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10000.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 10000.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Pred", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAYpgGHjE3Jj8vODFvCgDwP2Ip8OiQ
YGRAZxuIzdSA8j+4trAw9Tt1QKLHl8mj8fU/KX1tTz+Mf0BZH+qIw4zuP/2G
1VZf1IRAsIfnz+Vv9T+HWrGCUVCKQFUklAse/uk/R0DPX5Juj0ANPMBTQyvy
P5UY1dxCfZJAeFODU70r8T+ew6LZSTaVQC1wRCW9b9w/wncRL3jAl0B7pfT4
mrfuP3ex3sJ/gZpAQevdbBvL2z9H9EyvrhOdQD2iZhNDUuE/rmmb6+qYn0CE
hkPqLvrjP1QyJDOAKqFAsywegAg85j9eNMucHnGiQDDHEkYpC+M/MXmhpSnT
o0De364ZlvruP1DXZ1a7LqVAXQpSyTrb5D/8uX6z4HKmQOoV5lR6WeY/cd/E
r3LSp0AK7j6VT/7gP3OJW1iYGqlAdPHth+Xl4z8+diGgKn6qQLg9/0LLPOQ/
VHzXj0Pbq0DcEHbwgkreP/gG3ivwIK1ASHjOMC6k2z9k1BNnCYKuQDTzsuMK
FOw/XiaaTrbLr0DUKFvBnvToP9FICO90h7BAwIG9RneN7T/YH1sGxTaxQNae
fLFTO9g/JTnW817asUBHq5xaLjXYP9fz6DCvi7JA9sK0B9jF8D8vu/PBwjmz
QJUiU67ejNs/zcQmKSDcs0CfPaPu5+bdP9Bv8d8zjLRAwBZGF6Ea7j8ZXeRs
kTC1QA9CHc8GLvA/CFfPTbLRtUD9726NeNTnP1vyUX6JgLZA9tiRf+a96D/1
z/yEqiO3QP5vcqMH6Ok/804/24HUt0ArmUM/EzbbPzgQqgejebhA91rwYwNw
4T8j3gyIhxu5QIeH07UtX9o/ck0HWCLLuUDK3IQwAX7vPwj/Kf4Gb7pAhnl6
8uPo7j8CUuTzoSC7QCFPGD8II9g/orGWPQDPu0AoETvw5tzxP4lTcV2ocbxA
XnYlbCka8j/UluPMBiK9QP79KnqJ19s/Zhx+Eq/GvUBl4i82E3faP56uEKwa
aL5Azs/VFB913j864jqVPBe/QO1lk+VxzOk/HViNVKi6v0BiV5hgTs/oP7O3
uzHlNcBAd2TJKZp94z+qySzj14zAQGV2fndENts/xPyxf+/dwEAYvcteSv7X
P5AAA0TiNcFAJeJhdYzQ8D9/JWjz+YfBQPt0No98TvA/IRuZyuzgwUDOGyfx
/dTXPxYXxktBOMJAPL/rDXX38T8uNAe4uonCQDlldv97HPI/+CEUTA/iwkDU
v6ZE7TjbP+UwNcuINMNARxBeY5uV2T+4M3L6/4fDQMr3jVQmS9g/ET7j/A==

                    "]]}}}, {}}, {
                   DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.25}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10000.}, {0.3723749976165295, 
                    1.3714940905306112`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10000.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAYpgGHjE3Jj8vODFvCgDwP2Ip8OiQ
YGRAZxuIzdSA8j+4trAw9Tt1QKLHl8mj8fU/KX1tTz+Mf0BZH+qIw4zuP/2G
1VZf1IRAsIfnz+Vv9T+HWrGCUVCKQFUklAse/uk/R0DPX5Juj0ANPMBTQyvy
P5UY1dxCfZJAeFODU70r8T+ew6LZSTaVQC1wRCW9b9w/wncRL3jAl0B7pfT4
mrfuP3ex3sJ/gZpAQevdbBvL2z9H9EyvrhOdQD2iZhNDUuE/rmmb6+qYn0CE
hkPqLvrjP1QyJDOAKqFAsywegAg85j9eNMucHnGiQDDHEkYpC+M/MXmhpSnT
o0De364ZlvruP1DXZ1a7LqVAXQpSyTrb5D/8uX6z4HKmQOoV5lR6WeY/cd/E
r3LSp0AK7j6VT/7gP3OJW1iYGqlAdPHth+Xl4z8+diGgKn6qQLg9/0LLPOQ/
VHzXj0Pbq0DcEHbwgkreP/gG3ivwIK1ASHjOMC6k2z9k1BNnCYKuQDTzsuMK
FOw/XiaaTrbLr0DUKFvBnvToP9FICO90h7BAwIG9RneN7T/YH1sGxTaxQNae
fLFTO9g/JTnW817asUBHq5xaLjXYP9fz6DCvi7JA9sK0B9jF8D8vu/PBwjmz
QJUiU67ejNs/zcQmKSDcs0CfPaPu5+bdP9Bv8d8zjLRAwBZGF6Ea7j8ZXeRs
kTC1QA9CHc8GLvA/CFfPTbLRtUD9726NeNTnP1vyUX6JgLZA9tiRf+a96D/1
z/yEqiO3QP5vcqMH6Ok/804/24HUt0ArmUM/EzbbPzgQqgejebhA91rwYwNw
4T8j3gyIhxu5QIeH07UtX9o/ck0HWCLLuUDK3IQwAX7vPwj/Kf4Gb7pAhnl6
8uPo7j8CUuTzoSC7QCFPGD8II9g/orGWPQDPu0AoETvw5tzxP4lTcV2ocbxA
XnYlbCka8j/UluPMBiK9QP79KnqJ19s/Zhx+Eq/GvUBl4i82E3faP56uEKwa
aL5Azs/VFB913j864jqVPBe/QO1lk+VxzOk/HViNVKi6v0BiV5hgTs/oP7O3
uzHlNcBAd2TJKZp94z+qySzj14zAQGV2fndENts/xPyxf+/dwEAYvcteSv7X
P5AAA0TiNcFAJeJhdYzQ8D9/JWjz+YfBQPt0No98TvA/IRuZyuzgwUDOGyfx
/dTXPxYXxktBOMJAPL/rDXX38T8uNAe4uonCQDlldv97HPI/+CEUTA/iwkDU
v6ZE7TjbP+UwNcuINMNARxBeY5uV2T+4M3L6/4fDQMr3jVQmS9g/ET7j/A==

                    "]]}}}, {}}, {
                   DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.25}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10000.}, {0.3723749976165295, 
                    1.3714940905306112`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10000.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 10000.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"q", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAYpgGHjE3Jj+3JuXheP/fP2Ip8OiQ
YGRArnrZLrFlyj+4trAw9Tt1QJpBdYqUBsA/KX1tTz+Mf0DlzMzXP/vGP/2G
1VZf1IRAyf6ti49Kvz+HWrGCUVCKQCLIEtsAmsY/R0DPX5Juj0BHb4/S03C0
P5UY1dxCfZJAXBMmBqp7tD+ew6LZSTaVQFQjgTeWJcU/wncRL3jAl0AdVCB0
mMazP3ex3sJ/gZpAHxoE7jDi5T9H9EyvrhOdQOu1T4VOuZI/rmmb6+qYn0AL
co6X2tGkP1QyJDOAKqFAyLahT6vAxD9eNMucHnGiQNP1EIvpZ8c/MXmhpSnT
o0BNApDSP3a2P1DXZ1a7LqVAIOllB7xPxT/8uX6z4HKmQI2EoZVNl8Q/cd/E
r3LSp0Chcu4pBN6ZP3OJW1iYGqlAXHucJGvspz8+diGgKn6qQHz+UdpNmcU/
VHzXj0Pbq0CP0cL9EDqIP/gG3ivwIK1A7AZso75meD9k1BNnCYKuQEdOpyeS
wMI/XiaaTrbLr0Bojs2sWrHDP9FICO90h7BA1dzTRsZMwj/YH1sGxTaxQBNu
kP7b0uE/JTnW817asUCatQgDbqrhP9fz6DCvi7JAIz0IdijrwD8vu/PBwjmz
QJN/kuLvlOI/zcQmKSDcs0DH/uyKe+/YP9Bv8d8zjLRAPfscNctbtj8ZXeRs
kTC1QKKmaAm0Nrg/CFfPTbLRtUDF1XxZNO2wP1vyUX6JgLZAHIxJxkrBwz/1
z/yEqiO3QDk9TIVsZsM/804/24HUt0A8i7Y8G2x2PzgQqgejebhARXvSDAhr
nz8j3gyIhxu5QLuapjwT+3E/ck0HWCLLuUCWiSc5lqvBPwj/Kf4Gb7pAaurq
ixHdwT8CUuTzoSC7QDAbp4WXh54/orGWPQDPu0DTlbcjg2+/P4lTcV2ocbxA
5drcFFaMvT/UluPMBiK9QF6Oxf0gsuE/Zhx+Eq/GvUBpSv6/XN7kP56uEKwa
aL5AvV9LR4hz1j864jqVPBe/QLZDTL3iy7I/HViNVKi6v0DT4h3vxeWxP7O3
uzHlNcBACkMLtEMZxj+qySzj14zAQFZ8gGE9nnY/xPyxf+/dwECz4xBETlC2
P5AAA0TiNcFAeJIjx/rfwD9/JWjz+YfBQChD44OXRcE/IRuZyuzgwUBti3kd
hsfNPxYXxktBOMJAjDVgjFQFvz8uNAe4uonCQKEomksPtb0/+CEUTA/iwkD2
meqUK1bjP+UwNcuINMNALYcf1Ejc5T+4M3L6/4fDQH5Wt6eN/mM/3SjdBw==

                    "]]}}}, {}}, {
                   DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10000.}, {0., 0.6838612221479855}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10000.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAYpgGHjE3Jj+3JuXheP/fP2Ip8OiQ
YGRArnrZLrFlyj+4trAw9Tt1QJpBdYqUBsA/KX1tTz+Mf0DlzMzXP/vGP/2G
1VZf1IRAyf6ti49Kvz+HWrGCUVCKQCLIEtsAmsY/R0DPX5Juj0BHb4/S03C0
P5UY1dxCfZJAXBMmBqp7tD+ew6LZSTaVQFQjgTeWJcU/wncRL3jAl0AdVCB0
mMazP3ex3sJ/gZpAHxoE7jDi5T9H9EyvrhOdQOu1T4VOuZI/rmmb6+qYn0AL
co6X2tGkP1QyJDOAKqFAyLahT6vAxD9eNMucHnGiQNP1EIvpZ8c/MXmhpSnT
o0BNApDSP3a2P1DXZ1a7LqVAIOllB7xPxT/8uX6z4HKmQI2EoZVNl8Q/cd/E
r3LSp0Chcu4pBN6ZP3OJW1iYGqlAXHucJGvspz8+diGgKn6qQHz+UdpNmcU/
VHzXj0Pbq0CP0cL9EDqIP/gG3ivwIK1A7AZso75meD9k1BNnCYKuQEdOpyeS
wMI/XiaaTrbLr0Bojs2sWrHDP9FICO90h7BA1dzTRsZMwj/YH1sGxTaxQBNu
kP7b0uE/JTnW817asUCatQgDbqrhP9fz6DCvi7JAIz0IdijrwD8vu/PBwjmz
QJN/kuLvlOI/zcQmKSDcs0DH/uyKe+/YP9Bv8d8zjLRAPfscNctbtj8ZXeRs
kTC1QKKmaAm0Nrg/CFfPTbLRtUDF1XxZNO2wP1vyUX6JgLZAHIxJxkrBwz/1
z/yEqiO3QDk9TIVsZsM/804/24HUt0A8i7Y8G2x2PzgQqgejebhARXvSDAhr
nz8j3gyIhxu5QLuapjwT+3E/ck0HWCLLuUCWiSc5lqvBPwj/Kf4Gb7pAaurq
ixHdwT8CUuTzoSC7QDAbp4WXh54/orGWPQDPu0DTlbcjg2+/P4lTcV2ocbxA
5drcFFaMvT/UluPMBiK9QF6Oxf0gsuE/Zhx+Eq/GvUBpSv6/XN7kP56uEKwa
aL5AvV9LR4hz1j864jqVPBe/QLZDTL3iy7I/HViNVKi6v0DT4h3vxeWxP7O3
uzHlNcBACkMLtEMZxj+qySzj14zAQFZ8gGE9nnY/xPyxf+/dwECz4xBETlC2
P5AAA0TiNcFAeJIjx/rfwD9/JWjz+YfBQChD44OXRcE/IRuZyuzgwUBti3kd
hsfNPxYXxktBOMJAjDVgjFQFvz8uNAe4uonCQKEomksPtb0/+CEUTA/iwkD2
meqUK1bjP+UwNcuINMNALYcf1Ejc5T+4M3L6/4fDQH5Wt6eN/mM/3SjdBw==

                    "]]}}}, {}}, {
                   DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 10000.}, {0., 0.6838612221479855}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10000.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 10000.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.716650393832204*^9, 3.716650576159021*^9}, {
   3.7166506082589316`*^9, 3.716650698820793*^9}, 3.7166507529240303`*^9, {
   3.7166508545809298`*^9, 3.716650931947733*^9}, 3.716651038596731*^9, 
   3.71672549213408*^9, {3.7167267469805584`*^9, 3.716726768537236*^9}, 
   3.7168060882637615`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Res", "[", "t", "]"}], ",", " ", 
       RowBox[{"Con", "[", "t", "]"}], ",", 
       RowBox[{"Pred", "[", "t", "]"}], ",", 
       RowBox[{"q", "[", "t", "]"}]}], "}"}], "/.", "s"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "9900", ",", "Tf"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Resource\>\"", ",", " ", "\"\<Consumer\>\"", ",", " ", 
      "\"\<Predator\>\"", ",", " ", "\"\<q\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7164263231596284`*^9, 3.7164263455512905`*^9}, {
  3.7166360613936806`*^9, 3.716636068744419*^9}, {3.716636147073086*^9, 
  3.7166361473151913`*^9}, {3.7166374133629084`*^9, 3.7166374139259357`*^9}, {
  3.716638567709217*^9, 3.7166385855872335`*^9}, {3.716648383290948*^9, 
  3.7166483834842615`*^9}, {3.7166506589636865`*^9, 3.716650659945823*^9}, {
  3.716725556740244*^9, 3.716725559659197*^9}, {3.7168060789462185`*^9, 
  3.7168060811047716`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
MSYG/c804LVxfTsJ5/745TVayWnuvn5CG8mDiPVJ6Bux8S8O/9dK2i6eOpCG
/s/Be7j0eQuZjdrqnYUOtpea2J/ZTHgafhXn0Y/v7/zolthETKTvy79DmysI
vloI+kguHzvoUEGPv5/UFsk0kiBvvpc1aIPKoXThr/UkI6u/sx49sn/rvqaX
deRTf+K6z+iZ0GLj++61ZJLjikErWnlIL3za/gPh2K15r5NeX7+rfTV2NcTw
v4+z/egv7VJX+AKryLmaCLlv6A8sO9xPF1QSv7lT9mPo8PhN/cnTFSRJXObF
T7TrM7/AzSoVpPbw744ZtLFQbFvP3XIyeruYax7NKDxUN5z7nqxJu79/id6f
hGsBjh5lRHctfxGDCz7vbh8N5dEsJWfUB34zob2y/UTW7igh3vZJsqxoB4Yq
nm7NYlJRrhnNjdYaTQsVuFpIBqdXd/ChA7Zyz2yMKyAMwp84N6MpY7/ninvf
EuJhc0cC3VR+hZHbNZ9YJ8oUSqNl1H4ZXG/MI7c6fv+SRXdkjZrNKOSREmUf
ux3og7UviibZc0m3jXHUTrTfk+wSywc5hBLI374bfSn7gdMESw7R+JGkp4s+
tXT9vaxoNjEXcPUyQO9Nk9nAmZdFruvvLjiI/vqgeDbkUBbJj/skcxw9I2sb
yCWdSdqbn562RBcFeK/S9Mgg8/9snlujszlvGKd2pBMVq1l2R/T+/u9ugUlp
5Ih/ia4z+sqps8f4RNKIS4HP7UtouzO39UWjUknmho0z19ExQjrvolNSyGed
wa030QXHTQKvaqWQ6cvJtnfQn2rnj0e3JxP5j7tbH6LnX6enZPInE9molsrH
6DPNAVzlNUlkm/PZ3GA097Tg31seSURm19/XT9B6Hf8deKecRKTXPgn/D51p
uafWfDqRSH2R8Y1C18odOCCZmUgkEsquxdDnP/uzaPFqIhHV/WGWiH58wKJi
N2siEdlwd38qWv6Mj6fn1wQiNMynkYku1H3y4Wh6AtmcnSqTiw7cOO+e7pNA
BO7qbCpwob/P5Xe4aJNA+A9/YS1BT6//Fee5J4HwiVyklNH7lWRZWCOSQHin
GH9Wov3TOIS0VycQntJnPR/QbTXnmrp/xJP1jxU/NqAlQ1raHnTEk3Unqks/
o4+mvJFVq4onXNtOpLfS8323r6MzN55wLM286ET3XlrXcTIxnrDV+gZ1o+es
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
r2mvwtXR2c1NSjy1nZcOSa/C/8a/ob8=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
iwp2SgYE/A9vv53q
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
6BtvupeNtoyBq/bPAQpatI1hzqp4FGQf33rUiQ71un9MlHkUrE20H/RsrH9y
Jk9Szwg8Oy5iMbAxXqhLcdGbEfjTPH2CQKdJGTt+Vx6BPA77qQW0cKAZ3bDl
MFCHNbuXNuYf/8jGSngYtmcLk9fQst4NE9tGhsDxwlQ8vR1JiakxKFdoYhCO
P72pwYU+a53ue/trP1y7oSGzC82mLtPyU6MfwsWPHtyDPjqayJJY1gdTbZMr
B9Gq2vsowc97IXO7baYE+ljd3MThY93QO3YuRgbtvCfuvF/oV2DOE/JVQG93
vDIu870LrC9OGJ5GN+gambbHdIJAtDWzHrrEKzyKp7sNUnZaWTui3wBNRs5Y
HRxJaH5zD12w7axapGwt5PHJTrii+TlGOnaGVEO1MLOtH1qi/5W/1SESTCq/
vRmFTreW9Gvz+wROtdvfPUfnHf4vSWNrPqxpuU8loFUiL7S8TsiGh+1U4RR0
QoXSTrqr74DdUMs+Fb3aksQt9jQVng3mv89A9zZx8ZW1JgKv+b6Z9+j++b8N
upxPIGMiQCQHrVej5fI65z6I3/55q2Ajn6XtX98cM4eShcsfi9Fbght5jBjM
QcW14mc52rOyKfi8hjk0/RMUJaEfu7er8USbg/7DJw41G+ZW4nIcNYchlpWs
BnTM5eDVuxIWYB1xY64ZrZR9OkElyALc4iUcuzfWk7+Mu/WkJdDzJeT0o6PD
7Bd7X1hCeBr9r2G0h50k/zl6K0jO7nSaQKfs/W8n84AVCMko5k2jLx40+lam
Yw05pWkLc+jiS7sCEuusgVzjcncFTbbrb69rsAEtreH8dbRNyX2xZ5dsoatN
7Q+tPX7+hZrxPCFsYXyA22ULurfA2FqR2w7umPkWbkUrxTcKxZbZwcr45OJ2
NOOCr5iDjT2wLZTc34Pe9l/b/UM9tyDmwaEiXvTjz4cE+hNvA++/sOVD6Ji5
HsMxKQcQZ7nmegz9QLgDXnHegZLH1cVi6BOBLMHrQXdAZcfxVSk0a8IhXy4G
R9Dn3eSuiN5vb7ZcvdUJhlKtS5XR399evLovyQmsj7auqaK/RLn3ZUo5g6v0
S4/zaP5N19wUXO8CXSlLuR56kVyQpCR0D8JOOa1fRstobJe9O3IPkjRVvEzR
xxZpf1vdvg+Cbe8+m6Nz79Q2eKg+gJzLOzbZoO3J1tUqQq5AvvHN+w466X6q
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
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {9900., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Resource\"", "\"Consumer\"", "\"Predator\"", "\"q\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7164263044486957`*^9, 3.716426325318842*^9}, {
   3.7166348716441383`*^9, 3.7166349371929274`*^9}, {3.716636040083956*^9, 
   3.716636070071622*^9}, {3.7166361479727488`*^9, 3.7166361637256365`*^9}, {
   3.716636228228302*^9, 3.716636257527093*^9}, 3.7166362955032825`*^9, {
   3.716636483563504*^9, 3.7166365443049293`*^9}, 3.7166366138947973`*^9, {
   3.716636651652425*^9, 3.7166366685240517`*^9}, 3.716636700887796*^9, {
   3.716636742664427*^9, 3.716636750292992*^9}, 3.7166368093849735`*^9, 
   3.7166370605367236`*^9, 3.7166371514063826`*^9, {3.7166372644699383`*^9, 
   3.7166373647957067`*^9}, {3.7166374059359446`*^9, 
   3.7166374145265346`*^9}, {3.716638564572791*^9, 3.716638586331994*^9}, 
   3.716638940494322*^9, {3.7166390006156135`*^9, 3.7166390467304077`*^9}, 
   3.716644607137973*^9, 3.7166476616300316`*^9, 3.7166479073024645`*^9, 
   3.7166483841932373`*^9, 3.7166484871667376`*^9, {3.7166490092889667`*^9, 
   3.716649031985561*^9}, 3.716649119527096*^9, {3.7166492358230076`*^9, 
   3.716649291403473*^9}, {3.716649345701353*^9, 3.716649359185215*^9}, 
   3.716649390891012*^9, {3.7166494243940024`*^9, 3.716649433112195*^9}, 
   3.716649527930748*^9, 3.71664959915987*^9, {3.7166505276174173`*^9, 
   3.7166505505413256`*^9}, 3.7166506605947776`*^9, 3.7166507580892572`*^9, 
   3.716725497494626*^9, 3.71672556072859*^9, 3.7168060919334726`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Res", "[", "t", "]"}], "/.", "s"}], ",", " ", 
      RowBox[{
       RowBox[{"Con", "[", "t", "]"}], "/.", "s"}], ",", " ", 
      RowBox[{
       RowBox[{"Pred", "[", "t", "]"}], "/.", "s"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "9000", ",", " ", "10000", ",", " ", "0.01"}], 
     "}"}]}], "]"}], "//", "Mean"}]], "Input",
 CellChangeTimes->{{3.674929472018119*^9, 3.674929472028632*^9}, {
   3.7166403831597695`*^9, 3.716640387537998*^9}, {3.7166404199706545`*^9, 
   3.716640429732009*^9}, {3.716640514112812*^9, 3.7166405469121847`*^9}, {
   3.7166405908490596`*^9, 3.716640591911962*^9}, {3.7166406530100083`*^9, 
   3.716640677319854*^9}, 3.7166446817639637`*^9, {3.7166447414210873`*^9, 
   3.7166448350605617`*^9}, {3.7166448650849447`*^9, 
   3.7166448947790084`*^9}, {3.7166449515551653`*^9, 
   3.7166449775241303`*^9}, {3.716645017628587*^9, 3.716645018684456*^9}, {
   3.7166454959235053`*^9, 3.716645504885532*^9}, {3.7166455402700353`*^9, 
   3.7166455595185485`*^9}, {3.7167253384465866`*^9, 3.71672533951102*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1.1089986934525282`", "}"}], ",", 
   RowBox[{"{", "0.2794981533585923`", "}"}], ",", 
   RowBox[{"{", "0.6843128972272813`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7167255200936723`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.07428218884992649`", "}"}], ",", 
   RowBox[{"{", "0.7515303579720101`", "}"}], ",", 
   RowBox[{"{", "0.`", "}"}]}], "}"}]], "Input",
 CellChangeTimes->{3.7167255115967493`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.07428218884992649`", "}"}], ",", 
   RowBox[{"{", "0.7515303579720101`", "}"}], ",", 
   RowBox[{"{", "0.`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.716725511627867*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e1", "=", "0.09"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e2", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]", "=", "0.001"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqs", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Res", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"r", "*", 
         RowBox[{"Res", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Res", "[", "t", "]"}], "K"]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"A", "*", 
            RowBox[{"Res", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"H", "*", "A", "*", 
             RowBox[{"Res", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"q", "[", "t", "]"}], "*", "S1", "*", 
            RowBox[{"Res", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", 
             RowBox[{"q", "[", "t", "]"}], "*", "h1", "*", 
             RowBox[{"Res", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"B", "*", "A", "*", 
            RowBox[{"Res", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"H", "*", "A", "*", 
             RowBox[{"Res", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"M", "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"S2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", 
             RowBox[{"q", "[", "t", "]"}], "*", "h1", "*", 
             RowBox[{"Res", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"e1", "*", 
             RowBox[{"q", "[", "t", "]"}], "*", "S1", "*", 
             RowBox[{"Res", "[", "t", "]"}]}], 
            RowBox[{"1", "+", 
             RowBox[{"S1", "*", 
              RowBox[{"q", "[", "t", "]"}], "*", "h1", "*", 
              RowBox[{"Res", "[", "t", "]"}]}], "+", 
             RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
              RowBox[{"Con", "[", "t", "]"}]}]}]], "+", 
           FractionBox[
            RowBox[{"e2", "*", "S2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}], 
            RowBox[{"1", "+", 
             RowBox[{"S1", "*", 
              RowBox[{"q", "[", "t", "]"}], "*", "h1", "*", 
              RowBox[{"Res", "[", "t", "]"}]}], "+", 
             RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
              RowBox[{"Con", "[", "t", "]"}]}]}]]}], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}], "-", 
        RowBox[{"d", "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"q", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"v", "*", 
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"Res", "[", "t", "]"}], "*", "S1", "*", 
            RowBox[{"(", 
             RowBox[{"e1", "+", 
              RowBox[{
               RowBox[{"Con", "[", "t", "]"}], "*", "S2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"e1", "*", "h2"}], "-", 
                 RowBox[{"e2", "*", "h1"}]}], ")"}]}]}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"S1", "*", "h1", "*", 
               RowBox[{"Res", "[", "t", "]"}], "*", 
               RowBox[{"q", "[", "t", "]"}]}], "+", 
              RowBox[{"S2", "*", "h2", "*", 
               RowBox[{"Con", "[", "t", "]"}]}]}], ")"}], "^", "2"}]], 
          ")"}]}], "+", 
        FractionBox["\[Mu]", 
         RowBox[{"q", "[", "t", "]"}]], "-", 
        FractionBox["\[Mu]", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"q", "[", "t", "]"}]}], ")"}]]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Res", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "0", "]"}], "\[Equal]", "0.5"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Reap", "[", "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"eqs", ",", " ", 
         RowBox[{"{", 
          RowBox[{"Res", ",", "Con", ",", " ", "Pred", ",", " ", "q"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Sow", "[", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Res", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
              RowBox[{
               RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
              RowBox[{
               RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{
             "t", ",", " ", "9000", ",", " ", "10000", ",", " ", "0.01"}], 
             "}"}]}], "]"}], "//", "Mean"}]}], "}"}], "\[IndentingNewLine]", 
       "]"}], ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "0.2", ",", " ", "1", ",", " ", "0.1"}], "}"}]}],
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.716647003487494*^9, 3.716647124715548*^9}, {
   3.716647190405513*^9, 3.716647281122861*^9}, {3.7166473145899825`*^9, 
   3.7166473271458063`*^9}, {3.716647395754059*^9, 3.716647426322345*^9}, {
   3.7166474641428204`*^9, 3.7166474670954256`*^9}, {3.7166475088681464`*^9, 
   3.716647561124007*^9}, {3.716647635166319*^9, 3.716647638435266*^9}, {
   3.7166477583019323`*^9, 3.7166478936302795`*^9}, {3.7166479654966335`*^9, 
   3.716647967211646*^9}, {3.716648010337962*^9, 3.7166480183298388`*^9}, {
   3.7166510165311394`*^9, 3.7166511417577505`*^9}, 3.716651174877387*^9, 
   3.716725349636004*^9, {3.7167676327341185`*^9, 3.716767633244707*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0.6139399219756759`", "}"}], ",", 
       RowBox[{"{", "0.5716876337344015`", "}"}], ",", 
       RowBox[{"{", "1.7627019608017622`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30000000000000004`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0.8401945686522813`", "}"}], ",", 
       RowBox[{"{", "0.37234236167890505`", "}"}], ",", 
       RowBox[{"{", "1.9227667201902308`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0.8417105819081084`", "}"}], ",", 
       RowBox[{"{", "0.31277809260489187`", "}"}], ",", 
       RowBox[{"{", "1.6220589828441798`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0.9237414698908366`", "}"}], ",", 
       RowBox[{"{", "0.27343731803046684`", "}"}], ",", 
       RowBox[{"{", "1.518786512845391`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6000000000000001`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0.9653574376165427`", "}"}], ",", 
       RowBox[{"{", "0.28120642708324317`", "}"}], ",", 
       RowBox[{"{", "1.1821920687599048`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.0052656491767533`", "}"}], ",", 
       RowBox[{"{", "0.28768900973048417`", "}"}], ",", 
       RowBox[{"{", "0.9921594271542904`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.058591679477569`", "}"}], ",", 
       RowBox[{"{", "0.2811535949878221`", "}"}], ",", 
       RowBox[{"{", "0.85572792745342`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9000000000000001`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.0813044020513916`", "}"}], ",", 
       RowBox[{"{", "0.28216593495397924`", "}"}], ",", 
       RowBox[{"{", "0.7621240531844391`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.1089986934525282`", "}"}], ",", 
       RowBox[{"{", "0.2794981533585923`", "}"}], ",", 
       RowBox[{"{", "0.6843128972272813`", "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7166473543783517`*^9, 3.716647564365579*^9, 3.7166476399393463`*^9, {
   3.716647812910637*^9, 3.716647894607871*^9}, 3.716647977534303*^9, 
   3.716648022948599*^9, {3.7166510235865707`*^9, 3.7166511487093706`*^9}, 
   3.7167253686048346`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e1", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", "=", "1.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e2", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z", "=", 
    RowBox[{
     FractionBox[
      RowBox[{"0.7", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]"}], ")"}]}], 
      RowBox[{"0.1", "+", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]"}], ")"}]}]], "+", "0.3"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Res", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"r", "*", 
        RowBox[{"Res", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Res", "[", "t", "]"}], "K"]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"A", "*", 
           RowBox[{"Res", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"Res", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S1", "*", "z", "*", 
           RowBox[{"Res", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "z", "*", "h1", "*", 
            RowBox[{"Res", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"B", "*", "A", "*", 
           RowBox[{"Res", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"Res", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{"M", "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S2", "*", "\[Alpha]", "*", 
           RowBox[{"Con", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "z", "*", "h1", "*", 
            RowBox[{"Res", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"e1", "*", "S1", "*", "z", "*", 
            RowBox[{"Res", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "z", "*", "h1", "*", 
             RowBox[{"Res", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], "+", 
          FractionBox[
           RowBox[{"e2", "*", "S2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "z", "*", "h1", "*", 
             RowBox[{"Res", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]]}], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}], "-", 
       RowBox[{"d", "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Res", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"eqs", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Res", ",", "Con", ",", " ", "Pred", ",", " ", "q"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Res", "[", "t", "]"}], "/.", "s"}], ",", " ", 
      RowBox[{
       RowBox[{"Con", "[", "t", "]"}], "/.", "s"}], ",", " ", 
      RowBox[{
       RowBox[{"Pred", "[", "t", "]"}], "/.", "s"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "9000", ",", " ", "10000", ",", " ", "0.01"}], 
     "}"}]}], "]"}], "//", "Mean"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Res", "[", "t", "]"}], ",", " ", 
       RowBox[{"Con", "[", "t", "]"}], ",", 
       RowBox[{"Pred", "[", "t", "]"}]}], "}"}], "/.", "s"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "9000", ",", "Tf"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Resource\>\"", ",", " ", "\"\<Consumer\>\"", ",", " ", 
      "\"\<Predator\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.716647003487494*^9, 3.716647124715548*^9}, {
   3.716647190405513*^9, 3.716647281122861*^9}, {3.7166473145899825`*^9, 
   3.7166473271458063`*^9}, {3.716647395754059*^9, 3.716647426322345*^9}, {
   3.7166474641428204`*^9, 3.7166474670954256`*^9}, {3.7166475088681464`*^9, 
   3.716647561124007*^9}, {3.716647635166319*^9, 3.716647638435266*^9}, {
   3.7166477583019323`*^9, 3.7166478936302795`*^9}, {3.7166479654966335`*^9, 
   3.716647967211646*^9}, {3.716648010337962*^9, 3.7166480183298388`*^9}, {
   3.7166510165311394`*^9, 3.7166511417577505`*^9}, 3.716651174877387*^9, 
   3.716725349636004*^9, {3.7167268198852434`*^9, 3.716726989996378*^9}, {
   3.7167270569327817`*^9, 3.716727145702111*^9}, {3.716727185015398*^9, 
   3.7167272979737244`*^9}, {3.7167281149065585`*^9, 
   3.7167281282175436`*^9}, {3.716728242634983*^9, 3.7167282575853796`*^9}, {
   3.716728350435249*^9, 3.716728514611998*^9}, {3.7167635326897326`*^9, 
   3.7167636377779217`*^9}, {3.7167638199192595`*^9, 
   3.7167638200745487`*^9}, {3.7167645517159734`*^9, 3.716764764612726*^9}, {
   3.716765384743555*^9, 3.7167653923067274`*^9}, {3.716765425590708*^9, 
   3.716765426378948*^9}, {3.716765530191306*^9, 3.7167655460921583`*^9}, {
   3.7167655872942095`*^9, 3.716765601463473*^9}, {3.7167660504895077`*^9, 
   3.716766063971997*^9}, {3.716767066655929*^9, 3.7167670794445457`*^9}, {
   3.7167671154702654`*^9, 3.716767143122272*^9}, {3.716767255067255*^9, 
   3.716767262781028*^9}, {3.7167672982776403`*^9, 3.716767326249859*^9}, {
   3.7167673741416683`*^9, 3.716767458838422*^9}, {3.7167674930898027`*^9, 
   3.716767510276764*^9}, {3.7167675464985456`*^9, 3.716767570748131*^9}, {
   3.716767610060051*^9, 3.7167676140107193`*^9}, {3.7167676506702676`*^9, 
   3.7167676509248514`*^9}, {3.716767704497145*^9, 3.7167677597653227`*^9}, {
   3.7167678239904904`*^9, 3.716767871428581*^9}, {3.716767929302738*^9, 
   3.716768017924445*^9}, {3.716768157932191*^9, 3.716768174098441*^9}, {
   3.7168062970031843`*^9, 3.7168063867785397`*^9}, {3.7168064262089567`*^9, 
   3.7168064267118454`*^9}, {3.716806460134986*^9, 3.716806469443643*^9}, {
   3.71680714017834*^9, 3.7168071637547646`*^9}, {3.7168087689696884`*^9, 
   3.7168087950103793`*^9}, {3.716809502151121*^9, 3.7168095113960285`*^9}, {
   3.7168109358093095`*^9, 3.7168109643073673`*^9}, {3.716811048891014*^9, 
   3.7168110999306245`*^9}, {3.7168121429828415`*^9, 3.716812151987236*^9}, {
   3.716812221802247*^9, 3.7168122489488387`*^9}, {3.7168122860930176`*^9, 
   3.7168123214833097`*^9}, {3.716813191664728*^9, 3.7168132071173744`*^9}, {
   3.7168132649961386`*^9, 3.71681326566846*^9}, {3.7168133269257164`*^9, 
   3.7168133358356037`*^9}, {3.716813394414093*^9, 3.7168133947958097`*^9}, {
   3.716814016316137*^9, 3.7168140412279468`*^9}, {3.7168141253542128`*^9, 
   3.716814163086669*^9}, {3.7168141931644535`*^9, 3.7168142041235013`*^9}, 
   3.71681427803843*^9, {3.716815360182547*^9, 3.7168153748271055`*^9}, {
   3.716815416089453*^9, 3.7168154266515646`*^9}, {3.7168155199410787`*^9, 
   3.7168155448675804`*^9}, {3.7168158147021875`*^9, 3.7168158272803864`*^9}, 
   3.717181740092554*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1.9094716007858923`", "}"}], ",", 
   RowBox[{"{", "0.06937122338762264`", "}"}], ",", 
   RowBox[{"{", "0.10681945327403579`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7167680373125954`*^9, {3.7167681603880043`*^9, 3.716768175736432*^9}, {
   3.7168063305081635`*^9, 3.716806388798653*^9}, 3.7168064286549973`*^9, 
   3.7168064626569014`*^9, {3.7168071451662984`*^9, 3.7168071655222254`*^9}, {
   3.716808772158008*^9, 3.716808789591022*^9}, {3.716809504136565*^9, 
   3.7168095128970013`*^9}, {3.7168109475606604`*^9, 3.716810965876542*^9}, {
   3.716811075113249*^9, 3.7168111013557744`*^9}, {3.716812147673604*^9, 
   3.716812153594663*^9}, 3.7168121887105775`*^9, {3.7168122250767593`*^9, 
   3.7168122506182942`*^9}, {3.7168123020526123`*^9, 3.716812323252067*^9}, 
   3.716813209159107*^9, 3.7168132676035132`*^9, 3.716813353456526*^9, 
   3.7168133966845207`*^9, {3.7168140350776873`*^9, 3.716814042906012*^9}, {
   3.716814156339687*^9, 3.7168141649741364`*^9}, {3.7168141999129515`*^9, 
   3.716814205862192*^9}, {3.716815356640514*^9, 3.7168153764467325`*^9}, {
   3.71681542244932*^9, 3.7168154282997727`*^9}, 3.7168155391175704`*^9, 
   3.716815819714724*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwc3Hk4VW0XBnBKiEpFiiSphMxK5mcXScoUlTSIEhVlFqFJxkpokFmvJEkS
ZSrOMWSmUikhEaFMSTjTd/v+eq/fdQ5nn72ftZ51t7d3jcPZPY5zuLi4eHm5
uGb/q6b2mIvrFo16uevqpc/r2WTJ7rBtG2DtbNnASxvZZNTRMdgM/q3+tltU
lU1y7q3mT4JjLr0ZF9BlEznuW0Lat2nUH94kvdWWbCLVEiDpdYdG0WKXtSid
YxPOwIGjCXBr6fz3dQFs0jl3y306zCNPm2tziU0St4ytX3KXRhkPOJUZRbDJ
ihRHxRzYu/r6hvMJbCJ0xkz3ZxyN4vWXjT9ZwibDoRuDhO7RqJCs5XbKZWzS
kMZfrgG78dbqDdDZJOID3eAq/E746ZBWHZvw6m3ZJR1PozbO7Txg1cYmbEEp
20MJNEqu9daG0HE26VjPSrgCi13Jd0j9yyal5EtHFjzvrSPn6RSb+Hvesp+G
o+XrOvPYbPL3C//JO4k06o1S8k0TAQ759WjMtyWJRqm6nDJoX80huz+v52PA
kpsfKqRIc0g2v+2d9ck0Sp9npvfAeg457UTP94er0/i35ctzyOC62LF1KTQq
KGbvYq7NHPIzZdNpv1Qadb7F1n2hMYcYNzvP/Af7l63T2W3CIZnsxPAmWPPA
84QruznE6fC8zLVpNIoZKvvwqwWH9Il/7G2EJ55u+611gEN6b/sekf6PRv3r
YJ4vcOYQw6rHv3fDSkzeR2GnOCR9oivAFy464Pl2rwuHHLMyTmiARcTWO3Se
5ZDvi8XafNJpVFbivJtZPhzyLbLYsv4BjWpx+hyvf4VDqJLhb39hDemc6aJg
DkkdlHaTyqBR17T+OKuEcIjdzsgb3nDu+Of8ReEc0sl7qH71Qxq1a2309Zgb
HNJ+iWXolUmj+sUFJSriOGR8WnlOIrxS7U5t9z0OEfBwKKuAVVYe7WbGc4im
wxst4Uc0ynbHJy/ZJA65tS1aKQ9+cDRyzb40nP+561eMZtGoBs3+pqWP8H3O
7/+w/DGNSmvUFGfC/n/CYwg8aLXG4nsWzmfP8IIouD0p/86DbA6ZV1nIrZSN
9eSzTJ8/l0NeB+8eOv0E6znIhNfgBYd8YAZlxsKhvT+rWfAvr2eOJXDVlEVd
wUsOEXcU/SaQQ6MC/7U/WlXEIb7bv7U+ggckf25qLOGQG6+WxryFW9RVfDxK
OSRj83bzaXjp9muiy15xSOv6rFrjpzQqKYbn4p7XHKLC6/W6Hw7PfbYlp5xD
dgRlnBfKxXqylnmhT+OQI5Ntmltg98j09Ab4Wp/e8xB4/8Cdj9/oWE/VfJnr
n9Gocev2B4OVHMLR13Y0hTc0qL86UcUhoi9dpL3hgWd7d36DDR++TayE7T/e
fV1fzSFpoQnRx/JwPTbvXxJcg8/bQkIj4ITgyMIBWLz/e8Az2OjD+97dtRwS
YyTvzIGdJgUqBes4xGyy8bDMcxr1xPK3uxMsmOFuZQprChkllMPB84r0E+DH
juFWp+uxngoObaLDjkFy7aUw8ziX/AAco9jSLNjAId6VO5ZtyadRv6QOjKbB
J658HHoHS6sYheQ0coi0un/3NJxp3jQ+CHd+X/VJqoBGMZZp/7euiUP2b3Ok
n4FDSw0LomCRcf7C27A/7TcfDW5Jy35SCk/lPrg0AhtzT8QJvKBROUGF9QbN
HMLz7O4NVTi2bzLiJFx+VCfYBq5pP2h+DQ5Y3OV3AU51TxXKhrXKL5/NgJWO
udNr4MmzMo6NsPKhqMPf4bzVdbYTsEp1/4cp+Eyzq8XKlzSKyjgqtaCFQ+Qv
LDHaBrtwf1OVgPuUCnROwmdEtdiy8P1OG9WbcBavsbcafOQGU+YlPMDncU0T
XqmfKtEJXxgZ2qIDt/02WDqvkEZ1Hh911oZvJfXzKcAZI31CGrCFaSRrDzwR
liepBC9gKf3xg3murQyRhmuy3/1MhRUCkjYLw8GHfDrfwHaXz0hwwdQC8dZh
WO6wq9wAvg+r5FXtsiIaNXn7s0kTXHzavkwX7nuw9cxT2GflvIJjsH3clYuz
50+tPjMrAu7I63d1hIf9d6c+g8/elZLWhrPkR2+3wbovNcIE4BNfYiM58BOe
4IiPuF7SEVsuyRTTKH6fBUuT4S6tdh9T+ERYIZ89nDgQ5OIFM0xOWa+Gbe5J
OyTAStl5XW1YLy1TJ00H4BDfE8Z68LXMhQaLS2hU5GjlaD/Wm7HNM80tMF27
2eU6THs5tfYq3KehdbIG6zXIKVEsGzbN+PTkMKy9nBJ6D7vN+Wz6G+s9zyd0
RqqURu3zXyPOQL2M6FzW2wVLlW/Id4UVuAMvesPRLwz4PqO+MiI9eOvgV5Hn
Vtx7wyE9Fq47J2bf35/q/Rv1KSXqfE3yFda/alqNFpyQenipJ9xzw8arCPXe
5mizNwkWkaCO/KpAvW+0insDP/O8dlQUvllgLCnxGuc3NPalGfpHcJ26fBX8
fLdmyk70I1qUkusI3Lds0TYl9Cu2tVyuWBmN2nMqvYcP/excl6TGGdiF6cuM
K+SQgnQxvzg4q+J+qzn64fhJkVI6PHXEyWOmgENcJ+ZvW16O3+femiX3HNez
iOfqVvjC2Ws3nzxDvwrivDkNN10cbFuL/usw/69pOdx+TUisD/15n+S3Aydp
NOqnQdXiFw84JLbnS2IszCV4hZf+H65f5oeuV7C//2eRV9gPTNTrHZfSaZRw
4H+ZQdgvQqeqMnXhbKXDuoYJHFL5qnzoBEwa/ef8w/5DjF+4l8A6jLNrpG+h
nhc+y/8B98q8croXjfX77vE/oQoaJbN+gMbA/rXpcFrgcXjeGt5zF7C/yXpc
C19YSaOKnxpu9AjkEMctoQ1b4JjprbdU/VGvzEtCDrD0kIjKJ+ynEqG+t1/A
qukPd73Dfntgt0fbN1jmxx1nGezHd5a4rhSsolEmNpf+HMb+vTjRIc0O9nUI
OuB1lENM7Q/3hsMr9va8sDzEIREyNhvy4Xtizy8I2cz2K9Mn/NU0qvzhkJSc
OYdMV2kWPYMdMmI+vtJBfb1Xlf8Mf03vG+vWwH7fLZ/A9QbrXeFdba8qh9Sx
JALNYVmJm01XNqB+NnNv/Q0LjCddXroE68dg5plIDY06eFZrbLkgh1y1/COt
C19e6SI7yYN+5vqDJxLm4zvbpoV5inpQWyNbS6MMCo8n13xlk03P6VoWsNRC
RnbQB8yTtJIs31lvPLKPr4lNlnY8uVYNhypxXK+/ZpNekRiL43XYf54INe5P
YpM26UhaJOwZUdNw/RabNKoEqz2He8bP3LoZySYvdvuIzKmnUX5V0m3TmEfD
gm3bUuCxebe0TTCvBsRY7XwDb5RUtv1gxCbuqbuLh+HnD54WyWK+tS3VT9Rr
oFHBLfIPZWTYRGFC+mg7XDsxM+bzj0Wajw31izahP66NKD8UxSKV7r02+rCe
a/ijQ5dYpPBCR60jbB70Za+MJ4ukJjQ/zoev1TMyxfexiMf752f3NNMonwN2
qx6JsYioQcC/6y24/on7GZNxTBJ5oqGgEK59/Kl/LIRJuCIkvHrgHs+Dhz96
MclQS+mo5lsaxT1qucbdgknKj7AGeuDt/y2IiONjks2XTTMXvUO9X5YWDfvL
IFkPkk5owS4Leo7d6WGQ27/0em7A99gBrWrlDHLKP+ir1nvsTwH+PUEBDNKV
1BR/HC6SeHfQ24VBrGmSB6Jg55ieuM5DDEL4yz70wo4l6e26hEHyNwrdEmql
Uf+dy3i2W5VB5M3t9mjDlmpOnTzrGETkDqcpCq6TdaE/FGSQiCLz68XwdZ39
dU+5GITzNWXXD7hCeX9i/OQM8eIanb/4A43a0fud4/N7hgyupWq04Sqd8ptW
P2aI3Y6bIY4wueISp985Q1pPfTO8CXsdPdW9vW2GmNxQmVsCn//vUbDP+xlS
9uwi7cfs7+PpzPvaPEM2fWi5sPgj1hPr87krjTMka0pKXwdmlz4K8mqYIasl
3JmO8PKVbvSX8C1CK74Jj77NsbBqmiECx5b4lcCKnk8YJm9nyIUQ+y198OFb
i0VSP8yQiUfP/i7+hPp6PbLWsn2GnGrkzteBRWL25R34PkO6Ri09TsBmP4yF
8gZniLXIfZVoWPGNtLL5xAyp2zI+XAILxUzekebMEHJw25M+eKMn/1FxnL/8
oJjTS9poVJRp+741K3C+73+X04WPPN2/abUMzvfA5Yxo+IHRG7NoQwYJX/D+
eCmsNC9gV601g7CV167th3NUzIYvOjLIgE9Fiu5n9DNrm8ThUAZ5zcNzrx/m
Wbq9+mojg6jLWu9f+gX1ERi993Ing2TuSl+mB3eJ3vJTGWGQ2BjDmBj4nO5W
BR8hJnGWuhqp147r1c10UNzFJJfPG112gsUTfh/osGGSpI98ftHw5d0FMuon
mOTdtYgTP2DZHkrnxwUm0Z2O2nr9K4268bFm07+nTLL4Xfy/rx2YH4f6ssx4
WURe8dAwbyf664vxyCOLWWR72KofKnC/01uvneIs4q+f+i4YVn625+lzRRbp
zXrwRKEL/W21v9CvPSzy8krusYBvNKqNR/bbwbss8q7T3TYDZtP+bXFIYZFf
WuqWLXC8wdaGXQ9ZRGq0QH9dN4062aRsUveCRSIOlYg1wHLpip8vtLLIkc3V
zSt7ML87PvZbJ8gm526GVm+H73148+r6EjaJHTJ+dRb2dttq+205m9Sk1WdV
wFcOpDG2rWMTtUVvr57uxX7Zs0CZD/2Ht79dp+QH5qepT4FvndDvIhKOfof/
/RUuSXZhkyylg1fn92G+sHa5eMidTUx9vjTth1uFvgVl+bPJrXmf7Sdguka5
+J1rbLJ23cdQxZ+o59H/Mj89YZOJN7ezrWGJEp3TVc/YpPr03rfn4cuJ+6oz
Ctjk1PNW8TqYP27hmOErNsnb9v7JiQHMe8e4Ev7Uo5/bt7xPGcT6HGo6pNuP
fj3v5lQ1/G38rrXPIPp1pvmqYdg1IGBHxm82CR1tOqE7hPnNyj795x82abrQ
ON0G22dk0GY4bHI4uW710t80Kr//4/azohyitC3CUAsusA27uVyMQ7j6dp48
OmvHwIKXK5FfFWvzcmAp/d3/uqSQx0rfbN81TKOWyPmveY987d9eeTp4BOd7
DpfqAT0OabjV3pEDyyVcKCoiHLLabNz8M9yxebXL0m2YB8pXb1IapVHblrwr
zjbiEKEMf+Yn+Mdc86ZQ7J/pbirXN47TKLEF4jO/7Djkn9wOzl54/afXVe32
mDd6DrtfhC05YxqVxzDf7Y3c+wHeurzo8GUnzIM6fasu/EEe03/9u+AMhzTP
S8x5N0GjbNKi7wkEYH4ty5Niwb6+Ds2JmB+8ztXGbPiL/fOs6ju5C8hbQ5M+
AXBojcGFTZc55HiLJZGZpFFrM1+rLArjkJl4vha/f+iH210edsUgD1tLbkuH
36T/zFuPeSZl4eb8JviENLeb023kvYsOcWuncD1ZX1U673JIlOOro43wl2Wq
i+ITOWSdiueY1AzynVRquzXmLSW1sGhjmFZg+mdnBvL4piRVN1h/56JOnYf4
PM037mXwzaF6Y1HkbS9q5fhhBvYrEbEtGZjfKi0qxuOZyE/V+Qs0Mf817WmL
ocO1kqWOLLjN+rfaILzwY/h4WT6up81yTy0W5q/0C8W6yNsi9qf/fILXF/wN
XYZ8fdxdeEKEQ6PebzDw2IG8fMZT9pYuTHteP9INn/PW23QcFmW8a/Mrwzzv
5+T1HH570Gw6DXk6/1LJhCUXnVq3f1Xme+Tl11dabvnB2/fmlxzAfFxz9cem
NNh9mZ5RB/w1XMh7FD7aXUv7ivmaJ+bY3xvcdEqwkX3oFebvRbfO3X4Bm61Y
oqyMeX3FneubO+Fj/WU+ybBC/EtvxTl06vE2OwdvzPfW9wUn6+ElPt99eZAP
jqRL3fkDB/8zrraHnTM2a6ycS6dChMP9SuGALDufU/AqXuc5p5Av0vOeT/Lz
0CnxkWK5B8gjVr+0mpXhlNf/mofgOTLlD/fBn8naVmXkGft7DTbp8ILgsa6n
8OL3e1TrYauOk1+H4PIFn+ePw4X7faXWIx9JXvxRTObRqZWK7cdm83Jj0enY
E7CmHpd1ORzwZ+z0dfi69IEzw/BGxXOG+bCZvNVjMeSzLyfYEu1wfKzN3G1w
eGrwX25eOvVWdsDVCdb8ItAkC3skqHaHwz+FozPM4Y+Du6wewXdNl1/wgfeJ
7imugo1Ck/YnwTtXHVnQNZuny9eqVMIvP4WSv/CDmUf8Q7Dotnk7+ZFHrTep
dC/ho1P7rwZJrIDnnnlRpAkP9ng/WQfnPdSNsYOpVNcRRdi+m34qBH7D7P+g
Di9eudPgCXwt55j1bD4us25e2Qr7aWkd3gyfubF3YgZe5SLQrQJL1rQ3rOGn
Uw19R1pm83kjt8MDY/jLztcrV8EBOj8Dz8IJm3OfL4QVvM/suwOvLXsZNoPj
b8+ZUHoF6yuMhPfAET/9+Xrhk4ae6bP/fqAlzf1NYD6dknmws2r2/Pw8GFqo
Ck8N+X4OgeNuL4y2ge1fzG2yg3c0x568AJtYDkdtmj1f/OLbMmBpmWcC8+CM
banijXDu5+Mb3uL68bzIrhcXoFPfNe0GD8LPR9TSt8KBS0McxGEHuaIAZ/ho
wwGpVqyXJcfI3ii4NV9YMHx2/SRWKb6A9cl6Pi347MddvB3wk6qaqR6sR8nF
7zrnCtIplfualeFw4JXOKEvY0eeIXxXWs8Kr487n4MPZMnIH4a+Tg1QKrGCs
pTuE9a996t/YLzjKUnn+DPLywH+BdcIL6JRaWOilc3Bcx9z/tOE90nvbRlFf
kxaLrcPg1/xHI5pQfw8i7ig8hQfqcu6pw9aVEvM+wgop30aiUb/Pt8i9WLuQ
Tm3+y27UquIQN8ltK8pgtzddYaroD6muq/UH4Noz+2/vRF5uKWUeE15Ep75a
UAI26CcqB18+dYK1a30U9qP/HM269SEaTuX6abUDefrmtDujBF4S4d6qgDw9
eldhx2IhOnV24dKSj+hnUv3zXbXhbPnMa/HI0xYa/THHYU9Bx9A9yNO5rWmd
hXB48ZJHSeiPbkuW+9gvplPJKY5yd3NwfEcnEiLh+8LzKsbRb1uevqUVwFNZ
yvnkMY7P7NpCgSV06p6M7/Rj9OujSSfVN8HGa8u869Dfb/4yOnAElt7aldSG
PD0awf0gD44ZN9pIT8Hxfems+wpX/ohLTkSetpArHeVdSqf+RLz6fhx5OveN
j+5BWMJXZ6T0Do6P59f7ucKox/lL9wVcw/FZ1U4rwjd3bf32Anm55X7Gahu4
tb585EsIjm+r/elsuKO+SKPjIo7vpn70R/j0jZgtxdgPb3atfMklgn4ctsso
CHl6NPDjnL1woFHDz0JPHF/jc9kLcMvN67JKbjg+iWizR/Bdl7bKUOTp3OJd
8SzYUFdM48dxHN+/ctWMZfi8igHTTdY4PqPk/S3wlT+Hm15iv2+5fT5wBpZJ
/HtPbBeOb5NGrZkonZq0PNLstRWf7/b46D84pPbOX3cFfH55WMia5XTqeO85
vRYZfL7QiexdML3j2Oi8Nfj8J1JTKfB4zu6xPyIc4j54O8p4BZ36nb74QvkM
m9hcdu85C8vflM3XmsB8JW665S58ZtMbmXDMT4tMeLp+wMNew/kPu9gk+5GH
0hUxOnWbJTi/iYb5cqvZ5Sz4WFxcfU8Rm/h/lvv4Fl5eM/26FvPdzvndgVLi
qC8NV/O5aWzS52ze+ApWSdXJEwvEPMa1cc0PeEV9uG+SJ5sUxPF6L1iJ75/p
IvrrJJsE17ySOAjviyxL6d/LJmtkFVym4DOP5qibbGSTQ/38guqr6JR1j22q
dz2LGF7oPWIL21m9TvV/zSIbl5fnXYITDlOrdzxjkRkjX9sWuFBKxkzzDovc
zfjxyFWSTpU6l/ReO4x53JFunLka/VVhS/C/70xSzEpKbIbdTm2r63/HJGm3
/UYnYRUJ4aoCOpO4VanEbZeiU5f1T0VOpjHJwvUp/d/hJlqjyGk7JjHuPR+y
Sho/nzDePucLg+RG52wwhi+HqG+wq2GQFaS7xgO2PrFbcuwF8tA9I8Ea+Met
lRadtxhkzw6/7HHY73f4D7NgBimeeGy6ai2dqgqr61vthTxrvuSmByywUPy4
8F4GGWcaqCbBew3mqZkbMYhtls+7N3Bi8sz0Kk0Goe9/5DkO/2B9dr8uj/w2
76vIqnV0irarMePxKgaJyVv0Yge8c63KSMgSBpmx27rfA37cGPZJkZdBHBZ6
TSXCMzMlgk8ZM6S+OOPeGzi62k1XbBz51vmz9jhcNDWP6/zADElctuCrxHo6
JbuxNOd79wzhqdAP3AHvPPlH6wjyqYubu6QHnNzqxZpBfm1dlV6WCOekyEdW
Id/q1n88+ga2nr7tUYv8m35u/pxxeL/e5rlLkJ8XyOj+JyFDpwiVL/AAednr
/RnDHfBl+46oa3j968W0H+4wy+huZAPyt6FSa0giLFt8LtUJ+fxJO6/sG3j7
odb3h5HfRcO1asdg+bz6XdnI90EaLqckNtAp84KsNaZ9M6SvJ1lwB9yw5L7c
lpEZYhb9Ntsdni9+6vPh6RnyQp/HLBG++Lff4BkPg0j+0hiphqN+yEhL4nyO
GCWqSsjSqYeZTy70KzCIzUTTOyOY5+ahN4t0GaQ8jdvLHX4i/XL6xy4Guck8
8aIa5kpb6yPjyiBTj+7tH4OfettOmgcxyNH9DVMr5ehUQIGp1eMoBlHNU9Vx
hxcsUdsYnMcg75yYZSvl6VT6c/oD1UkG0V6mbG8EZ/AxjlvyMsl9uv0c91mf
+Su0UJRJPFe9MayGt1faBO7exCQi76Nr3TbSqYiiwLmiLkwScLHyVAL82+S5
uIwfk/Qq/hOshnnWn3zWd5VJ8sMOma1UoFMXPPZ6RyUzyV79De+r4FWEvOBp
ZBKHtfXZI3Cc5qENvz6hfvjPhogp0ikf4VPtGai3iHcvtFzhiB0bfiX9Y5Ly
E0apIkp0al6Idk3xatRzlKPrMWW8/8slnzMnWUTTa/6O6/CqUzJWwh4sYnTg
idRL2ODvB6t7/ixydO3f9wIqdIopHe5iEskid14Ga+fBRZfXnNv9mEW4v/3H
x62G7xu1/K9cH4ssqtrRLQ9f/ROUteQ3i0hkDRVbw6EzGzu//WERDS/1M5lw
mLmO5hZuNnHhr2g1V6dTq3f9LWoUZ5NPKt/Tkjdhv38Y8OH3TuTRZSHna2BJ
i/ldPuZsMj4jt3cczpx4kffLmk0WVLnzG22mU1qCzzpT7Nhk2wHus7/hYX/F
xQpebPLkkpSu7hb0/yqGoWg8m3g8pRscg50/yoWQZDbR6Di+KwLOrj0ef/A+
m5RrPrJtg+vXvBx3yWKTdyOqfl6adIp/ca7GNPrz1GGDF9ladEpD3u/y149s
8iryx6v3sNPHsV9GX9jkclFo1QzMOnv1ZUYHmwgua2g11qZTcys0Z4x62USy
wfpPL6y3J5O1cIxNDLVPqKzSxf7Ll3jlHT+HzHfm1zSEt/Y6hN8XRN66nUVO
w52HJn+fXMQh+8eGzYrgQJMUwy5hDjmV6eu6Vw/f77ibpJMk9lvR8Kzr+qi/
J5m8c9Q4ZK/hxrx82GVr0S7rTcijHo1F7fC2rsVXUjQ45L/GJbVyBPNYUdSa
NToc8iI4vr8KjtDq9ntvgHlu/PE6NkWn+MK2u/Niv5XWeOAnu5VOfeN6MSi+
j0Oc/JKb9sBnhQ7EyNpwyDjn5rmH8Ik1k1XKhziEf6FPg8U2OhUUsmb9KPL1
5g2U138GdOqfvtFzEw/k/VNatY1wnui7QQbmgfInapJT8KNrVMxDb+TTTetr
dhuiPwxn+wyfwzy7VUBiEg4Um/DSRb6+cbC1wtiITp0vMlXrj+CQ1uTGFZ5w
YmTe4h2YX8S+V7smwb4PNh64fx35y7lo+Ti85p3LkV03OaTYO/l0wg46tcW+
J8kZ+bo/yll42JhOLfTb9N+XZMy37+2dV+xEvzm+eXIS85SH6MFX2+AffNfd
hNI4hJ1o6nQXXlJ9Zc5mzF8iWWollAmdGnqqlW2FeY2qZDrE7kJeMUio7sO8
p2cx8aMY9pawbih+ivn465Dzd5jODB2OzOWQTRNfzqjuxvo09UxZn8chsuuK
/JvhFW4rtm4p4JD1ubmsSVj0n2vpBCytm3lR0hTry6bl/FPkbQnruyGusImV
62cJzKNCwd4xgmb4vlvEr3wq5pAFi12XqcNnV3+MvVCC65N4PM4WHn6fxbce
8+2cfKvkR3ClzKC0M+bfyR7VrB3m2H9FU440I493GgzTrlhgfdwraFiLPN3e
/MPwMdxkd4vrv9n7Vwc73ryDu79UPV2NefydZ0PjGks6NfrF+NISzOtV/2V9
LoOP/dMZ+Ih5nq58/1A/3FV4fHQr5v/XJfe6Fu3B9ch0d82CC9+H/TgM//sX
R/NEXsie6zTGgCsnflztR754FHXEa60Vncq/e/6fHvJHxsp9/0zg1UI8tdFw
qvp21j144SZDf1Xkl6Qy3Ys0eDJHxjIQjt+1ae4A7D5l6VMN3zq2dr6mNb7f
0g13LZCHokfEr9nBsdEFIdHwjfNLhULh2m2XnjTDYbHcyz7CWv9ImAHy1tXV
03dZ8OGdqsp+8OXHo+Lr99IpMWps7DF8vqJLygteFJPziB95buq40lgyPGXo
ObR59v4qbyCtFl4eYpM6mwcnHtZHT8CKJ6JLr8IeO8UdVu9DnnMJUMuERwed
1UxgHprtRPXs/ehrL+d4w6evuU50w78Ued+nwP2Tf9dNwyebrf+rg9dL9fnO
3q/uc/vP8y/s/ajv60r4+NJxA6n9mGfkH2zbAH9/TonsgkeWNt+dvb98dG9U
rzc80LKkXhXunOzIT4XfqYnUz+bpQ3EKV+vhD9tbgzfCX7TO752Ez+pw9ayB
97fXrl9jg7xnub5l9n50a8CKyV2wSlWLBje8R9Kp2gcubY3iHsTxtpQV3EmD
hz7Yic/ejzaz53FqgHd9HHN6AjfMsdryDw5PnmgOhU3S0/ikD9CpBzvENQ/D
NdtHP+2GUwdFQhTh7f36mb6wzsprKVO4HvSw6+fuw+l725xew5T8V+NG+NN6
1bIg+HW9vNgUbMtKvaoF67r6DUjbol+ZqiUM4/oXL6opMoUdw0a6kmDNXNGI
c7MellPfAav/eS7fBI+wLp4NxfrKvTWHMQWnuacISsJKGpb1aw/SKdPMl6ty
sF7l/YZP+8Hiij3zirG+M8X1dNNhV8o6eDMsUxq5oBm+Yy/V+Aj1sIYj+2Td
ITqVcimMLwD1kpzqG2gOv6Afi/uM+pLYVm3qDwvPDKj8/9+3rh4bboZv1lZk
0FCfd2TyXs/Ay+W0V7BRvyI1XFHrD9OpEtPRfFVYSDBZ+Ty8MkktKBB5+lr2
L84DOOHOctXbyNMCZjotLXDenGOi/yFP80a3uckcQb8RbHVIRZ4OVtuw1RJW
KSYkCv1kTqv3kgD4iPm+zZ7oNyxR4by3s6/Ha6uLoT/5F9pfZsIzuV6JX9C/
pg7k7tlgh/66hv97FPL0RKLpnwBYf3D9f63I00PSYZtkj9KprE/Tc1+hvy5i
7tDbA39n/tZa+QT57wOfUcDs64eOfD+FPO0TGrq/BebxjWJ+RX++d3TH0RlY
KfXeXTbydKkW38l19pjPuKvYQuk43l8h/ufgwU27fblS0X+rjK7ch3NenU3u
RJ42Tua91gCbd318lYU8fcMiJEnKAeufOjkpcBf7bcHV8hr46p4HI1+xH+nd
2F47Div8Lrgtgf3qqNO8dxLH6JTVnuiZ7aHoX2JXe9zgf17qsVaXOKR23PBX
PFyXvS9KIwj1XM/ztxK+XTXQxnWeQ1SDgnnFjmP9sB/lGntxiPV+QyEDmLW/
fKASedpHhWeFK2xln1q93hXf7/sVOdrs+zX6o2Iccfw7ruw+6Yj5Zgdfz9y9
HHJaymBvLLw32/7VTQt8n+k5R17B9/KW6zCRp1sfXz675ATy0vHR9tPbcPyL
L8cUweLLu03vKHLIlYGtCT2wE9e9Xi5ZfB86d/pCJzplnLHAzEB69vmrSwX2
8ND6ybm7RTnE9/PFtvnOdOrr+gRTKyabxOdR3erwo8joUYfZ5/siuQYPw8KP
w/gNhtlkjv5FxjPYpKb8oxvy9I37FyRtT2J/5D7y1rmMTZ6dJxuC4S1cMnO/
v2CTVmuOcg6svZphvC6HTcT5Lmydcwr1zh6I5Epkk4zTQcez4K8a925xebPJ
xeu6CW/hDas89h45zSa2T2feTsE9tX+qQuzZROiPD9lxmk49LxOL2WzKJuf8
z4r3wrYFwirsNWyyJ1HRUtAF89zVhMB0UTZReD0UqgbbTgaaLxVkk25u578X
YeGnU10GmIdNwo+2rHJFPg8WF2SXs8i6x5J822GTHbXnup6zCLvhq54LHH7O
XDA8g0WeLz7wuBgWydFM1MA8LhFnGbL/DJ16Zv50n9AeFhnJ2KYbfRb9T/WN
bvVHJqmr4fIshCvu5r3KrGaS9MHXj7pgjRWKO06/YBIbJZ3lSm50qj01eyTx
NpPQC9TH62ADxRsRolZMkvhpTHYcNjxAbTi0jUl8pp/aibkjP7zcp52myiQb
9RQanWAJf5Vc/cVMcqtyXSaPB52S+apW69LEIGf6vnduhBeH1flavmYQY/60
ZVawXX6bo3MOg7B2rbqSBvtq6quYIn+1ubYX1cC2tUvmKlxkkLyoe6MjsHPg
4Xl27gxy4v2yI/qedOpW+WHffmsGof6+v+UI7/62J9tiB4OIL4+pvwbzPt4Q
vVmbQZptF2m1wwIenSRpDYNkBTScneNFp8bDKX4NUQYJTo7IkIMD1EVP+wgy
yJFy4w4LWD5nfv1JbgbR/M4rcg7+2p1yd+XUDIkVk4i7D4+1KKgNDM+QYQtV
iUa4rfa5Rx7y7c4wo9R/sM4SIferXcjbZQfXSXujn9xa33T28wzhTLpl7oYd
DpgEB7XOEFulEAVfWCroWN6rFuRfx4TcNFh0C8deE3l9SVLupgb4HqvCeAr5
3KW1qnASHvw0enUe8nmNYLvuGh86VTjYcegE3r/WYLR8F5wx7DMsifwf5D9v
uw/s4mTwR+XDDPn8TLw2FR4cOHEu4csM2TSgbFoP17Ej7tt2z5Aoqe1v/8I3
DFx8nQZmyOB+271SvuhnO0ZevxyfIdujzn42gWtDDXr1WDMktTr4sDdMrc6b
/snPIAzWve4U2Om9UmP6MgbZt/mpYx3c4ZC00nYtgzxzqRyYgLV9ZrqHVRlk
Qfpn19Xn6NQvfq06o60MUrGUx8cLZq8ePVhtj/xvIjaTDD/JsuV76sEg/peU
gmrhpYYOZp1XGERl1CZE0o9ORa99uOJeBoMkNj65UwOfWehxq2yQQf7xVIj/
gSuO0DqWMRhkj25b8ip/5J1/igILBZmE//Gchx6wjGbQpjo5JvEO2/9S4jzy
as7m85ccmJg/XHR2wM2NJ0yrzjKJwr9LZe7wqmdX/xQEMMl3x+w31bDTSpvV
+agfMwPuNrcAfF6xf3JuJZM88hc9lADnnDv4o7+ZSXjyNn6rgh3Pn1cb+cIk
xVL7fooHYr2ptMr7jjKJDDtrqhIuab3XkiDGIpxCazGxC9h/642nhB1ZZKmW
cz0F88SJ2O1zRb8oOh/oDO8rtm8M8GYR46L73S/hfHaqsu9VFokpGn207yLy
o+XB3o3pLCJTfE371iWcn5A52t+/Iv9rp/4qget7Whtv9LDIruLnyT3wfhuT
rnWDLOJW/GWO+mUcH89l2qJ/LFJcLFv/FtbNfqf1XYhNzEoqDwoF0ylryetH
6vTY5KhO28It8HFW34yaAZt4lgyVHYEnJP8UhhuzSVzJ0nU58KV7d5PnWLHJ
95Kjv3ZfxX61cXhS1olNfEqZAREhuL7yhj/OX2OTMN3FynnwkGCCRM9NNkko
Xdv9Ge5m6K3QvY28XmqyXS6UTr26Fra+MolNBF7FLayBt507PqKKfp/0alPy
vHB8Hm9LQHYDm1h7F4UpwCesbXg3tbDJAkV9Tyv49oT57dz3bBKQuMM4Dd6x
fWxvOPK87Xnbcd0IOkUCLXe/6meTFVoXjbwi6ZT/s+jk3VyYT0d5VBPgp5Lq
jzbN5ZDQzPCVdLi6z6tOmBf5aXnsqNA1zFdu3lUvkec/TD6IfwzfuBORew/7
X0x+/fD361gv2zY8/CqP+dXF4vP8G9j/7qzq2Ib9lHvdhwoVWPddTH2aMoe4
xXbGBcH3ugQUTZDnzT3GtolHYb+ylvDZoYd8p7L8ruVNOlU1WhLPa8Yhlf0J
l87Bp0yeeM7Bfn4+RcolBT5x0tNiypJDBhfJb/0Nl+7KtHuH/b/2t+5QWDS+
r3AcfethDgl57EDKY5CH1j+ykjiNeficvu8grNq2vrfHhUP+bRd/KhJLp77N
6097cIZDnL+9lTwJ177I/L0c+d5k2Vb2klt0KiS0pqwI+X3RhdWvjt1Gv3R5
IcF9lUOMdjMmrsOcgXd3PUM45ILYJ4VC2H9VlHE35qHR5zcSF9zBfrM19moO
5qV3P1nnC+BH7m5DS5Dfb+/5qs0XR6ek7yrX8cVzSNPqQg9V+GmTR4c65jHe
37FZB2f9QXLsYOLs/LdLPBdu8x0xSEW+tyktnra5h3lzTc+rmfuYl2XuFWbF
0ymbIJ2TnCzMU3+8Rlvha/mr141ifrxebiHLiZ/No72eHdnI/7b8cVYJdGpz
m/rYE8yf36J8fZmwMo+E0gbk9/TpvRpmSXTqyzdfrYuYZ28JqSR6w+ZjzV9U
ijAfrxeYkwTbmM/91Akfs3zdOAQ79msMqyGfSz+ScQxPxrxi4/CzBPPz0jKu
+lxY8rr9y9n7VXM+fFFpg/U8J6dG4e9cUUyZFMwDij++rMQ8nmbzL7YSFtPw
3m6F+f3mmbfTQ/B30/iPX+CLwY/thFOxvsSP9dlVYJ7LtdvoAJe0nbrsgPlf
ir+GzoHdZMVydyK/L5a8L7shjU7JmpRrzd4/59oUcMMMfnldaasS8kWXnYpt
EvzE9XIF/2weeRk3pn0f53/RgEsK8sqNRo/9DrC96+ZiNhzUs/tVOFy/a7vP
wdn76ULc4W2wZuU5xYXIQ2br24c5sCeTS9oB1tcpsN7wH536OLrsXD68yumk
lA+sxX9K2xJ5akGgQUgSXPO7ODEBZsas+lUJx0WuMJu9n/n19duXwun4/fPY
YaeQzxpaH6/SgRvFefmz4NLBq1ccYJErduV9cKKotvkz+D8iXb4f+e+agkhB
GzyP/J2KnL2fvm1YnOsB1v/KeWavYBebmosbYJUunsIh+OCZ+31mcOHlbqXl
s/k0OGC3D8x7TOkRgbXj9+Ulwe6Bdqtmn5+Wz1VZUQXvaf55aTbPilcLBP2C
uffpN2bAAl97e4Qz6NQm95a/dHhm7PVOHfjb4unRdniQ795TB/i79b28sdn7
+as8l0XAOxKuKvEgX9epm55/Bktvi7GZzd/FOzd0t8GXHsauWw1n2XHv4HpI
p+IP2YbM5v973u3ZG2Dbj5fcFGCBtAVH98CCOUo1s/ff/Rv0hANh+/nMfnl4
6N+Z6ofwHs+g0rWz/x6wNtXvHfzex0Rt9n5+g9lbBRZ8p6hg8+z9fj3/Od82
ZNKphwaHcv/geHMeqMfugW3czSK+wJJvjxsFwo+6Ex6XwlHM29MP4Tvq1sx7
MJfsm+x38N2mkOMesJvVlB0Lrspvr9sOdwfJCcs+Qv86fGOpCLwny7Z6Dzzf
+4xkx2z+/xDpFwifeLjrbSqcrjDc9Q4e3s94sXz27w1sVsey4McFjo/rsB6u
XrEwks1Cftr2840vPJlzaXoPPN2iNiDZOPt8e152INy66e9QGdbbp3m9dpkw
k+rKtp19Hl11mfB72Ol7Ee8I1q9cmK+f7GPsVwmJnXPh+OeZClawcBrv/GDU
g0DX565AOOut5noW6uXXZl2j97C7s/n52efND9m7TrPgo3dMrHXhxmvJ2bLZ
2L/rQ47eRT3m9HAJB8FpdcuNN6NeJYXUqjPhpcOLCnyR/6O0j/m9hwsO+QU+
Q727RVd1yT7B/BOvpyeAftBdOhljBfM57ymSRb/Y83ODURD8dGJVkh7yvzqJ
yH4Pb3t27t7OMpy/UyV2bHhT8ls5Cv1I5M6vpXI5dKp3+Ukhhdl/T/xl5hcE
L+7syPuOvF8YL2wk95ROzZFfWkkvwPmoNpy2gmlxAV4Hke/jx7yzg+DNh97+
6kM/PW/ctrQV7tWdyW99ivPhOb+aDb86G26ogf57KEXbTy6XTnnp84mFoz/r
TyZ2BcFlKpPdXI9wPtY0xTyC+RO3M9ch/6825Wxvhbk7GzM1kf+50u2z5Z7R
qeseAt8V0jikwlLGrxVW+5FkphPHIW35NcfZcGb2mUVfbnPI8PLTFrJ5yGth
t6QcY1GvnU83BMDKtNPy+jdm74/vEc6AkyTlFkZGYr9Ln2A3w+ZEbRk9jEM8
Tml9XPucTk119Rn+uswhYY3tNFPYYutO0nkB/VMl6IkvLLB0G+NlAPbnSXpw
PdzypEpeygf9+cpudc98zBddPOO5Thyi0TcsmQS/O9gZ0nSMQ3bvjBZ4A29v
8TndZMch54Q+dosX4PzOO7jRYz+HNCfY3aTDd5IP96tv55BeNnfAL1jecpu/
GYX+Yp/uJPoC+c5obOF2HQ6RkR3QPwX/5R/8TFdB/873+L3kJfZn+YNZP8Ww
vy1f9lkHXnm6dGm9MPqJ/8tKR1gs2sjr8kIO+UgxE4pgietyvi6YnxQbr5rY
F9Kp1J8Gd4V72WSbiqxGJKyhfG34ylc2sYmtW1MA6/xSaKO1sknwAaFp/iI6
ddZ9R/79Sjb5+iPuYS68vfWEeVcam4wb68R+geeKNI/fj2MT/uyOIJ5i5I05
9isUo9hE3UN6nw3cdvJQafR5NolgP+bhKqFTn7YV1oZaskmqvdmoHLxQ2pd+
yohNXlSOtlvBT4tiqhfpYF6N2Pz8IVyqM8EXt5ZNtJaX2ZuXYj2keDAejLEI
b4XdeR/40Ke3p07/YJHWM1y3k+BkxnPnqTYWOVO9tWaodPZ+yc2Mk2Usct+7
UinsFeatgF/Fz8JZZEFrLaP8NfJspLCMjwiLfL5watlP2DTqRuIMD4tkbBRU
FipDPXvR4vf+ZZKtV3Y7HIarGsIU4z4gn6s110zDQht+XLx3i0m6brbeVqOh
3l7UnE0TYpJsXe+nB2A9hevzhDnIUz+X1V6E5/b1/o0fZhARaj+zCSZVetV8
yO/GI58dTtPpVNizBVulkM+XJfgHxMAfioWSFyCffzdaeacITrDwa9uNfB6Y
fKiWrwLXM+vC2WHkcxMT1ncl+JDIg+PHkM9XTCYx98LOFXMdrJDP80y7lNPh
dz2fvjchn1+YvrCzHv7quUjdDfl89wOpY+OwDs9yoULkc3FLWoBYJdbrraPl
z5DP+5n2dyi452J4gjPyeX7mnFwnOHL3g5H+kRly2fq/2huwfT9nTPvnDDHn
MuwpgC8cOZHkgrwrkd3L/ArzLFV9HNo+Qwb2XxXlqUL9t66zuPMReXyujMpG
2O48v/n9dzPkytPqnXtg0ZzJ6/nNM8TioNMxP7hH6PWuD8jjq/j4A1Phn+kX
LgrCg3mZd97AYjZ7txyGC4/szB2GjWT3Njchr18VGKxdVo38ocg8dAx5vbW+
W4WC93e1vvdDXpe+/vnuqerZ52++v+lDXncze8u+BW+ZLnPLwPG/Fqp1LIMT
7unff4a8vuBtecMAXPMr2YWNvG4bU6gu8gbzyKXMBReQ1zOtcuP14Vufn3yV
ns8gkyKZ3CdhZfbW9x+Q1w0/pjjHwiFrb1ZfRF6PuXu3+RW8IvzZyHw1BlES
D01aWjN7vNndhpYMcmL1Ca1S+EplfRPnFoPkfzuc2ge31txn7EUen3N/L9+S
Wjrlze1+OvklgySv2/7BETbLerzryWcG+Si3zl2oDvPlk1S15eJMsm5oZZsW
rOOyxlwHedwjW5gch4sjPLSntjDJIuW5C4vgW1r6XNutmcRo0/dMh3rU526u
/RlhTHLr72eh63DvzyoWE+v/+4u3Pi/h/2QfNi9OY5IgLZrhggY6pXjppuvl
QiZ5oZ/6rQBW0RuQm+hF/t55ZMX8Jjo1OLL1OGMzi3gJ7LugDk9yiSr7Ehah
15v2HYbFp53SW4xZ5IiZXn4eXNl/9L7kQRa5YyVhcagZ/dF4eN2mIBbhO/Il
9GkLrg9ZuPzha9S3c4vEJ7iz8uCz/CrkeY/qZ2x4m//GwKwGFpEIyWs3fYt5
mOpgmH9hEbWcCOVf8KLgP2mREyxymK39SfY91p9AlKzgejZx4Fd1sYAtlp7K
oMmzifPSDdznZl9f9HuzowqbeMgIb3wDB306l+SF/hVmNhTk2IrjjWmvLrFg
k+fJCTL3P2BePF6ptvYcmxRmRpfUwrtnVvLUBrDJ67xQizFYbzqnyu4Sm9RU
e/pTH1F/sjI/j0awSefwrqZO2HkLAkkCm8wnTO+VbaiHRoNF30rYZNHOcQED
eM5gLJVdxiYiVj9TTsHJHXV2LhVsIunUWlsEP1t+RbC2jk02RWWvsvmM67Hy
U8hUG5vYdR2quvUF/ePETnPLP8j3aypjSuCOU60TRybZJN9h49Hv8IazerrH
pvF63/SMcjvmscEMeQsOXv91R6UepkfE1r0W4BD+mZYE7g7Ux8IDz/mkOCRP
R/OkLLxoY+PINWkOORyYomEOH1vaFiqwHq9znXmbCGu+1ZYfkcN8wSfIp9mJ
fB8j2nhUnUOeiWz3ONOFftF8dcm0IV7fl01uw//9s8pZtAP5M054YSlcqSIx
T3InXl/5/eH8b/j98QkK8qZ4XfpCRzps6NF3asaaQ2yVi4zbuzF/PxddF4H9
m8ddSnTOd+z/tDXvDRw55GleaI8sbGYwYTl1Aq9r7Avygb8od7MsT2G+0f3z
fEkP8oCuxJNaNw6Za6K42rgX/WPauuYj5geltCEtD/hCaaXUsSB83tQj60TY
lE/r+CDmjdwMmYhR2NVRcnAA88iRuVJ/437QqebNT27mYF4pxrY+0If3i/Zl
2mLe6RN++0O4H+8Xv+iReItDlpyO4tKHhZy1eWbnI2exBRoxcPXPq9nGmJ+W
+cxL0/5Jp9jB0VZ/kcfdlKd8Igew/wpvMLmN+Ssx5EV0ASzeFPIoLoND3nR4
ZXfBsevyveMwr0leG+tWH6RTdbp+Ptcxz9X/HNz9FVYUWsFl9gTzJXnkxDuE
fi3Om70Z86D0XafLKrBTijmPOObFc9t7XwbDIXbM1rZczDP3O6QVf9Gp7O7B
p8qYN/dMJ+jth23OpPqw4EALW5tL8NQeLYkazKet7I/XP8CyX7UlrF9yyKWD
LVOBv+mU37obnjswz34VqWhqGsbvG5RclIJ5uCz/wvJJ+OQR5yNqyOP3rXWP
rhrB+te7L18BO90qGDs9Mvs8ia5eB+bpceFMkfmjdCqgY/PJP5i/Pzw/flgF
3pjnVOSB+bzQak3GfthmvcW1ETgwNn5LBiz1RbGkG/M8v/B1W4Mx9J/xPLVM
zP9DeTv/OwUnOnBFC9fMPr/P+ysaLvvg5jJ7vzA25kLgN/jDFuVYI+QLHzXd
ar5xOuVxO/DLQ9jm3dQiZbhTSuQOL/KI5FKP1EC4PMDkyOzz7dx5SgPpsP/P
QUdh5JdeyyHVBrhY3+uLE/wo+niF+B86VZEtPsSP/LNpyf6+l7A8b5/GRuSl
5c+Elbtg+hUNQVd4xqLFl3eCTnHyR9Zkw2U3d87fC5cK/WKuQR67r8K7JwBe
fq7juQ0c3EKP/w921jsScw02WayrMA7rCfk/nM3firlTXmJ/kf9ofxtFkf8W
WxS8ouAQah9DHx4fced1hifaYmWOwx+ilMyj4GLXDKPZ57MLlYfuvoCflnHv
eQDHNz/81gFfb+zSo8GBZ4/LzZukU/pxppzP8FGhNR4K8CMpm8gR2OBpR7EV
TPvQ9XH2/raMefzc8zC3RfCHxTD/yL7d9+ET6Qf8Z/9efOiG8G3M+NTKY56F
s8+7Nym1dIzCfvJtl+Xg3KZrMiv+0akH7xzrZ/N27JmdZwkcwt9/efb5dZ9F
vIUn4EW+kvGzf/9tk0PnugHX5jdxi8E6Zhd2FsDGz9dlCc4+/z6sE/MVHvJ+
emn2eXauG1Nf5k5hXvlV7PMD7lEsWLsRVp8X69sAVze6u+yBw5bu8Jj9e/BM
V6UCP7gxr8/qBhy5cIiVOvvzEzfnz/69/TCdHVsP09UnGnVm8/e5pfKT8NHd
xHc+/EJRplxqGvOa946B2efZxXu09u2CPzkozrsNB8WZ/vKG/RSXPNkDd5va
X06F33I20gTgzMKwnL9w5UlGzkmslwVnEg2lZrD/vHI2Wjz7PPva3C8m8CJr
gapcrD+NG594U2H/xe+7O2fztsFQYh1cPtGi4gKzpthqf2HzUMG6cazvymMy
diYM1KtttPIQ6kFWTPuvF9x4c/GDQ3Bkk2lkCjzCL59fjXrao+X9cgLebZ/8
/Qrq78VwmOlqJp0ad36S/BH5Wzw9sWcnrG7Nq7QG7l5UKZQChwhYdySing0r
Pz2ohU/8XBHViPrP9BvSmYA1i7mV/iJ/u/Uudd7JwvWfZ6Yvi37BLrIv/wM7
3F/kLYp87XDWe58km069/2Li9q+EQ6rWhf8yhgutPTQa0Z+uReWuSIbXlMkP
7i3kkFHDypwauCmoexM/+pnVzCfDP/CLipU8OQWz/38MjpsxB/XH5vrwDvk7
SFyYzxPOjCiRtHyG42+WSUqC5VdYXKShv2Zqm9WOw9vqD871Rf7esjhpTRJX
BZVi65Qmh/4eX5X78g3c1vT3sOJ/OH7/StNxOHl64YfVyNvVP4b8dnBXUBXz
NfiasT/IJ3CEPGClJ9fqIuI55LqFcEYi/OrcVTN17CfWJdrvxuDdprs8jbEf
FbqZOUvMqaCszaK4829yyEoZB7YRrJpkKSuAPP79Zrh8IrzszfZPntjP3E60
XTaaW0HdsMqK2oj9MfL4oNEZeMNq1ithPw7JcGAK3IHLPl7r7vVGfz8iFfsD
XhfRVEvOcojxfuf/gnkqqPM9vrlvjnLIsb3+TtnwovGjqv2HcL6srm1shXl9
338YtOGQfPPc52vnVVAnVuX9TrDgkNXGUxV0mO0ubh+jzyHaRgJhg/DdDffW
l2vh+xlK7F7KW0FN/f4R0bCJQyIoqtUePiFQtCNIHvudZlgvF18FVW1mEqwi
gv13S3ymLOyfHG6rv4hDFDZnu1jAEgOVZev4sT5UWyZS4KRersXnGGzSJLdi
HuGvoHqDBVKkv7HJwAb52hPwss6jdZ2Yv3hkdK/fgH/v51Z1fcsm2tJHl3XC
p0KX3WTR2OSBeOb6wPkVlJrkTdFPqWxSvqJ4IB0+tsk7WQj5+4tow5MGuPGf
ir0I8vdi4dHNEgIVVGGOZ/sFzJcBgppGJXDGdr5FjdZscne+iUAPXFm8/r+9
JmySx3eoSUAQ3/dbV/EDwiY/517cZwv3c82vjJdjE2vmmxPT8Obw5gPNMyyy
8ff+0C0LK6g0z+mvljEs8ku6/coR+OAV9RVhwSySbXPk4lU4g++sQrgPiyhU
Hvd7D88VZbmMHIAT3E+fXVRBiTpd3+4iCe+MNH8oVEFpdvwrf5jCJL+CFu1u
gv/lvFY2jEKezo82/gvnj3koNgQxiYJU3FaDxbBg1b6cw0yi+C9dvQuWEcqh
aaxkEqUHr5cvX1pB1ebImavFM8jwl60i+rD972LmnwgGyVlctdgRXjhX+uGc
AOStgPr5z+GjZWp8G+3w/mdmvF/gBkZ77n7kr5z+t3O4hbG+PQKU/hkwiLJV
G8MM9ttsP/RSnkFGww5OecMLSic9hiUZJPd150QifGJFlgldmEHcJuzHKuCX
5zWv6yMPqsj/+D0In13135kznBkyauc8uESkgqqy3Ch/eHKG5N4e6tOEf9GL
xpYNI4/Wn+mxg9Wb+N//1zdDVLjHu0Lg7oit6Uu+4ec1vL8+gSvSXIdOIr/m
uky1tcKTVvrpL5Bv3e6f/8CAL+iPH+ZGvlZpY7+VXob6Ui3K24N8PbrwctNO
eDGPeGIe8nOuwbx6N1iRQXu5AXbzC3tzF1555mT1S1j1qWDla3hrzJ8XJ/Dz
4703yn/AO8/4HtyC358nvvTVAtEKquSSoJ488r2Hxe0idXjGbFuoPvK/WsiK
F7bwErZGqRvy9XhJQt4lWOGtT2HJT/z8mOTTTPhntlf28jH8/Ib7j5th6r1u
sP8Mfv7w+sxJ2C116ddPPAzimckZk1peQUltfju4egny8Z/POrvgNXqbzjnh
emhE3GhOgX/axkrd1GEQ3w/OYnWz7x9/LK+1i0EKpQyOTcCuGm+TPA4yiPbL
f5PGKyooSe5PVuKBDHJ+zjvKE/aNeK6w6waDlJpmRyTBzMjgubEpDKLfe1Ry
HLZQXujEoTHI1iV12xPEsD5uFL+S4GGSy4fSo6rgyWJZpWphJqE/DPo8Ahcv
cFcSWMskhvrqrobiFZS4oOC3IxSTGJ9OvPUbJql2i8N9mCT8hU/n8pUVVPsS
21hyhUnquC1lt8ETLppK2aiP3XHzSu/AlcYs89KHTGJRdaaHSKC+Enb2qnxg
kujFOxVPwUM1R0yEvzHJu4NrfW/BF83q4msHmcR6/JPAAOy3/d3aIg6T2Kze
qhazqoIq2uFqWbOBRez8hC/1SlZQqxRvb7VxZ5HUyt91i1bj/MbqB/3zY5Fv
QjUiWvAKhwUpvpdZxCEjIPM6bCpO3yoRyyIn3v9o1pCqoLKWH3g35zmLnFEs
lAxfU0E5PbI+nvYbr9Nu3smFj2q6iy9A/j6y9+SiNtiykzpoj35jHijOlpGu
oHRLT+Q18LKJSmNARyX8+Cqb76kkm/xx2ZrItQ7ryXirZTf62S8ucRFZ2HGt
iPBy5O/eW+OR5nDCZdFqnb1s0lr63/lkuMvhw9QeOzZ5sYD3oO76Cure2RHh
Mg82OZddJ3ZOpoIa2NdxoOwOm7hR/0WnwIVerxU48cj/refnv4FXPU2xV01h
kwP/q+DOw2pawyiAJymlOUnklqIuzXMqfbuJkqFBSTRqojSICmVI0pxCw5Um
STQRotLAJleSIkqpEEUiciNnvKs/f4+e8zjn7O9916pzNkvtj7QK5n/yUM3e
y5jfGzP6bsCZY95fN9zmENYXp5zJv7EvNqkKNPdwyH9H1cRkVtFUokTRayPM
/wmpeafM4EXGeXfKBzhk0KQuMg02iy7RDHzPIc0pi11UV9PUBqdoxu5JDjmu
OrgwQBWv5+k7FdkCyPM9wv2Z8HDxfM8a9O/9R0wL78Ie6SsvN4lwiX/3+VWS
ajRl0GSd0SiF/B7lZtYEjz8Ra6PkuUSK7g2Q0qCplMo/i9Ox/1KDBdTNYIX4
sghxQ/TnRYZTgfBuTv+BZOzLmcDsmGY4d1P1Bz/s0zeizpm7NWnqh2h4aBP6
+CW35w0tWjTlNnJqKf925F8+3mPj8IZw5xixHVySW6VtLa1NU9Z68QqS7ti3
PJnP9sDt3joJc725JKRsywdpHeSF2pmleYHIN1MdIsG6NBWf+dW/OBL5/Dzr
eTY8993LYpto5Bdrtdx7MHs0330ceUIuN0VRRo+meC++PL8sFnnbbIPhffje
IcH51ie45HHSI6/FBjQlb2zsdQl55dOeQA8LWH+gc2Y6A893o+DOYPiwpomW
RSaXWIjabWuFJx+IXHuK/HM3q3NToCFNCYSLxNUiH1Wff2l8xwj7+USaz13k
q46YSKP38L21rfs7Srhk3F3GQHgNTSUpFfXOfn9QRWG7thc84vvoxijyWlHp
G5X5xrieWe/u9qJvZ1WNLHQ1oalb99RXL0L+u5YeLxkHvyp005qEO0NXilfC
dLYK30PkxQU6AQt4TDF/FVNVAtCn4+vG55TDf7JyxBOQN0tyUrjdcAsVprAO
efRetBqbCfNlJK6aW498aBwys2UtTUnWU4b7kV+jWn58+w03JJjc0EHezS7K
mlhuhvPZt5HZ3zT7/XDdcTt4Onhm+7Fm5FvLAx8L4b1TGX730cf3/DszsJ7Q
1P7UuzNKyNOJV/Jeh8MBdpaGt+CyZOPe87BM2IvzlsjfIxtjnk/CkmOh/duQ
z3d2c//NoWgq7kilgQfyuw6z4L9m2Povr7QuWGClmcIo/NC+PJBC/q+NjonS
M0deiba8vBj9QFDhz8pu+LvsnyUV6A9DtrkOM3CQudAeQfSNmxGGsfIWNNW1
YamGH+z16EDPXji83U5IGv2kLmQqTsiSpi5vWvXEGX0mNTezWhs2Skn1L4R9
7mv1u8KLzRx3jMIii0K1L8PbHTnawehD74moeyf80C1IoAK+s7sqcRpWUTRa
Ngb7Nn0ZtrSiqQXN9765oF8ZjyUvCIKfZUvmJ8NiEqsNs+Dwm7v2NsIfjB/7
1MOXot+6fYYbfAPT38Kf71vvnP176+l0gQYBa5py13geaDp7/687ZR81YKlL
oVHesOl7awkX2HBg7dETsITwR9NYOMRWKbIEHtWPDyyFH6eNOTTDdz2Vzj6B
Y7fumd8LZyXdb5mC3/rMTZ+AA294f5Fdh+tN8ngvBzYb5JExh9OSlF/Pfn9b
SqDIIhB2l5o4OduHP2mRkAxYYV1c9+zn05vdhvLq4D+qQ9XKs/dbi499OAif
zg8Wm+3Xe6rlfvCtR3/5O+zDytn7p/U1yqnBj7xV5RVgad4dNk5wefmra4vg
cVVGxCHYRTsoSRBudc4rLIZPzE3Pmb1/XPZRoyf/wjzmLx/Pfn88+Ervr0k4
Q6RX9Als8SJSUcYG/Ufs4dZqWIYtvdkMHvgukZg2+/l+5VsH/WA9/dtnA+H7
9lsvpcK9HtX+s58vyD30s+sG3BjW91li9vsBpVmsfvjCc5/5b/F+yc50Oa2y
pal+mTcNIfC35WFH7eHJYR8FTfiBnVhFFJwl9oyevT/fPweqXxXAX1WuJxfD
YYWbeNvgxA9ybk7wuscT6l/hiRBlGR546c+U7Qs30FS0eUvZZVyPbevar/nA
eZEXHoziepZLaF2VBlcP23L3wxEP60puwy+O/cxg4fpXsLp4VtiOpph9XhK/
Z38/dSJPxBA+7hZcvRt+ej8jwRvmyXX704Pzdcg8JroO3lgr3XkW56/r2L4f
b+G0UxbfP+F8qrQG7lmwEXlx+ME3PbjHzHmnF+wUJ33nBs63hqkGJbQJ87XB
a+O62furHV5Rrwc7rw4mTq1cMtCwRMcTLvMWMHDBPElcI7DiJhw5NrJkLebP
UDQ7fwg2VS4+qHCXS/Tv/JQW3ExTrkc/NM1gfr03eCvgAW/Qr3mQgHlnFPnq
WCIsttrxgwnmYcatjj+18CnlqvIP6N+mevVfBLZgX59PaBG7getFO+vZdXix
sJHYffTribBEmzfw+X5RW6EKLrG8duQevz3m9YkcVUvM6+8aQTd2wL7P+qmT
mOfrQrzVEuCj/mXn0jDvL1Rtu3QNDnjr0hU/e/81NauceQ401fpoWMbsAuZ/
kLG4FnyhwUCdi/79+6pWktusBRlGVdgvpauWHa6BaTTBTuwfjvIvj+2OON+t
trelktBf/Sd6T8AjDWMm6glcUnHpvX01bDq9RUcT+851xTOLuU6YT19Cxz6j
f1fvetioDgud0XUrxr6cd7FRzxW2OyR30Qz7tXZ5uXIV7DsTwVBB/57vXVDY
C3+9OFawL4hLPIvOLubdivyYNWRTFMAlwvLHhbbB5Sq2FcWeXOIn5/aNx5mm
RouThpQ3c8m+0s3n/obVQ+r+e2DLJcfULE3tYfthXjsray7JN1VLLoR5VDq/
jZjgetnJWWnmgj4wmi1yRgXv54epDj94UtNXW0URr3fwWEQafOVrTVu2HPZf
bNe9N3ABr7vJPAmc5wsl7oe3oR+kry8VnOEQ+5U5fBfhkvH3rbt+cIhHVUpF
O6x4S1X2zDiHHGra/0fWlaY4gztdQt5wyPXBdefuwB4J4kpzmpG//ExM38J3
98msnbzFIR1fNUcEtuP9S37sU1mFvsxerL0NtsiT/Xw6n0MU/vrSMQ03GsWo
T0ZxiEbZcMQyN5rqzhb8bR7CIaYaPUus4SXrY4I8fDnE1awp8Cysyl4mNbWF
QzI8Mvh0d9DU1M0Mg6gVHJI/eqLCDTaTP/dQUJZDroZEO8bBSd2txT4iHNJ2
xLuoG/ZSk433n2YTToGuadhOmvpYpLSz7j6bCKv8PZIDdxcsn3voFpssqZFL
boErLn8+xVfOJvot8/pE3dEnZPQNw1LZJHi4N6IK1n1b5l7nyCYD8jEV4x40
lezzkbHwFYukD79LlvCkqeCUeN2lbSxiUbh+jxEsfsRTi7eORcr/klqVACfM
yGQfOcci+5ddLVvuhdfrpHFelhOLqAyKJdjAIqLatlwLFunPP+AXCpc2SqwL
0mERSs58RRNcH+fR7yzBIsJL+4pdvWlq8wIH/kVdTNLSv/b4UXiDl5+/XCuT
7PvnolcZrPR6XrTTNSbpkw2V/w9O+CkzsC+TSVJe93CW+GB+RjrkB8Whr+UZ
D5nDJy/d/3YrgklKF/NfyICt9ETn+G5jkm19QTF1cO2csdF+WyYRyu3eMQhz
zvaWPjZFn5e5sER1F/LpiRl9oxVMotTLy3CAE4UVPJ8uZpJX2YGvo+FMCw8W
nyiTmC7Sy22DrbiiY6fQXydf5kV9hf9d0hTxGf225BzXZaEvTQkv1HgqO84g
zs5+BiawSBD9VGmEQeZLP5H2gZMfvZ8vOcggjT1a04mwb2Bs5bdeBgk5m91T
AzcltvnQLxhk+VbWjVewWNmgel4Xg/RI+ZxhwyeVWiyiOxnk1ItH+1b44XxN
9g4GoM8bn1F3tIO3TrEVQ+Cvjme098FuwTz9Gfj5Isk/4nmwSrCnSxcez+m5
x/cW2Kp+8wbtHgbhz3rwbBT+2a18rraPQeodVteI+NNUqqmtuOMQgwRLnE7X
g/1/Kxxe8JFB5Lun9+6As8RZ3n0TDPL89I5NcXBmbhy3ZppBTtrfU7sC9xYw
Vp3iMoiRuIpwFzz6ZvNueyEm+fIs9csv+GTlUiGWNJMUZEy1LwvAPpsa0I1W
ZBI+seakIPgfe83NmWuZ5Han0u4sOPyT6yLejUyyJz3Jph5OlztGf3Fjki4R
ZwGBQPTnjBHFxweZJF94Ir4ErghN9l1ej39/V369A07PCAj9ux2Pf9tv6Nes
+cz9f/UzSbD3sKHdbpq6Xjj8q4LJJCZ1z8d/wqoF4Rb5RiwSkpIh89cemtJO
/84aWMciJV4brWzgfyx7njZsZRGhBW0X8uFz6pbfA0JxHjzr7a2D0IfCXO2k
i1lEVD8yNhTuf+I01l+J8yakezUPXmM7YBFwh0Wu3Kyc+w0+eFu37H0ni0QL
FtVlByPf/37sfu0Pi8jcSJD7tJembFKUqwVs2GRDoqWtZAhNaVZ5Jeo7sMkR
d55IU3jq4VxfCzc2GRU49Ow0HPyhbYYRxCZ1O/fGrQlFPlUQ+/wzjU228m/9
lByGvORydPmuDjZJHBCXvgXLiXk/ufmCTe5ee2o+DKd6OGpO9LPJih3rz+uG
I59NzGkQ+cwmP2uMN7+Bw0+ppCvzcUjW9uU31SNoquqMdA+PAYfERqFRwvoH
/ZWiTNC3z+XsjoEdJLLiBygOId0i8k/gH5a18aF26M82jKTA/fj/xh5yeYI+
b230wvPiAeTPA2zVhJMcouWS3tAO14aukWYkcYjcflvpKfj+o+vXPdM5ZKqm
pZ2KRH5xWtTJk8MhBSqV+kPwmvbUL4Xo8zOLTi6QjaYpc0XnLwfbOGREj/Kn
4Nj01xLy7RzS6chsDYBVS+jGO0855FJ6eGQdHLJM1qgdfd+R3+Od00Gaijqf
xd6NPl85bXA7/RBN3Xng2NnI5JAcqSmJOvjSFV7nBg6HxGlXBQ/CBhpXMmrm
cMn2vUqKaoexXyv5C46g7/N/FEt7DF9I3+9eK4l93PPJhy8WfU2sfX4S9qVV
vJuDFvySPmZmuxr9WK+D7IRVdz2cz6POJb/O1MjdhDUcdUccdNBvnCJf7TqC
fPF4m06y6ez9XOduoI/i+vuPNRawBfkk7oDRJPzp9l7hIgcuSdAZU156jKYs
TxiWdjlxiUNW+9wI+LJy7tmlrsj7DplNisdpSnmdpsEOLy5Z1P2XdlwcTR34
FKuejTzBOnZavhrmBKzq8wrHftfiFe2HPa9nBqyM4JKq0x/HtU/QVHPrqvh8
5BEr+8rSd/CBRMMeK/T5fc/WLDY/SVOs1bea0pB/XI9W8O+FZ9yuhXGT0Uc0
l03nwr+9hFcGp6IPZvA8/w4PfjR/ZoB+X7T5UUpRAk2ducLXlnUWz4djdKgD
vum4VGnoHPpB9dXAGbjWkn96RQ6XGIqmW9ufwuMpX1S9lIc83czVjYH3iThe
HUJe4w0JVyyHvUy8uqXy8fyXjYj3wGtluiutkO86n27lcuGtCaU24QVc8j/u
KNqx
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
268+iyADh6UjC4FuTg8eNywlQzJN5ktPdM958q/cV2Sgu9uanYMOv0cOKd4g
Q4TponUr2q5PJyv4oDL43DL8yHMI+62xrB8XrijDtGH0HQK9676kaH+/Mjis
V/p4odtGvZt+b1UBE/2t663oj0a+Z9gyVKB7RfnxHPpDFl3C5jcqoHH99Lnt
h3G+PNokvGkXgOLyiy3e6OuS1cX7GgCq8//0X0b7+5mR6+kIkNQ8kNeGNra8
I74gRYBAXooorxyVKPtSekbtAgE5qg+mVdEuTF9LvRoI2Do3W+6NviPkwaIz
TQCNiq4iBf3YzV9a1UAVwqbD/syjD6c+pfGOV4XljDttvPJY//cyHjiNz/vH
KSb90+jgGZ4k/kNq0JX0zGGHAp5PpZsZKvLq8MXTw04N3f1kV+VymDow6DPb
eKP72+s421rVQW2rnmUr+of63YC3ZhrwMKv3uIci1p8s+4zoPE0YDTijl4VO
E/7e6PdNE9bMtuk8RJPWxvTntbVAntdEY9sRKjGryxvzgO4YVOa/UWpCP14f
OVF6VRteRAQfmUSXX11ZbmHUgVlbXgW2o5hvUkSYZkJ0YJ+wtawD+rAWA0w6
6kJRydt9TEpUwr3x+/YmO314fD5y7yG0mMu44J/P+vDWTXC3Dfr79XVFzoDj
wCfhIFiNHrHXyBXJNYCsiiluKxL2A50utt8SjaA6LZ4zDt15n13i8zsj6D2z
d1s5OrNMO4Ysbwysh9xZaciYD7wy5fTnjCG+YXZTGfrtPDX2Z7Ap3MxN+deH
dp+kr/703hTaQg/8/Y3Wc7QT7D5uBhtKPmuGylTidqk1y2sZcwh5srTwE90c
t3m7o6AlXC7KmhdRoRIDVcpP025aQl3s4Vk9tF7al4ggSStYVA/6dB1dP7Rj
Y1zTGjw718aOAe7Hu/oMo8qTkHjnyogfeq0utD3M1AZuJSsN5aM/LjdMmfy1
gSn9iP5vaMePn47dsLcDm75/nbkEztcCn9cdaxzg0O/CH4/R35k329ZxOALj
XhXhz+iBucLDuYGOUBsaESKnSiU4ZLpHrdWcgFl4fW8feuvV9NqZf84wrpNn
vIZu1dOvexvsAnUBipFCajivnk3/uGnJBRyeBQ2cRg/Xb5Egf3OFBp/lOBZ1
fF4fmbvybPeAi3mZlbLokPRDFIU7HuBEkRm1Qr8WGxo0IU7Blu1nZG+jl/J/
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
7N8/dHjVudBU92PwH6ICmuk=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
cuH/zcHWmw==
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {9000., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Resource\"", "\"Consumer\"", "\"Predator\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7167680373125954`*^9, {3.7167681603880043`*^9, 3.716768175736432*^9}, {
   3.7168063305081635`*^9, 3.716806388798653*^9}, 3.7168064286549973`*^9, 
   3.7168064626569014`*^9, {3.7168071451662984`*^9, 3.7168071655222254`*^9}, {
   3.716808772158008*^9, 3.716808789591022*^9}, {3.716809504136565*^9, 
   3.7168095128970013`*^9}, {3.7168109475606604`*^9, 3.716810965876542*^9}, {
   3.716811075113249*^9, 3.7168111013557744`*^9}, {3.716812147673604*^9, 
   3.716812153594663*^9}, 3.7168121887105775`*^9, {3.7168122250767593`*^9, 
   3.7168122506182942`*^9}, {3.7168123020526123`*^9, 3.716812323252067*^9}, 
   3.716813209159107*^9, 3.7168132676035132`*^9, 3.716813353456526*^9, 
   3.7168133966845207`*^9, {3.7168140350776873`*^9, 3.716814042906012*^9}, {
   3.716814156339687*^9, 3.7168141649741364`*^9}, {3.7168141999129515`*^9, 
   3.716814205862192*^9}, {3.716815356640514*^9, 3.7168153764467325`*^9}, {
   3.71681542244932*^9, 3.7168154282997727`*^9}, 3.7168155391175704`*^9, 
   3.7168158197981033`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"K", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"B", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h1", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e1", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S2", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h2", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e2", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tf", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqs", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Res", "'"}], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"r", "*", 
          RowBox[{"Res", "[", "t", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"Res", "[", "t", "]"}], "K"]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"A", "*", 
             RowBox[{"Res", "[", "t", "]"}]}], 
            RowBox[{"1", "+", 
             RowBox[{"H", "*", "A", "*", 
              RowBox[{"Res", "[", "t", "]"}]}]}]], ")"}], "*", 
          RowBox[{"Con", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"S1", "*", "z", "*", 
             RowBox[{"Res", "[", "t", "]"}]}], 
            RowBox[{"1", "+", 
             RowBox[{"S1", "*", "z", "*", "h1", "*", 
              RowBox[{"Res", "[", "t", "]"}]}], "+", 
             RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
              RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
          RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"B", "*", "A", "*", 
             RowBox[{"Res", "[", "t", "]"}]}], 
            RowBox[{"1", "+", 
             RowBox[{"H", "*", "A", "*", 
              RowBox[{"Res", "[", "t", "]"}]}]}]], ")"}], "*", 
          RowBox[{"Con", "[", "t", "]"}]}], "-", 
         RowBox[{"M", "*", 
          RowBox[{"Con", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"S2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}], 
            RowBox[{"1", "+", 
             RowBox[{"S1", "*", "z", "*", "h1", "*", 
              RowBox[{"Res", "[", "t", "]"}]}], "+", 
             RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
              RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
          RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"e1", "*", "S1", "*", "z", "*", 
              RowBox[{"Res", "[", "t", "]"}]}], 
             RowBox[{"1", "+", 
              RowBox[{"S1", "*", "z", "*", "h1", "*", 
               RowBox[{"Res", "[", "t", "]"}]}], "+", 
              RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
               RowBox[{"Con", "[", "t", "]"}]}]}]], "+", 
            FractionBox[
             RowBox[{"e2", "*", "S2", "*", "\[Alpha]", "*", 
              RowBox[{"Con", "[", "t", "]"}]}], 
             RowBox[{"1", "+", 
              RowBox[{"S1", "*", "z", "*", "h1", "*", 
               RowBox[{"Res", "[", "t", "]"}]}], "+", 
              RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
               RowBox[{"Con", "[", "t", "]"}]}]}]]}], ")"}], "*", 
          RowBox[{"Pred", "[", "t", "]"}]}], "-", 
         RowBox[{"d", "*", 
          RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Res", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"aa", " ", "=", " ", 
    RowBox[{
     RowBox[{"Reap", "[", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
         RowBox[{"sol", "=", 
          RowBox[{"NDSolve", "[", 
           RowBox[{"eqs", ",", " ", 
            RowBox[{"{", 
             RowBox[{"Res", ",", "Con", ",", " ", "Pred"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Sow", "[", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Res", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                 RowBox[{
                  RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                 RowBox[{
                  RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], 
               ",", " ", 
               RowBox[{"{", 
                RowBox[{
                "t", ",", " ", "9000", ",", " ", "10000", ",", " ", "0.01"}], 
                "}"}]}], "]"}], "//", "Mean"}]}], "}"}], 
          "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "0.1", ",", " ", "0.99", ",", " ", "0.05"}], 
         "}"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
     "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.716725357898601*^9, 3.716725368281953*^9}, 
   3.716726905291992*^9, {3.71672700492293*^9, 3.7167270128989916`*^9}, 
   3.7167273154047194`*^9, {3.716727909723712*^9, 3.716727957843051*^9}, {
   3.7167280511636877`*^9, 3.7167280686658106`*^9}, {3.7167636599254746`*^9, 
   3.716763665341442*^9}, {3.7167637138463144`*^9, 3.7167637147953033`*^9}, {
   3.716763815817707*^9, 3.716763816045334*^9}, {3.716764003629083*^9, 
   3.7167640040120406`*^9}, {3.716764449307046*^9, 3.716764456843833*^9}, {
   3.7167645110365105`*^9, 3.716764511154023*^9}, {3.7168035653064814`*^9, 
   3.7168035654617276`*^9}, {3.71680360910262*^9, 3.716803621787573*^9}, {
   3.716803712580653*^9, 3.716803714511846*^9}, {3.716803759466545*^9, 
   3.716803819181014*^9}, {3.716805526136318*^9, 3.716805526446124*^9}, {
   3.716805557306136*^9, 3.716805577301835*^9}, {3.7168061283523235`*^9, 
   3.7168061453861885`*^9}, {3.7168066863608456`*^9, 
   3.7168066867401524`*^9}, {3.7168067704451294`*^9, 3.716806770810241*^9}, {
   3.716806899500097*^9, 3.7168069003271856`*^9}, {3.716806959044779*^9, 
   3.7168070224904385`*^9}, {3.7168071256760793`*^9, 3.716807126026352*^9}, {
   3.7168071746406345`*^9, 3.716807175071308*^9}, {3.7168074411389446`*^9, 
   3.716807444882572*^9}, {3.7168087254156675`*^9, 3.716808738080928*^9}, {
   3.7168092886224375`*^9, 3.7168092890225058`*^9}, {3.716809319371228*^9, 
   3.7168093196868787`*^9}, {3.716809350296361*^9, 3.7168093718624763`*^9}, {
   3.7168094652399826`*^9, 3.716809478220319*^9}, {3.7168095561534615`*^9, 
   3.7168095848786592`*^9}, {3.716810449039301*^9, 3.716810463251857*^9}, {
   3.7168104991467056`*^9, 3.7168104994629536`*^9}, {3.7168109035639257`*^9, 
   3.7168109113585014`*^9}, {3.7168119891373253`*^9, 3.7168121199894514`*^9}, 
   3.7168123372635007`*^9, {3.7168123834258404`*^9, 3.716812383954812*^9}, {
   3.7168125753004284`*^9, 3.7168125981845627`*^9}, {3.7168127945432377`*^9, 
   3.7168127984819183`*^9}, 3.716813137891488*^9, {3.7168557291764746`*^9, 
   3.716855730243015*^9}, {3.7168557610592947`*^9, 3.7168557669791603`*^9}, 
   3.71685580368149*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.1`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.4579098303557558`", "}"}], ",", 
       RowBox[{"{", "0.506012881377932`", "}"}], ",", 
       RowBox[{"{", "0.3922525974410755`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15000000000000002`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.6298569332065735`", "}"}], ",", 
       RowBox[{"{", "0.32096600636124345`", "}"}], ",", 
       RowBox[{"{", "0.3319255701297175`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.7192803399587075`", "}"}], ",", 
       RowBox[{"{", "0.2343371185743606`", "}"}], ",", 
       RowBox[{"{", "0.2762720104183213`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.773973969022207`", "}"}], ",", 
       RowBox[{"{", "0.1843443456826739`", "}"}], ",", 
       RowBox[{"{", "0.23435510769963652`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30000000000000004`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.8108543990323043`", "}"}], ",", 
       RowBox[{"{", "0.1518640792586766`", "}"}], ",", 
       RowBox[{"{", "0.20277915364193233`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.8373975712861306`", "}"}], ",", 
       RowBox[{"{", "0.12908605665265405`", "}"}], ",", 
       RowBox[{"{", "0.1784220368958308`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.8574151586654877`", "}"}], ",", 
       RowBox[{"{", "0.11223612134812828`", "}"}], ",", 
       RowBox[{"{", "0.1591543043033862`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.45000000000000007`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.8730662655557915`", "}"}], ",", 
       RowBox[{"{", "0.09922468050056296`", "}"}], ",", 
       RowBox[{"{", "0.14358260146690074`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.885509128355074`", "}"}], ",", 
       RowBox[{"{", "0.08917615814587676`", "}"}], ",", 
       RowBox[{"{", "0.13070648097593174`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.55`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.8955420841743271`", "}"}], ",", 
       RowBox[{"{", "0.08126820025351592`", "}"}], ",", 
       RowBox[{"{", "0.1199833715523935`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.9046124709824945`", "}"}], ",", 
       RowBox[{"{", "0.07244654373945025`", "}"}], ",", 
       RowBox[{"{", "0.1116137916889433`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.65`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.9094454413450899`", "}"}], ",", 
       RowBox[{"{", "0.07173478265198481`", "}"}], ",", 
       RowBox[{"{", "0.10311289433558286`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7000000000000001`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.9166881060932488`", "}"}], ",", 
       RowBox[{"{", "0.06467404531290888`", "}"}], ",", 
       RowBox[{"{", "0.0955520889336638`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.9153200110958681`", "}"}], ",", 
       RowBox[{"{", "0.06814006876866807`", "}"}], ",", 
       RowBox[{"{", "0.09363297635828095`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.9329924852368485`", "}"}], ",", 
       RowBox[{"{", "0.05281582587855197`", "}"}], ",", 
       RowBox[{"{", "0.07437395464765467`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.85`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.9278591717859006`", "}"}], ",", 
       RowBox[{"{", "0.05443376617263536`", "}"}], ",", 
       RowBox[{"{", "0.08102511043191882`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.9247099592912844`", "}"}], ",", 
       RowBox[{"{", "0.06162871318166137`", "}"}], ",", 
       RowBox[{"{", "0.07850704005661252`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.9500000000000001`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1.9298460736475311`", "}"}], ",", 
       RowBox[{"{", "0.06850289697058569`", "}"}], ",", 
       RowBox[{"{", "0.06134235059877542`", "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.716812868283348*^9, 3.7168131600993805`*^9, 
  3.716855824428582*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "18"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "18"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "18"}], "}"}]}], "]"}]}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Resource\>\"", ",", " ", "\"\<Consumer\>\"", ",", " ", 
      "\"\<Predator\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7168073933825555`*^9, 3.7168073933921013`*^9}, 
   3.7168074507029905`*^9, {3.716807507224744*^9, 3.716807568045644*^9}, {
   3.716807839673919*^9, 3.7168078544131384`*^9}, 3.7168079006830673`*^9, {
   3.7168079705298386`*^9, 3.7168079810026503`*^9}, {3.716808100728938*^9, 
   3.7168081012726917`*^9}, {3.716808134148347*^9, 3.716808134731228*^9}, {
   3.7168081962325625`*^9, 3.716808197114997*^9}, {3.7168082596335335`*^9, 
   3.716808359898707*^9}, {3.716808494827487*^9, 3.7168085117420645`*^9}, {
   3.7168085480840983`*^9, 3.716808633565243*^9}, {3.716808677399661*^9, 
   3.716808702452961*^9}, {3.71681263623583*^9, 3.7168126526392975`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0.1, 1.3948445212809029`}, {0.15000000000000002`, 
         1.600988783418086}, {0.2, 1.7014982523589617`}, {0.25, 
         1.7610551756708854`}, {0.30000000000000004`, 1.8004154119749902`}, {
         0.35, 1.8283130895492912`}, {0.4, 1.8490588890556405`}, {
         0.45000000000000007`, 1.8652780365733468`}, {0.5, 
         1.877159748376834}, {0.55, 1.8871285008442502`}, {0.6, 
         1.8970639970289225`}, {0.65, 1.8957653009480855`}, {
         0.7000000000000001, 1.89458671443272}, {0.75, 1.9111094452284139`}, {
         0.8, 1.8841582770858973`}, {0.85, 1.9034416828055294`}, {0.9, 
         1.8768414381270142`}, {0.9500000000000001, 1.9061890973000923`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0.1, 0.5249853863974547}, {0.15000000000000002`, 
         0.3317403622038459}, {0.2, 0.24235924313667398`}, {0.25, 
         0.1910020753874944}, {0.30000000000000004`, 0.1577195808983627}, {
         0.35, 0.13443627374261927`}, {0.4, 0.11730138245804733`}, {
         0.45000000000000007`, 0.10373341592496767`}, {0.5, 
         0.09331296128516703}, {0.55, 0.08616779097615787}, {0.6, 
         0.0786016965317541}, {0.65, 0.08747412314504818}, {
         0.7000000000000001, 0.08015284398329582}, {0.75, 
         0.06732152131191038}, {0.8, 0.09027277172478033}, {0.85, 
         0.07220562403994746}, {0.9, 0.09065825705879217}, {
         0.9500000000000001, 0.0662050969488996}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0.1, 0.4336747821555521}, {0.15000000000000002`, 
         0.35966769938100607`}, {0.2, 0.29586087792928734`}, {0.25, 
         0.24963100498056495`}, {0.30000000000000004`, 
         0.21568597889609947`}, {0.35, 0.19001629457903066`}, {0.4, 
         0.17005138448586715`}, {0.45000000000000007`, 
         0.15417890009468102`}, {0.5, 0.14262466222491416`}, {0.55, 
         0.13007942691555177`}, {0.6, 0.11614851152912714`}, {0.65, 
         0.1051020181302838}, {0.7000000000000001, 0.11094646575637157`}, {
         0.75, 0.09069122924508319}, {0.8, 0.10917677138686468`}, {0.85, 
         0.09186786949173885}, {0.9, 0.1120775027250638}, {0.9500000000000001,
          0.085828245398941}}]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0.08671875000000001, 0}, 
     PlotRange -> {{0.1, 0.9500000000000001}, {0, 1.9111094452284139`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.08671875000000001, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.1, 0.9500000000000001}, {0, 1.9111094452284139`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Resource\"", "\"Consumer\"", "\"Predator\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7168128766575565`*^9, 3.7168131704188585`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K1", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K2", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "0.30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e1", "=", "0.15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", "0.03"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", "=", "0.9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e2", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Res1", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"r1", "*", 
        RowBox[{"Res1", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Res1", "[", "t", "]"}], "K1"]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"A", "*", "p", "*", 
           RowBox[{"Res1", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S1", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "*", 
           RowBox[{"Res1", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Res2", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"r2", "*", 
        RowBox[{"Res2", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Res2", "[", "t", "]"}], "K2"]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"A", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "*", 
           RowBox[{"Res2", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S1", "*", "p", "*", 
           RowBox[{"Res2", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"B", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"B", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{"M", "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S2", "*", "\[Alpha]", "*", 
           RowBox[{"Con", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"e1", "*", "S1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"e1", "*", "S1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"e2", "*", "S2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}], "-", 
       RowBox[{"d", "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Res1", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Res2", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"eqs", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "Res1", ",", "Res2", ",", " ", "Con", ",", " ", "Pred", ",", " ", "q"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Res1", "[", "t", "]"}], "/.", "s"}], ",", " ", 
      RowBox[{
       RowBox[{"Res2", "[", "t", "]"}], "/.", "s"}], ",", " ", 
      RowBox[{
       RowBox[{"Con", "[", "t", "]"}], "/.", "s"}], ",", " ", 
      RowBox[{
       RowBox[{"Pred", "[", "t", "]"}], "/.", "s"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "9000", ",", " ", "10000", ",", " ", "0.01"}], 
     "}"}]}], "]"}], "//", "Mean"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Res1", "[", "t", "]"}], ",", " ", 
       RowBox[{"Res2", "[", "t", "]"}], ",", " ", 
       RowBox[{"Con", "[", "t", "]"}], ",", 
       RowBox[{"Pred", "[", "t", "]"}]}], "}"}], "/.", "s"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "9000", ",", "Tf"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Resource1\>\"", ",", " ", "\"\<Resource2\>\"", ",", " ", 
      "\"\<Consumer\>\"", ",", " ", "\"\<Predator\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.717181025284259*^9, 3.717181118138817*^9}, {
   3.717181218215954*^9, 3.7171813167622886`*^9}, {3.717181398378661*^9, 
   3.7171816691056705`*^9}, {3.7171817107115126`*^9, 3.717181745161034*^9}, {
   3.7171817777236567`*^9, 3.717181866874895*^9}, {3.7171819189167013`*^9, 
   3.717182013787071*^9}, {3.7171820674667664`*^9, 3.7171821752267895`*^9}, {
   3.717182237714019*^9, 3.717182264066127*^9}, {3.71718230960942*^9, 
   3.717182521218413*^9}, {3.7171825935076094`*^9, 3.717182709665344*^9}, {
   3.717182945826183*^9, 3.7171829764909487`*^9}, {3.71718304079659*^9, 
   3.717183072993797*^9}, {3.71718316538284*^9, 3.717183184394414*^9}, {
   3.717183217057561*^9, 3.7171832337472625`*^9}, 3.717183274064032*^9, {
   3.717183335379603*^9, 3.717183404066572*^9}, {3.717183536185794*^9, 
   3.717183649987437*^9}, {3.7171837026276875`*^9, 3.7171838362104993`*^9}, {
   3.717183890057135*^9, 3.7171840843241606`*^9}, {3.7171841388274283`*^9, 
   3.717184236749412*^9}, {3.7171842806755676`*^9, 3.7171842826094103`*^9}, {
   3.717184344502861*^9, 3.7171843450927725`*^9}, {3.7171844215076466`*^9, 
   3.7171844218012342`*^9}, {3.717184532929681*^9, 3.7171845943656483`*^9}, {
   3.717184640145952*^9, 3.7171846404653845`*^9}, {3.717184675414962*^9, 
   3.7171849510142393`*^9}, {3.717184988417399*^9, 3.7171850255297832`*^9}, {
   3.717185570627535*^9, 3.717185570756548*^9}, {3.717185617512802*^9, 
   3.7171856177998915`*^9}, {3.7171860845366015`*^9, 
   3.7171861638330145`*^9}, {3.7171862240546284`*^9, 
   3.7171862309005747`*^9}, {3.717188947410328*^9, 3.717188962564954*^9}, {
   3.717189118576405*^9, 3.7171891189083223`*^9}, {3.717189160144075*^9, 
   3.7171891704592695`*^9}, {3.7171900922421846`*^9, 3.717190172690037*^9}, {
   3.7171902725919538`*^9, 3.7171903319802895`*^9}, {3.717190416020916*^9, 
   3.7171904237669*^9}, {3.717190494972172*^9, 3.7171905047866983`*^9}, {
   3.717190580472206*^9, 3.7171906130400753`*^9}, {3.7171906922771473`*^9, 
   3.717190710090454*^9}, {3.7171907969575777`*^9, 3.7171908470027623`*^9}, {
   3.7171909032909727`*^9, 3.717190945355277*^9}, {3.717192074929902*^9, 
   3.7171921775761228`*^9}, {3.7171922104799557`*^9, 
   3.7171922538239202`*^9}, {3.7171922989122257`*^9, 3.717192308540033*^9}, {
   3.7171923410868044`*^9, 3.717192538226968*^9}, {3.7171926374107046`*^9, 
   3.7171926756244726`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0.826697265384238`", "}"}], ",", 
   RowBox[{"{", "0.24741020200521635`", "}"}], ",", 
   RowBox[{"{", "1.449183971103501`", "}"}], ",", 
   RowBox[{"{", "1.4041003918312314`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.717183361237316*^9, 3.7171834064548492`*^9}, {
   3.717183539535798*^9, 3.717183599248475*^9}, {3.717183705263093*^9, 
   3.7171838439123435`*^9}, {3.717183897945176*^9, 3.7171840864248686`*^9}, {
   3.7171841424628754`*^9, 3.717184176577524*^9}, 3.7171842390275297`*^9, 
   3.717184284698913*^9, 3.717184348373473*^9, 3.7171844240556955`*^9, 
   3.7171845366156745`*^9, 3.7171845968634405`*^9, {3.717184649580413*^9, 
   3.7171849082938943`*^9}, 3.71718494065388*^9, {3.7171849904322295`*^9, 
   3.7171850278990507`*^9}, 3.717185575060662*^9, 3.7171856198967404`*^9, {
   3.7171860878411894`*^9, 3.7171861657491264`*^9}, {3.717186226564516*^9, 
   3.717186232803091*^9}, {3.7171889502054415`*^9, 3.7171889645036106`*^9}, 
   3.717189121497534*^9, {3.7171891656926317`*^9, 3.717189172356165*^9}, 
   3.717190097130226*^9, {3.7171901430065317`*^9, 3.7171901747108364`*^9}, 
   3.7171902753002605`*^9, {3.717190314987173*^9, 3.7171903340971017`*^9}, {
   3.717190418811219*^9, 3.7171904258018274`*^9}, {3.7171904982689695`*^9, 
   3.7171905068896675`*^9}, {3.7171905837741385`*^9, 
   3.7171906152596865`*^9}, {3.717190704437745*^9, 3.717190712450549*^9}, {
   3.7171908149533377`*^9, 3.71719084935489*^9}, {3.717190905640012*^9, 
   3.7171909475169306`*^9}, {3.7171920787703605`*^9, 
   3.7171920893980894`*^9}, {3.717192120096923*^9, 3.7171921676451516`*^9}, 
   3.71719221321912*^9, 3.7171922494773264`*^9, {3.717192302712843*^9, 
   3.7171923108447256`*^9}, {3.717192345155565*^9, 3.7171925405245495`*^9}, {
   3.7171926417389975`*^9, 3.7171926657026424`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwU2Hc81I8fB3AklRFKhayQFbISkveFUCQzI0kRQlYoRSTZQkYDachXkkpW
JCMrnb333ptzd0r6vX9/9Xg+upO7x+f9fr9eHbrqZnSNjoaGpoGJhub/f8rJ
vaehSagg7HFp1ipImgF2vTB1UXS5mffInTPzsHztWrA+uvbJT++3LEvQFKBe
443u5K8gXp9ahpxn/DtT0U3qbje/n1iF6C+bZ6rQnwvUt7J918CloSdyDv3X
vVCJ+JQEZ6cKGvYkVhAY+i7zHI1fB3HaBFYVdMreu5r/XSPDzoMehlfQzt0f
Ip+wUmBSQT8+DG1Tr6zj/ZgC1fpHOj6iH+XKnBNZoUC6484DXehpSZawq0ep
8CBownwL3RnzyULSkApXUyqfH06qINDw5u68bkmFUwVp/Xroz2GJeUn6VBBo
9uPzQp+VIX99LkOFfzMWNsn/f/3jxHPpdFQY3Hb8dSU6N1fLSaCGAqW8HOMz
6IflMQfL7lIg5fjKYfYnFYQjDMSGcCEK3DVsdFBCO2u8ZNhZSgZL5/fvLqMn
yozYb2iTQflh2FwIOuXMQE1txTpwpl2TykEnnu/WlT6yDpQidbcO9IWoULWx
IBJ0tvJ/3kSrX0gy865bg/z5zVWhpxUEKXKu/MCfVUhg6FXQRU+Y/32fyrsK
NwUKfTzRmdVfbk1Lr4CRSkLRM7SgJktZlewysLrqq06jyzRleuTl5mEx9Mg9
1mcVhPVLft1pzLNAfLWzXBH9WE7V/vD8FLwvmaC1Rg9FWDOq9U1AREelxkO0
d/YzlfNjY3B9Ke1hNlrSpnb/CNMo6Ozyr21Dr8ZkLKhaDoOokOWuP+gD1V8u
DL0eAIaTx3UFn1cQeLOrQg9N9MLEBY7oM2i55hpHkzvdUOW+0uiOvhRwaOvc
5U54E9HI9hT98GZpl0dMOwSlvzcqQzeUOztd2t4GV76HJUyiky/qn/YsaQFC
97VOluQKgp4+3S617GbgX1XnPIbe+aVtf8TbJthiErC0QktHz0k7mzbCwOG/
yQ/QM5pyxSxXGuAb9A5koT2ME/9y/yBCskUhfyuaRSjPh/U2Ee7cTLiygab1
iLpz9h4RLKI93gikVBD+s1h6zNNJBKX/9Ce00brx9HZd9xtgf8URUTd0xJtr
nycfNsJ6787rSei9kxfTJ6aboJ00kVWKFq1lyhnoaYbc3T/mx9Hfa4NPdFNb
IE7spTRzagVhWWCYqGLeBu7q/u7yaP2j/qv0NB1w3soy1xJ9izzipbDRCdI+
x0n30aoE3ltu53qAJZZD8R066fgJ4xsM/TD/buVWM9qKrP5hp9QQ6PUc3vEH
3VMpXHs3egSyd1omHX6B/57BlVqT+jFgVnp02AAd4j6s4X52EpwdKvPuoLUo
9Wpx22egPoms8RZ9iCW4jGZhDiRqJNqa0OHKdrJlc4swKxy/IpxWQeD7LcLm
arsKZ01qA8+j5XdOG0oUrkHWgz+sd9DtZpk7WSdIwPjlaFo6OkY5eMhxch2u
j9pKN6G1m3UFdYvIUMf+tHQDHeZhZMh5kQJip4h6wi8rCBY00q+zWygQ5k7T
r4++Giel5ShAhek0BWdfdPVDTrKJHhV0mhx/v0Ffeq8VeAf3QeZWSngjulJR
7/K181TYKd3CuYFOK14s6pSmgsOl7ZlCryoI+YM6LYl/KFATpXxcH+3oGyZq
XUgBkW83am6jKxoksmeuUiBk7pXpG/RRiyC2/VtkmOTuHG9AJ20breMPI4PW
WUYvKjpBe8Vs+t86ZPiqbRN6XUHgYtMfOGG3DgzvPB+fQ0ufTctnySPBte6M
Q7fRdY0yA1mLa1C1o+/Ta/SeLBJ1cu8aCB9nJTSgLyv/564rvArjibesBd9U
ED541QeEsiyDZvX7BT201dFbub96FiCdNOR3C80zevC8Qfgc2BrrJBPRUXM2
qX8WJqEyyE+Cgk5aWTkYXDoOgrmfvh5KryC8Zw25+fLjKASNjOvooUlseqnH
iMMwysbV7YNu47qrxSIzCOqEcw6v0IqmXh30En3w2u0++ReakUf62YeH3UCX
lv+QnP7/74P4UAI64UrjDMehtxWEqbM+p58atEP5X950XfQfG1fv3V9aQUDK
SN4H/WzhZKbj5RYItAqpfImOC3HK79FvhuHIYsNf6HVxxqlX5EYglCwOr6M3
vO9V+5Q1wMtZQXeBDPz9cgstzJaJQMNt9u8s2nlGvnjoAREun4l85I1WDznx
n9otIny/Xcb7Es1zqCnqXD0R+DLXsuvRjHyPud8FNMC9LlHVdXT3BdEOYkoj
DDJY/eL/D/dr3KN6vn3NoKYYa3kWXbaz8l8HVwukXqua8UKLa9HRMtm1wmYC
9XYa2rRIpHVssw2sqiR31qOPrqT9Yl3qgG9rNk9I6P5Ou7ybWt3AI5Qowp+J
+0AhrTmAtQ/8jH7mn0EHDLDcYbwwCH33/2p6oeOWhrOr2EdgdeMoXQp6qXBb
7fkDY8DoebXsB/pcNafnZ/MJODSb4DeHvmfd6NLbPAVKV2uV976rIJD7c06v
e8/C+d4Nsgr6Td1RK1nlBbA3ksy7ir5x3k+zYNsyJKjHSeeiwyf1rN8UrML7
4h9zPWj191bmDgtrUClHzqTNwnlkZDGepV2Hniwxe3E0Z8spo8NL67AseFHI
ED3/U6RiLpcMO5Kjh2+j76YM6iWeowDf3vLUl2jGu1zK1hUUOBa5almHdrA3
Sy1hp4LetsOcy+iuE3qWJepUsL1r1nHgfQVhpOnL7yBzKtxZC38MaOtRZsWV
C1SIc/523gFtIaOhYHUK531skTkGffVBzi5HbiqUXTxUX4BWesbeuTxGgc42
49BBtNlnsagdaRRY1A3RZMiuINQHZsnQ6lFge1URrTSaZKR678ksGXhU576b
op/0mf7dd4cMCnm8fv7osBde+VEb66AraaD8Fl0X9YKF1nEdrqYHkYnoxG8O
8LSKBL48+V9I6NQq5oni3SSITZhy5/mA+UR3cV1Baw2+B+vNOaN7xH5rcQWs
QMfmvcx49KPakpAzD5Zh3uvztRK0KMdKyoX1ReC+tn+YMaeCIOHT666dMQuy
AzqpcuguzfaAdL9p0DG9a2mJVmkfHxKzmYRbp4fb36ED/Wml7LxH4VHpnsct
6HzVt38C8och49jp8xvomlphjemTg1D64RbzoY////wnc+Ls+6D9cNZPHbQD
oTPu+Xg3zKX2h7ijm918NbnzO4FuP6vmU/TFau7T99ragevRKdpydHZu2D9t
lTaQYfD6PoVeMnKyeDvWAtr3Mu6yfsL5vfgoavxnM1iTu5WOo2X5vzHFNjWB
tysT2Rr93V5Uz8+jEaImT34JQZ/LqPVg8WyAN9bu7jlol4XRwJhfRCjufC3V
iYabM17H7xChRb9j9i+apkdrUd6PCNM1OzIPf8b3j6T4fWshwj81lWvn0FK/
VU8L++P9LnQR9EY/uah+eDmoEaSOpg2loAvbq21WZppA87+WlCq0B2cD+dNA
M1zkp7ecRy+HPu/yp20FzyeKBzhyKwiNI/kRAQ5tEMF6vf0EetZhxoWJswNe
hSbH2aJvrAftCODpAuvjEBqBntyzyrfi0QPcU6N+n9Ha7tteiRzph86kEM9u
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
x/3a8tyaKgnzcvqxq6po81xVs3V9zUC1zTt+Hq3vZ8sSFdgEL8UF94ag17cn
lv8X2AhWA17r89BZC0In+7tIwJs2MN6OLuwmBvr4k6DaRrfuD9qTUv1jDvP8
rW2vc3bYYX2QH3TsqyTB7n6+EH10uuoXwsZzjfDjqYf9dXSiwZEz/npNEG3d
q5uIrrt+6JlTbDMQxLSkP6GPUKdr76S1wFJvDsso+t3dFB2dXMwvT3hGuC4Q
CZ/CKq670tvAwsqtRgGt2rp8+U4oGXi2dj8zR+8+8Pre6OVO+PxDI9AfvXWs
t2E2uRvcHmfZ5aDfuHTVC8r1wk5LTkIj+vGTYElDPB/dote3L6PLtxblT38f
gsge8tqWi0RCwUsLztGKYdBMURvQQlf7fi2IGB+FRfOMT45o7f0RXgPHxuG5
CHtqLNpm7x7plI5JONft7FuKrhsbExq4NwNcya1W/ehnQzqkTK15+HRO5Qjr
JczzhzRIXqsLcGNz6pZ96I/DsT43T1JAqov5zxn0B46+tOWQJehMdOzxuvTv
75dW9lOeLUO4WVNZOjp+hCWtJpkK6sJKyV/RT5KUz192pMF8R8rtWXTAs7fm
x/npkPnor9mmyzifn4U8H3pAh7Nn7ZWPoH1+eJj+N0+H9ULfhS6ic6bWqyjJ
M6CcfIAahpbNMxy9bsQA14REcj46YVdalJclA3aYrhR1opcCS569P80AsuDF
h6voEJMN/GyKDAhtr3OTtsfz/XS5LIKdAWoP5YxPoMX7D8y9/06HWeOHCm7o
1/O/b+vdo0PGxt/8KejHxt9vHJejg0mb7cJnNC0jQs3iGw3Y42ubf6FdzD88
KTajwYczMvkbHHD+jczvcSdTwUUgLkYJzdPwrPCtFhW2t1KvWaEn4t1cX6Qu
Q1uc1ckgtGGqffrw+BIEG1XLvkJHZXnPH5VYAlX+3Twt6Hz/4SC1YxSYbo6a
pqGXeG6f/WKzCGmxlIZtV4gEx8LLKqX2C8DKVxnujM6L3fF8x5sZeN8k5RSP
VjnE8wcip+BqTLj+B/QA7WHr8rUJ2HZqfvcQ2m6P4HCIzS9o2XCWg8MR561O
wPVrl0bhXuPHX3JouU6Sjm/oMChHS3w1RUt/fXzVpXkIJg1Dsn0c/72e7psc
e3cAnvLM3M9EKwkbt6m/7YWWny/fkdCFAn/Xma11A+t7+wEaOlfTy80H+4dq
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
nIvF
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwU2nc8Vn8UB3A7q8xSEUKRJKui5DwhlBEiUQkhUlb23rPsGdlJQvbMerKL
rIwoe88klaTf+f3l9X7d597nde/9ns/3HBw1stI0ISMhITlLT0Ly/08xsdck
JDGNBEkq1ffSwdHApBIky4/Wltyrf8AyHtZNTPzU0IIr0s4X7iTDR0/ZFnt0
y7tgNnX1dChI5KJ+jlZirog7qPwCnpbsXGlCnzAmyWfXy4WHncOhS2hKTyoy
73uFcHWuvJM5tpFQyC83xO1QCidIYxjOo8XyMuRuJlUBNbuNhiGaZjnT0pKm
AWYl1KKD0O+fLIUKMTdBs9rJT2/QRxO0Xw3vbYcsM2q2QXSZ3qUf49wfwddn
5uYuOpi+jYpOog+MkonPjsU1Esx6Dd8yOw3CpfLUURW0HIXSbSvtUeDuduO0
Qyv/4WM6MTwO/xZ0DZLQ19OziHffTMFX8nMZRPTCydh/ASGzUHuEdXoB/Vgo
o3kSFiD53LdjTPGNhC8+FwcFM5bAVaPrviRajOS70GLgCuhZvH51F90xxBa3
070KUv5BSwFo/bhViXzzNTiYanKq4P/jvmoD55XX4GelrNUnNH/qzBVbl1UY
6OUq2kEXi+8/HUG5AmXLOxu8Cfg8phaua5EtQQzVZwlltMppJrrcJ/PwmLvC
wRZ988g0Y0nzDGiej6lMRBc1SBum906CiJbNdgM693WIoVzZGDBYqknPo8OD
tbuHqD7DauBJD4bERsKtoAumlcP98CGduuEsWupl3s9C3W54XTNDqo+eYW5j
2ZRoh5BPRDl/9KUnHsEJYu/AfC3VPw/969GVUH/6WlCicW/tQ4do3Y3S2CgD
fl49mj/oa+dSXTUzCoHq4jllnmeNhBXzujtMJq9g5gbr0ytoicGAjsDYTGiy
/tZljR48olSjHJ8CmSFdjAloy7uhmu8uJoBP1mvNevSWudXZW37RYFgXFDOL
nggJstq7FQ6EIZOBvUmNBOoSui/b6SHAtSF78Ay6jL6XWS0hAHbpuPVuo3cl
te/F+vvCl2N/k3zRbRY7pq9OecNb+PwlF00WryNr3OEBSboVXL1onw031y+H
3MDlcYzhb/Qel4apZg4X0H1qk8md3EjoHhg4xFLiBJIv1WYU0c4dfx7ZtzjC
gcaT/Fbozk/76cWVHOHHZ2rzOLTkr+Msr047Qv/mTG4t+nfQZxUrZ0co3vdu
eRp9x6Eseea4E0QKpAnTP8f159/ixCvjDNay7tbi6PNZ4qmXOlzg2m29Yj10
FZ34AZJRNxB2OLfpjY65GXy7N8QT9kawnn2FDtQ+/FXU1RuWX31z7EafkDfb
uZHlCyrDx/b8QS+/XtHxTwmAPGq9uGMpjQRvpYQz/FYhQC8ZdkwdLat/T2jg
ejhY3CeWuqBFK65mM3+Mgo64LbkXaD8htksDo3Eg2CLY9xFNG8uvOnMoGUJ+
6Btto3MMaxoVbdJhkS/6G19qI0HR1Oai5OALuKrV6nUN/XM691tA6GvI9f3D
4II2XvpnX+NYBLQlp1Oz0HTHo1u/XywH88l7wh/RsSf/adYbvoU2poTa32jz
rv229ziIIHDpgwpfWiOh+vejmjHGVgiyJhlVQzunqCXwyXTCfKqEhTM6jDGi
x8e0F5Q+mm1nor/QJ0LvwgDk7CYHd6FnST4e4uQdBWrhnoO/0TtkKc+bfo/D
/TuUObzpjQR/RV7jpX3T0PJE6pwa+kl9C0sm7xwcf/uoxQn9N5CRPYBkEQKW
0rUz0fdKzrWFPFyG2cMD051o8cM7K4ZnV0HhKq3dL3SJe9BEzIU1yHaWIefN
aCRoKMUk+VisAdUr2yhV9MT3F6ZBLatgMpR91AktWHqphPfWCjTtGSnMQPOy
Hjw1I7sEfOcYCJ3oKJeXx86mzYOfqdzHn2gP1et3hpJnYDrWUZ8ns5HQpB2U
ctpsEuSbX6+ooHW/ZJQLmX2FrM0xN0f0CgOjC+fdIaDgY6XPQH/4PhV6jaQP
7l1XSvqAbn/w6s+ejQ9A9HET/Im+vebQ3pDbDDzFhVVHs3C9Vp2nIdA3gM/E
tJIK+lfxFaeYggqYZDw05IB+wCZaNONbBLIE1fvp6NqP5Fv9h3Mhw8p76z1a
I26hP6AgE8hSy/y30FzUqmkHuFLAsGuB9eiLRkJ/45GeDtt4aPh7JEsZLeNx
iWo8MQq4T2mKO6BJ2r6aENnDwOt2ADENHUpXfZ99IgjGQ6s13v//+cNrFqQk
/kCoWR3/gWad6Ji7zOEDaYs81tzZuH4tSYryFj2B5LDOv6toOp7zYUU1bnD3
SmiYPVpzVaB9z0MXqHOqP5KGHj+8z/7JRyfgzPme14EmuIRWXmlzBI9Bfukf
6JTD1p0/ZB3hK9Xt91wvcf0J32Fpk3AEmbMRelfR55gSLDifOcJzk6YFO7TD
UdE7S/ZOsBPzyykVPZDHdbK8xxluNwlRd6CP/27vPF3nCm+/G8RvoqkORPgb
aXkAB2/sca4czKMXCSTtI17gptledgV9ri3t1G86Xxjx/itvh84QYbK8OOIP
G79PkyWji1JLnniKBAOtrVH9O7RvRObnEOOncHQxxm0JrcaTojirGwmSRq1S
LK+wPtgWSjXLY+Da599b59F0mtp2ItsJYKopVGqE3tucQlZomgLuHfo2IWhJ
Zt4/yS8zIEY2UrgY/WF+dX1030t4Xf1uaRhN0vtCt/51HhDFtnJIcxsJvWdP
RzydL4LhXAHTE+gMPy5vVttyWOe5xauB/hOkuvtF+C3sSXo67oQOsRZYMihu
BE6Whudp6CCO3Tk1kRY4E7qh14a+TEzb71z5HlTIjx1cR+cxWzL+OdsD91x1
PrG9xvXuZTlLI/EJXL4HRwH69l6e2u2+YYi0eHvt/v8mcaZ0oRqDnKlV+nD0
qc6pjwWak1B/62hHOfpJco6uhdQMDPRdD/yKfpHIWPlo3zysKgfIU+Vhf5Js
xHQycxEomypJhdG0b7OFD3QsA4f0Up02+pfjjgb7nVWQKD3i5o6+Iyt6j192
DZSF1KVeoPtSPpP0PlwDoyyfrQ9ohb+0tdFfVsGZo6xkE63Sr/HsTeoKRMTM
WXPkNxK0OL7NkbQuwUv6w8LyaOEQpXU1ywWo81NZskC7KMxdEiufhU87HjnR
6AXGtXWypilYtisyqUG7sfW9o2kYB/KVKZ4p9AFFvur0rBE4bHJgnLagkcBm
tidaT3oARL8oPRdDe3wwZL7k2gNK2q56emgzE19t098dYNCZz+aDVi87rrAU
0ASOl8f7X6HzzjdL0f2tg7Ba5qge9GJd8qCUVgVkn7l87Te6Qfu4mcezIqjN
d6Q/+gb3sxJeV/vaXOg/ltuuhDYJTY2n9M2CpeejAdboHkX5bwNfUoHsAIN8
Ajrri3Q1GWciHAq7RNqArrSXdFfkjAERKru6OfS35X2LicYRoOiR7cpQ2Egw
qh/+YScWCvpbQ5Ln0B1fn70q2Q4Ae0u6LX20m+bkweVWX3gye7EkAH2Gsdf+
ta43ZOpbWxegmb7lH7tI7gnVAxmnBtA3Jb16KC66QY/ap8W/aOqQYIpdEReY
b9mTc6wIn7+i3SflWif4J3PeRBVNJDevtu7AfqHiIY89+vhDyYNr2C+cOp06
lozON+b7WY39gvzLnuQmdHGZcLGCqyPc4qLQW0Z/iJ/loD3lBLbxZ9lYizFv
/JIHbJSdIYTBvP8CWto0sPD0pAukByZF3kPLyb0IWCVzB/1zEBiCvlRJr9dd
7gmH5ybditBt37oq1aK9YSAuwHYIzcRuRPWr1heiFATN/qH3cYhczHEIALWt
zjvHS7BfU/kz2TUeDHTZNtdV0QsX3COtBMOgTXv/FTv0qq78TnBrJPhRVskk
ocOuic/XnYoFQtltCSJaQrh9XMg5EXaMSQQX0EYDYyO/5lOgkjWLi7G0kRCh
bCFVP5sB9k2K+8+hNSTjCo4qvAQxuyVaffQyvfe0UG8erPKGk/ij89L5h2uX
iyC3T2zrNfpRtOydT3fKwdR3YKkXzbJdnUv4UQM84i4Tv9EVbVu0qi6N8HXy
yCB3WSMhk//ADcbeZngW1fhBEf0r7GTUn+PvQUfWhGiJTv/w0OtOZzewblBX
xqIrbQcGbDL6oTs9L/8t+kHw6bmvrMPwREM9c+r/46Ui/VNsX0GJdDOBtryR
kFoccCW8eQIoiuLDRNHPvdU/H0uehgaDC3430QYUsjTFD+bAjXHM2RP9JyzE
ZJtyEaQafKyy0QoDtIxSssuwZXXcpBO9/1Jd0anfK1DM1aG3iSbW2yl271sD
y4+P1NkrGgmlVblfIx6vgaAnk4IsmuiXZifCtwazwmUXzNHzDLc1DwusQsbX
m6IRaH5eHY8b4cugH7ZzvAI9PPBottN6Edhl0ji+oqlAm/P4whwMrcgxU1Y2
Er46RVIOH5qBmOdze4TQtCPXS7/xT4K6auhfTfR89g8Kn8dfgf6v8Hdn9M9T
LRIRs0PQltc7n4Ym0b5/uGOqD/xuO3xtRecypayW83wEAv3h/lX0sc3cw71/
WuFvTW37/iqch5qi5FQViFBtYVgvjfaIvmOUW1QDDuyUZffQ0TnmnNO/SkHs
fU5uCPpNYJ/c0OQbWHVRSStC8+SSXL/wMAdyBddjh9CDgoeypeYywPRzdOg/
9GO/B1bXMp8DT8g57+PV+Pl3ebnDUfEwJjXioIr+6PSD1Ig+GpIXPB7aoVvP
iBMIquFwM5HHKAkdpusvz3wyBFivtOgQ0evjwe+i5QOg+5e56gL654QmY9dV
zJOcvXKMNZjPUgdoqym8QelmkeQ5dIOClrJ4lAdQUGsL66MvRN9au7jpCo0V
v3j90VwWAp8zKFzA437yoTz0zdjfX8qznOA8G4GhD222+SfkSL0jbLVMUWyj
lxWHr1RfxvnCIXCb+20jgdOSlEZTxBHWLvhcVEZPl0wIhQc4ghCpu5c9WvNA
VN0XdScwb3F8l4pWujdiURbvDNmhtlQd6KmTO3/vPXCFKfVHVzbRCXkH53jG
3YH7gNkTzlqs36K03eknXqA/YvRRCb221DV4LMMHktLuMD9GC4jR79+v5g9D
Jje1n6NvvdwcY60KggMnrye0otPsz1vUHXwK19dVR76h/012ldLqRUJEmRIn
R10jIdlAoVZzMwY6XeQMFdAuyncvVSYkAi1BJssaLSLzcCE+PhUUKaXmnqHj
aEOUs/Iywa9DXLAZTVjnmqMrzoHGcOFHa+iIG/tCPEXfwK7WicJD9Zi/f+e9
GN+XwIXDfN/l0EGO/t/yRKvAaYzzrCW6iYX1yv29DVCWdcg5AV3cYt5db9UE
G+asb4lodeEn1QJr7SBymuHfMtr6Tyov1+1ueLRJI8vWgOvhg1fXuH0/5FZR
+F9Cl7SrW79VGoZ5j3+tFujhRrkTsk1f4Zj8Nm0cmryyL/Gu/iQY0fxQbUBz
ndK3PmU3A6ldaxGLaKldmW/9NvMwGr3Yx9rYSOD40ht5lmsJDunOHAB0RfeY
f5nCCtzgHNc1R8d5rFe9ql2F6KnPydHoIpY9c+nma9Cd82msFl3vqNAdfGkN
9lp288yjv+3O53Upr8JV8fcmzEScf3a8L2onLUPgr+YcafTa8pGCDpVFaKpt
WDJFnykx+D7gNwdkvjXCkegfzzdLqiynAZTKbWrQN7tEVC+enwC3vUWlM2i+
1aOLzadHobr39U+Gd9g/BuSpS5sOwM/47PPn0VkRyed2dHpA4k66uzHal/Ii
3apyB9jwJDeEoe2f/zbuy3wHBXNx5FXobUWXxMmDtbCUF6kwhfba4KuK8SsD
AdsnwXubsF/6TpYRtPkGTM4FfjiHpowqNtxdewkZO94MRuiLgwubhgIZMNbo
pvkEHfCII/jq7yTgCHSMLUdLEM6UJ6zEgq6K7dA4+vzkR51ov0iIY3rETteM
9XNqKefb0yfQN3Bf/wy6srat6mdjIDAmG6XfRccNu/gPnfYDVcM708Hoka47
x+T9vSHk+E3+UvR7aiGaWEZPaF3SfPAVLWwtxm/C7Yb7hWo+dUsj4XXVTcoh
Ehe45KC0LoYWLu9/TAhxAo8LcuJ30DE2VzR60x3hLYmMQyBaYeTZ7dSzjvC7
WbKqCP2Y2K6SCo6w2icqOIzuE2Gway9whMkJwSSSVlz/wfFW1/2cYGCNl14A
LbtmdORKmzN0/OVwv4Ye3GcxTRHkCnV0B1YdWv+fB7X2kQy6Q8khhrsp6DMi
A9I0Zl6Qw0/d3YwWynHNT1L2geQzpJdW0GL7n45u5/tBhNx2EWsbfr/5eLZm
QSD4a3znkUanROyRkbAPBZe7y9H30K1l18bK2CPA8tEMRSharINQX8kRDUau
X+2L0Yo+OXSDC3GgEzw4O4zehFnJ3ZokUInv1iFtbyQM0Tku71lNA8KL9jYB
9ADHzJhpXxZIlBCl1NGZ9+mCM9tewYnGmlxHNDFc/Io5XSFwfixlT0X/eim5
9p2uFJi/5D9pQc+NqS5Lc1QB1VL23xW0l34xLaNbPfz5lWq5vwPzlevUe2LV
O1inShyTRstSPnOvetkG06xR6sZo9x62vXz5XTDEE9oYil7m8cym2uyFThE/
sRK01nmNi7rig0CUcc/8jCaPO+Wovm8UylUcWMneNxKeil8p3C4bh1w9K/8T
6Lq2+OH7YVOQama2pY5WlY94GP9oFmIcDO87oScFrnXZCixAkJ/eUCra7pqW
Gl3kErhFXb/Sii5etvhyxH0FbNJUqlfR/flTwnXvV8G04PLJAx8aCXq6Hi1p
Zmug91Ym+SL689Fow3yVNVDrOLfXBF0d3C70zG0V5IZEPJ6ghzuPmTZSrYDk
7Im1ErSh/plKAdIlENrkMRhBn6oaFOUKmgduMo4esk7cr7SnWuRqZ2A/435Z
QfS09sNp7ZZJoOXcV6KBLqn8wXI0bgx2T+7hc0Yfb/YZkZsahg0pktg0dL5h
D6dyaT/MKv6mbENfc2UQ3pHohs/aGw5r6BWN5ZID39rg472luQNdjQR6qsjr
n7aI0GQzfVMGfbeM0lb85Vuo9PzSboLeP2qu3ZtSBnlPB84/RbtcI330Rb8Q
0pI+vi5Fs35h/mX3OwdiXrVxjKIHbij/USNkQnBF41Pyj40ERmV3kWLGFPBo
rt4VRMv7HLSw6YsH274SK030PzrqCCmRaDCdyBt3RjeNfB53tg6HW2svNNLR
ZLf2vog6FwLqf1OIbegF1QWbu3IBIE+XIL6OJmSrDRdd8gXJQ5FZbN2Yv8zF
FP4/veAUf8h+QF/OlF4vtvMAnjO+Aabo4T/Vv3gHXeGAnNvPp+iwk3N95ovO
EGr6oawS3dRQacrt5AQkIRx2U+iKArWlb7GO4JD/UGxfTyPhSKvk2paYIyx1
v12XREcoHWY3V3AEg036N/fQLQ/OeUR1OcIA251HYWiz7QdU+t1OoHwh/2QV
+i97uG+Ajgs06P9dmEJfzIjSvO3oBmd8VHP29WI/wLk+KaziCbkvnptKoR3C
2X9Ue3gDd/sKnzFaYb/IjcfjvhC7fHEqDE0tP75xdy0AaBnD0qvQJqebovNH
QsBL/OvdafTOXXj0eCYcftwQ5mTow/3E5XLeAD7vBy4eo1Loat0KSnkD7Oee
dz0zRp8In6gt70gGrUZO3XD0/iyzq7Lz6dAxbclWjaafH4yTdcwGoK7/NI3O
5mC+ZGOUB6UnGWIY+rE/vHPILGpPMQheu6t5Hn1G+8JSzN9ySLV9w2iCvi9x
blr+bi2wxv3rCkfvSo3fciUSIaTq2tNqNIHjmOmbuVb4N5qqPIMujPLoEr/W
BXYk6zSMnxoJFM4aA8KMfbDIS2g7j373p/hYXvkg3FWMCDBB3/5gXB3O9AX6
H4zLR6DZLaLZjD0m4GqYCHkNejFqfsft2TTUF3k1zqC5vUUkpvLmQOJTtyfj
QCPhU+EzSw+3Rcj9xS1zAf3+6qF2xe5l4OKw2TEZ+P95LCe/clqFGGisjkCX
XqIgMN9YA9p7TM41aMqnO/WCt9bAM8Dw3Cw6T2J/iUXoKmy+KvrBOIj1e7cl
iOLXMjzoJC29gA6bNmv78nYRxtY1bE3RG348Yn67c6DFmiESiW7tFmjIn5+G
jnMbqzVod4rea5fyJgBuyebPoimX7pQr/ByFUo8oC6YhnJfs4/YV0wyCYMbk
CWl0cOUac9inHkhtFps3RU9qjAnokb4H1gWf7Ej06vwfrgyuJgim7zN+i/53
yPnElapa2D3NyzuHTj/3l8ltrgzsrj+eYBpuJNT8HXwoKFEICw7vUqXRMn4f
s91P54D+Mxb9++gYvu4b9YoZ0F97jyMKvVPWZLPOlAxXJko+v0WrawdOOK7H
Qh0FReIcenJ/pmyNaySIC2jpMH/G6x07M9li/QRylLP2X0RfHboerJ8WCJxW
m3330bIpi2Gre/0gOko+KgptGm59Td3EG6jLY9Rr0aup2evqgx7gMTy9bx5d
0nQ2W3/NFb7vSHQyjzQS3oqNWPINO4MZt3/oRfSJ0qEDIw+dwMdVwec++ihz
/tOqKEd4PrDHORJNu2SZtoD1XinablWDPiheIH0G54feJyGmM+gLZuvtP1sd
YXlO+Q7DKNZjcqVKfr0T7JHbqyWF/mty4hHfORfgSem6eg99e7tN/gTBDaR/
h196iiYTyJFo3vSAG1oakhXoPM/2jWhpb7B5w3x6Al3A6JEv6onzEW3/Mbov
2D+QcIbS3wuAbJNYjjNorscfFtpZQqCh4QbLXbQXkSpZ+H0YjLAfpA1GXzX0
iK98EAVbDsMkJWjNfapJRspxwNj77Oco+tGmoKjwlSQQPHV7leorrq9TvMff
jabB5aAjMyLovlKbyEeUL8Bg6uuIHrqbXJVX0yQXXGTSev3QNp5C839zCyEm
0bC9AC1UL5JqxlsGbzZ5GobQytz0xNyxaui4Nl1ONtZIqBX1laxja4Tp3Bf5
Quh1sSZm1vJm2KW8n3UDrb/Voc3h/B4OGQokeaGvPUiG65ex3327EJmLDtsT
tMXq+wnU2F4H9aMFLGnWC+0/g5ntQ89d9MJu61QD+Tj4dJ5yEBhvJDC8/C2R
Rj4FyQJrDzXRobF2k9dYZqHCt/CeG/r6q3PPzpAsQO9XG71sNIvy2+oj0Uuw
LCWu0Y2+OuA9R5G4AlSxm4rb4///vSvtZd/iKnCvl8nwTWAeesQeLbVZg/PK
jmfU0A0SFx2e8q+BdrakkBParLL6/ATrKliTbvNkoGP9Y5iGVJch5HbNoQ/o
gvmhxx1rC5BV4ca4hd6xPC2fyjUH9cwye7gn8f0e2cdtST0Nnx/9+3sF3S9Q
0qg3PA6bbQ2bj9EdSoNZMr4jsI/PZ+k5WpVJSyT50yc44Sk32Yree2fDIGqm
G+Q/Uwx/Q/sVN6appLWD/pmWj+xTuB5oP/qsCbwDp4jAlsvo1p2MywFWbyF6
SanWCs2Ur+5oyFIGBQq0pYlo03sbj98ZvIG29Pe579A9T7WdDSNfwuTOk/QV
tOeNguGh5XT4q6OWwDaN9VaeyvHhTRIcLGEIv4QOO7vxXakxFnAz9bdAZ5+z
1f7yIBJUzKPcYtFFWpGs32yewP2m64/r0QdKZTXCSwPBh2v/g4X/z7fuOWh6
0g+SXQYMWGYaCTqP+bwYA7yh/FO8zkW03EJe3TqbJ/SI6KrdRzfu6BE1BN1g
OfTw5Ui0bxRt9GE6F6CaG7lQgxaII+cTjnaCoZAkg0m0S63TZE+JI+QK3/Kn
mcX9vtdYcJvgCG69h3NF0En7uhLzMQ9UHT536aCZvTvZ6QMcgfPws+8eaM+z
FrEL0k6wXqt7MButay5U1HLHGYiGhy52otk4QYhn0wViKIcNN9Fn0vYaHmNy
B9NXCQHsc42EG8+06Es+eIKk6s3XsugNyaTLnpneQPuNrdsc7dperK/2yRdG
YwY3I9D1pCWJWfEBUCAZf6gSXety3XxsH+7/ozdkxtAGPi8NJR6EgabXgXtU
840EY8WWfqPvkcDLNxB4Cj1n0RXVYB4Lm62xeVrocl3Gw9sdidBiod3jiuZI
ojfguZkKCQz7tzLQ8h8UE8jFMuFBSf/hDvSpscKV/NcvQVonBr6h3fqDL77Q
y4d9f64bH1zA/WRG1u+XYjGMp7AEA/ocTVkK82A5FMv25ZuiwwzTk4Vj34Lf
bFTvU/SBiCt27ycb4UaI5s9S9EPBnmeUui0gIMzMMYq2f1ySVd/7Hn739BDI
F3E+kXi8WSDZAx32kSaC6KWjJxgCjn2C5EMaIRpop9ks8CscBstaxjdO6Gin
mjaPjq9AMOzuS0UvBhyaGeefBGbKiF8t6K8vX4IQ+QxM51w7sor2f3rlkG33
HM4bDLL7lzAvD7WnmdxbhMD1LlNptDpD1/ODEctwMyYs9B6693S5wwHRVRCU
VCsMQbc5GNsOn1yDnZG9n4rQNYKR5KW2a9Dl2fl7CH3wMw+5KsUapPE+5SRZ
xvnX5rvBx4UVsG1VkeNHZ0S8nP4ksQzyFvRmauhJcVuuur8LcIDhwxN7dOda
1rUIozmYLw4tSkbvdbj8kilgGqpvKA+8Q0fn1WaqhE3Ak23aP4vo3SBzw29y
X+BOSgcX8wrmVe/LAP72QRCWDZGXQlvf6xJenOoFktkr5gZoh3s3N9osOqE3
mCYsEL2/QmKjNrIFsk61Fxegq3QcEvcfawSHnqDBT+j+H4kli6tVoGSvtLOD
HlGiryhILYHDh6iP8q02Es73zKsSB/Nh+W3rZWW0aS0xkXQyG+oMAh/YouMc
hfLN6tIhgkIxPBHd8+jr0IOpJDDKoSptQLNfPnL7McSBuErL0Bz6Zv84bz1N
FFCs+//dt9ZIOHnczaKg4SkMRF/mOYsW9fFa1PgdBDnnKBXvoNU0ZwybdfzB
ZaTJwg9t+dSi/meUD3yIGflSgPYzLaBdVfMCLrWNa8NoIvVbJutL7mC7h4ZI
vo71ffyBqnqnCzQ1cEkIo7WODUn4MzsDm8vZ7JtoYUFpvc11R3ggrnrQF+33
i+9R9nVHeLt8LyQffdr5h4eBsCMwZLvsDKKfTmnuEXVzBKO7kZZk37C/2bqq
WynjBKUHc8aF0K6v7z3e6+EMe3rrNHXQTjbnrcWvuIJe6KcmbzS73cMZ3gp3
yJNfPpuH3pufVkCw84J/f8leDaAThc+T0fr7gGbFIXbSDZw3RCtuHhXyhyxr
kacn0VPP+U9ORgbBzxOK/7TReQOnLCiWn8DVqTs2Xug0d/6kAUIkJCfbTeWi
J4zzWEyHYmBNO1T7E7oWaMKDXBJBliGj9R86SvAqy0GnVIhpq5QS/N5IuGRT
ZM77PBPmvD++1kL/dJUovJaVA+cvzB7xRCtWZGwu87+BJ5s74a/Q1frbfsId
JTCWz0LWj1Y5Ps6me64KxO4L2u2izQPXmG/vbwA/7kuzApv4PvQNbip6NsHg
sM7N62jO4AgSbZoOEIy27HD///jC0z41625wU/GXzkEbBDLM/ozqh4+UyQW9
6MRsCmpx62HgqS/m/osevEdJ8nrrK9g5tUfx/8D85hbQCnebhFbRcQpN9OWG
JJHB2Bk4vLTl4IamHU4uuR8zDw+z9i5ko2WPGB7XgCWov8N3qwdNGilYmmGw
AsxsFzr/oCmUvP6udq6CcbcGHN9qJJB3lOXZPlqDimCzInX0k8yJJJpzOE/I
efK6on0/7bU7LrYKt3diY1+gBRNuCJTZLsObsrw93ejnuz9+PTywCGRW75y3
0SwP8gqp5HB+EPi8xPcT+1uV7wwf+aZh+9mebuef////ScpWYewIqGhxymah
6cYjrxkMfILUvWdKu9DfJ5NyNoa6YaNF+fhvtEfDbOETh3aQ9zJK4P3VSJip
vRNH9YsI8VLOtGpo5+trpsf3voXFjXA3J/R3iw9PaitLQTovezUDTVx5dieR
WADhJrUGnejUykkaFnrsFzj7e3+iH32/nD7ukQ4SQ4vyPL9xvavETGbsPIPA
SNIKFTRRIXZaQyQWPl89eMIRbfbapXvhRwQIUZxOSkdbZBVKWZWFgmft5b0f
0P2T/fX1HIHQ63DbcwvtVSN/SbnIF/hEHn/j3sb9ffzO5Wt83iAsFhSphObb
1UsZKPUASYnnotZoLcGcSKBwA9mzxT3x6AfMtzRYaFxARbLVph790lCqbCDD
CW6cH2WaQ4esniylq8H5X/pb0b4/WJ/t+29vyGL9y1BpnkVPKKs9ZcB+wY7A
vnEHzfhyFZT8HcFDViTKH90jWif1GOs9SP6yWD76+jOVi+rGzhCloNfbj2Yr
DPL8SuYKyUpWtjvoe+WBBvuF3CH7qh8z3w7OE6bba7S/PaFQJbFYGU0xr3qy
q9kbqtUKNB+ju6krKfSo/aBJ/d3GM3SZ5cqJNxMB0KU5FEVEG1u/rDBwCoEh
rRWxRfTz0ebB0t0wmLxB1sf0t5EgbqdttKUXBcs32R5LoVVS8yUUf8fClp4Q
iyGaseq6zMeIZ0By51JJELp/Zcb3nXga0N69cb0QPaen8UpvKRNYDS2+D6IF
d1vvFL7MAc57XtH/0MEWdCvxbwpAwCRWnH+3kfDtgyyl8qkSrPfcPjW0i8if
JnuaSpA2r3/sgH5HSd7Jd7IOFCz6WVLQRFP2dbIVIqg/WihpRtOySgc3FbWC
ntXu9RV0ZNqzFydDOsHYhmWT9R/uF28bz15W7gXLxwIx0ug9Dj9/6dsNgJP9
RQlj9Neq7qNt0iPg46jZH4q+r5B6TEVxHJ4437crQSdc/nW+hHMK4lzdWEfQ
jI5+6xNks5DmHllKRkIkFDwwL2Zvn4dcz2wtQXSLmGd+j+wSlHrXbGqguRU4
ImTlV6DOtzvGGS13iPycb+4qtPnPSKSjZ0lW+S/eXYPewO3+NrTZ7dVTybpr
MBrMYL+OVlVzyWZ4vgqzoXz7D5ISCWls4ne4zq3A+lOpMkAHeqdOal1cgu1w
Ne376OCjrKffvZ8Hiqh7P8LQ253vykkoZmFfjFNsOXp9neTlLt0UHIx7euYr
+lhe6dQW3TjwJGR8oiQjEtQOcstPan8GoWcV9qfQdUf+6OqyfoKzyR/2a6Nd
uH2fRnp3AyFloswNfdbwgV+TSTtcTdvSzkLT96ddvazyDrQy6Lbeown5bK5q
3LWgn8Ud9x3NI26+67RRBmbZZ86ykxMJNbNz/N7xhWCbc3VAFk01e5ByW/4V
uOXedXiA5uW57kJumwkBeXYHotDfjOO4b2ikQERBcHkV2nvyhdXqTjw8K0y5
MYFWSRR7on01GrKKS7aoKYiEZlVhO+eIcLi+LPXxNFpp9LvvXcMQIDve8PIG
mrHrUYevdQAU31Xwckc3rZcl61n6gmHih5tZ6FVayhqDo97A2Kcp+h5teXXi
CEWDBzTQD9NsoLMHXvGpHnQDK4W7kwcpiYRXW++JAtwuwOk1Uw3osycLpAMq
naCzyiLaFH3/pWd5/nucL75/s3iKNnvv+kdc2RFOnnKSL0V/rhrPe4L9wmfT
XY4RtNiXej0JW0cITvP7QUpFJMgbb/8FNieQ/EzbJYA+7y7krsTrDPMskdnX
0EeFdKlep7lAvCqbpwP67oWWZK5UN1AIfK7zHE3++6pXgYQnbDXwijShNfc8
lwwBb3ix/Yp6CV0bV1M0oOkLWhIiE0x7iISBvcvZ5Kv+QG5ZXiWJbt5Q0EkU
C4bil9JRd9HHk5l0jqs8BcMJ4oMANGXTCx17qUhgZL8il49+ISqsQ3SMgXqt
j+z96Pff7+k9D08AyzDtzW30nv5OJeLb58DZNvLhKDWR8CM0zDfhWAZ0khq9
UELbsnBnhqpmg9uFeXcr9NW7Mkz2Ua9ByN7yRhy625fHLYirCEYKNoVr0eLa
r3+DThmEzLvsmUZXm38zH8+uBike0nFaGiJhaTFi4HN2A8zfCqwURV+P9mbg
bG+ChNi9kTfRycGm/Axj7aD4MdrcEy3TovM7m7IbtqgPy2ajEwKPfD5Q2gfZ
smmHO9EzCzyUcf8GQdvt+Pfv6L+p7yjujo0CRXne+8O0RMJwQxz1YY4JKFkT
y7qEZlp4+rVkeQqMTlS5maE//iG9OVs3C0z3QDscXftq/5UxswVoSG4+VY7u
WWe0aK9bAqsBZaov6PflyzqfE1aAk7H3KzkdkWD/UVjDcmgVuq7crBBEfyM3
vj39YA3cfb+Ga6Cvjznkk15dA6FaYzMndDBdR3ysyyqMbi0SUtHSlJefOdCu
QKiIzaEWtI5U2auCfUtw/sHPb8voDbK7tBIZ87CQ6d7BQk8k8AWKypLNzEDC
F/LM8+jUXw9Zqf5MwpY6o1YQej3ko4un5Wd4ERIn9Abt9ynr+Xm5T6DVxEE5
gD5W/3iDWNcNFLsZX3bQIsqGzsnL7VBy7kQ5714i4QDb2GWZ3ndgZPMm7Cp6
qe+hvsvBOmB+fea+DVo4ZfW5Vmc5NE7XQAL6OZ2E917NIrDmlD1YjyaNk+Vt
dc2FtEdcMgvoT3Ee5lOkWdD9duceyz68vk/vxcXcFCCh/xx8EZ3vWtpyazYe
RG5VvLmP7lSZ4U/8FQUGuTGfItFGYVPNquVhEPHb5k8N+rz8lfej+sHQoHTt
6CyaNMY2kdbUH9bjhRQZGXD9H5YMq7L0Ae45mkfn0ToTfcb3z3mB+tm5KGM0
09KrhE+87uDl31QZhmb3u/0rt8YFCvvTv1air2zdu/uL2hnGeT0pptBN0tfJ
c5cdgfHxbcG9jERCktPpAVtNRyAQpdTPoS8a0pg6Y15YM7E5GKK3aAhHt1wd
Ic1gMykUXfh9ss9X2gm63/Q0lqHPak3ZUTo5A8m/grkxNHTpfz1w0RVE1J7s
pWXC93OImoU+wx0MnpuLS6D9jKeylO55QcSygq4+umvb5DelhQ80XODzDEJP
mTdfc6LE+w8hfVGMVlFmL0zUDQLuz187RtG++u7+YklPQP3E23UqZiJBV54q
WW9PJHg5JR4QRYsbUAueCYyBwlYH6VtophutojbUiTB+QMvIH30x76p80FAK
MJqKBr1BP9jwXKcVzgRC2b6CYfSzy7HLWrQ5YE2x3EfOQiTodcqPvLxeAGnX
23+fQgvQjMa3SZZAd0Y21030LTeG2UqbSiDZ8L3sgx5LsKOq464HkUuGFnno
5y+gzKvrHRhEyEQOoF+SHyWj52mHiDH2ChJWIuEp6SQpXeVHaBD+PSqIdilp
4Xk+3Afr7gNk2uiPv68od4cPAXdniYAnekmW90HSty+gzhGp9or1/7w25phZ
mgAvC0u7PjRzFKXum91pKKxWfvYXTcJ5s+kh6TyM05xo4N9PJNBe8CsYfbsI
jLpUsxroS1P3RQe2l4GQM0Xnhv5wMlF8JmwVrH82iGajTYJUlllur0GaQopO
N9qmooc//8YadMe6um+j1dR41mp9VoFk5mYm3wGsP6EaGaFvyyAicbZdDe25
kbu5gN9n4Muy5oT2XnU8z0QzDxG966yZaOaBAmPvf9Owbv3a4Cf6Or1wzHH1
L8DdEBRwlI1IkOL+bSJgOQjqDKZ5yuhwT+74Bule8NKX67VHq951V3zQ/B4K
87l/paJffdczd+9qgvGdv0c60PtohE5ITtYBo8qI3CY650pt8IvP5UBIqjTn
PEgkcLYQe+5tFYLNYmy4Elrw1En7FYNXcNPHZsoKfTN9SF4iAtfHYdVz8ejf
Y6JxTE9SgL9YILQOffLJtfJ1sQTYd5VibAZ9tvP+JXOXaNiaGBPbe4hIKCK/
E6s9HQ5fnGsCJNDdtjm99lEh0MQU//kWevlJq963kADIe2Ur7IsO73xtIeDi
C9GX1Hxy0SsHciMocN5wGT4x0IPeq7NiplvtgXlGKfgbrZnFeqGX3g2u0Ey4
cx8mEuYjV5QCmV1AJP1tjyJ6lZf6rN9rJzgolXDMCh0+qaIV0+gI/7ofO8eh
i3lHH7IoOMKs2bXOWvT4qF6Tm4gjdJGcPDqDdvcVehfs7ghlCVT29OyY18xf
WojCTpAsMtkmjk6QPGJlc9UZ/NpqOW6hI1S+Mq+OuICFQaK1D3pp2Tv36qYb
aP6ya3qFDt83F2ny2hPOR6gf7EGnC325UhPhDUcFhB7+QmvyfOlKaPAF6oY9
DVwcREKDgHiGmncArOtMsSii+di7DWx/BsPgWt19S7QylX5hpGYY1AU+q4lF
21PoyZ6cj4RsLgeGWrQLqQGZjEEsPK3QuDeNnj7gpDHSlAh2105V0B3B/epu
y48RnVS4PUdNJ47mdXW+mnQ2E+Q9p/X10L0aTZFxFS/hJFtDsTea6ZnlHgeb
fGB+k0T1Cl25ZKajfqsYthUc9brRzEtex/N/lMPEV82Cn2ia5Y8Sxu/eQpuD
MBkXJ+bDSYoVewoiFO6jvaGA3oyR+xMX1ALx2TOvHqEv6DJV72H9AB4yjX9j
0H+WrsmcMu4B04FkjbfoAwVVvS/ufAJVS6cXU+jhv7+umG4NgwSV1m9aLiKB
rEr/JCXnGHCknFYVQ+sejav30JkE8rN06bposfKNx7FnZ2Cxc3bTC92gU5ru
SjEPvSZEpRw0iaNZNlvMIlT/fZ78Ef1K77n1iaplSI91Xt9C/5OUsXRVW4Wg
U9rynNxEgtXut72y59fAulkk4TLa1rCh6YPVGujcoV9+iKY6PeM7uroKMj/m
IAbtfqz/eHHjChx/+i665n/3jkt8216CvcdS5ybRjtJnpP6VLMDmW5cLtEeJ
hC9M0+5LdHMwqnUjXBRdEdLVYn98Gt4ti07dRDOEMX23E5yAXL+957zQdfeu
/d52H4UojoWQl+jixevtIfsGwbm06WsX+r7PtwolzA8DlTSxLXQjywXbAuUP
oDTtGnCEh0i4U6JxLSqzGQojC/iV/vflC+X1FA1wECbabNG/How/t0urAK9l
lgfP0UfmrOQfOhbBQqICXRva4d4t0TzKXNBUdM7bQD9Tb+7Z8zwTqjdfqx7h
xbxqf/k9jiwFeDK+riqi7wtxrrXcioeQa0wRtmgaCmf224FRsLEjJ/ocLbln
7DLp7lPQy3XobUXL78nYlGgPAqLOq8cbaA7pZehd9gNBylHWI3zYr4lyWa/S
+0BU8b5yRfSze4ZC2r2esH33ko4tunDQpOFNjhsY7bX7lYw+mbX18cUdF3hf
nZ3YipbUF2u+0ewEEmbD5zfQPcplbaRER0jeTz/KcYxIMHQ15oogOALFOxl3
RXR+0qDrw7OO8NDahtMWnSKbVHwqzRH6j2TVJ6MFzd7tUnk7gfT7AYNW9BEy
hfiuSWfIcqIh20BfbmgISBxwBfrj0pkcx4mEDK29Npv2HmDXZymviC5NfDx9
f8MLRr3SZ2zQRe8hlFfQF+SF+wOS0Qv/uisukQdA/giVQCu6py7n2uKrYDgQ
LNX+Da2gI2A7fTMMPM4+fMDBj/OjQPblfaejYHYqhU4RLUtu4XiBMQ7UInvy
bNCu7FwOL1mSoFyGQi0Z3a/7onKpLQ04l8+utaBfVj58ObabBQGJ5hHf0O3R
brdS7XNhTSFZlEOASFiLq6QJaS6Em5tdvQro++xhrpf0yqAhndTO5n/XjNlb
EWpA4JrE/mT0jXjhKQ7TRojYMS1vQft84HcePtUCv14l6nxD37MI2vOR/wMY
6Hz4xX6CSMgcY/F5WN8DbRT/EhXQhxW+j0QdHwDRYtELNmiVIzyTFQoj8Oyu
8WgSOrSO/3qazziQ7Y13b0GvXmTsfhczBQ+q2zm/oakeW+2XK5iF3vs79eyC
RIJ6Ul2pd8ICnN9/2lABPThXpd99aBkyiIZkNmjeyce2a7srQGsdk5mEPvTF
Z7eWZw0eH2mVb0F/ygpKnLJZg9GO3zPr6Nq0+8csF1dB3kkokP0kXo9rn/3h
xBXIO3ZXQAFdvkoqKxq3BKx9ke3W6AYtzm5e8gVw82p6kISOqQo33aaehelT
P+la0AZzlKGlA5OgMnIifx3dNRrCXyI9BqVBt9XYhbC/ASbo5hoGjrPha5fR
A3wjVTYv+sBvqjHCGj1T8MWyYLcTliM2RZPQdGKdds9dW0Bbhr+vGf1Wy+XZ
UE4DGPG+z1v7//yc3yxG5ZVgTW0VcOgU7m+Dh9hUMO/dV5gN5NCfj4VZOTx+
DSG95VKP0EK5nPzjdVmQUKHHEo8WXpjxX+lIhRfJu8sN6BekrKQXiQlQ7J3R
soiO1c/RPp0eDQ2mCmmswkTC4kXxWsHqcOhSXnSWQesFBRw+KhACIyJh183Q
bkaP0yPIAmB+v9ipKPRhjQ+HkuZ9YGv7E9VbNMXzXoc/sV5APu48PvP/8UO7
3IfL3IGx+Ug1w2lcD9v3y9MEXIEztzFaCt1XnRjVecMZToabPLqHrikJZirg
dAJJOxrFp2jF3GBL4weOoKCbz12BJne/OZ8l5AjXZTS2x9FeUlUa8ncdwYD3
Rx+tCJEQpWYub0LmBJbUifkS6ODqOyzA4QyuK9KB+mhh8+6zD6pcIKh33CAI
rS65fa9kxQ3iKvzOF6PPvTD84fPJE7KSBVhH0Xecsjd+v/eGIu8PK5SiREJk
lkfRhIQf1Jlat55Gl1gw3XijFAgflFnTddEJQuUxe86GwrBIpYsv2qe+JE35
SATM7r+tlY/+ajko3Xs9Gja3/50aRC8kz5QtPI4H0vHMPaRiWG/0V52l3iXD
vmbFCUF0wMNn8Xxd6cCRu1Sthf6SCo+mpbLhRHh4jAfapCjvgvbaazhrJ26Z
g94N4jsinl0E8rqDir1o/WHX1iSjctCQcT26g2bebtqie/wW9Hm5/hwTJxJE
S8EglpUID6nf9V9DLyUfCApcawGXFdMCZ3R/jm3t1M8PENhLG5SJ/ltYLGYr
2AsxFQWGnWgy8fWM+2EDkJGseeEn2sVf0T4scwTeeG+xHpXA/qHD+J3Ry3F4
a/ps9Sr6o6PRmEHeFHQoy7TZoQmrMdkMFbMwKDKZnoIWebE/LzZ6Aab3B7i2
ods8S3y16ZZhY/uE9gZa/ij5lZSVFfg31inMcQbzhPyUYeOBNaBvtqFWQLNM
WMsHPV6Dw7n7J63QJD/fKFKRrgF/eFVNIvpJEE2ncMcKSNjdiX2Hzq8+L/ht
eglkdUmtVtAcO/Ycm1YLoC7zQontLM5H7Ofc2SJn4Q7vFZ5LaPFl9u19dphf
1Ct/HqDZNp9c3VEcB6eViE8xaJI+tmRth8/g3yvxpg69EBjbcXOxH6IqhoLm
0VKjnM5yPN2QluxmxHyOSIgPPZc9/aAN8r25paXRas4x1ISLRLB9Q5S7h2bU
VNWXSauBs1+MlUPQm60fndkXSuEP7Z7rReh39yMU9VvfQIPkK70hNFda1env
WjngZ6ps9A9tO7GdO9CXAVdiVsyPS+L9/L1009D3OewjhtuooqNmDJQKneKh
d03U2Q59VMfr2u5WFMQf6fdKQrPwx/29IRgOt5Udgojo7Ii0i1H7QoDb+WDE
Avrazz3s108FwEx2dTyjFPZnTy8Ij5zzhdz+26nn0KFHtl/f/OEFlmT/svXR
8/GZow7OHiAukl7gj74b/ZpQNu4Kv+7Ileehx8UvhxX9cIba0JnaPrTTz9XA
n4lO4FMV2LyNHmiNmdCrxDyYO9F59DzW255qnnlZR6Db/6FfCR1VKN4TI+oI
3bKWo1ZomS6SnLvejhBjzTgdh9a5sBu4Lu4EuinFS7VoHjKDqSfXnIHzg9b3
afRzN9ls4zEXmPq9tU13AefR83VXJHF+yOFPJBNHt6hJBRm98ISH2hdo9dAF
NTtnTgZ7g6jvFyZv9OPc9oM3in1hq9DzUA76Txw/w2PzAKj+evToRzRXAP/u
355g8KRvEthCB0ulnqU5HAby501Fjkhj/vtY6T6riwQaM2pJeXSKlkSWJF8s
dMXmggVar8VxUc8qEaLeqShGoacf+UjcHEsBnW+ralVo1fXjYpaTGcDBFXlj
HM3evS61JPsSxlXE9fdcJBImhViafnfnwQuXTybC6H1cbP2dK0XwIMfxkTa6
YvHKuIthOZweOGTv9v/xWCGLip0a2CR/65aJ9tJO6270aoRKUX2/DrSVqNoH
udFmcL9L8uQbOtO3vfnY2fcg+zQj+qAMkXBb7cabQ0PdQFUjnwToR3YcrL8L
++H9/GyGKTo0SO5HMf8wRBwIzn2KJq1MrxU5/RW05U8Wl6LX3ff1yPdNwGHb
zqoR9NyCRLXx62n4mmrVSAY47xrHdce6zEFmJ1P7CfTgVXJq9f2LYPanpFsd
vcFy5GD6tWUQOnFjyBHt7/bq7VXyVfh24xc+NSJBS/ZCtjXrGpT7PZtrRt9L
frf7AfPDtVh6bRntUrY3xZFzDQjjX7dYCDhv2R+ZPcuxChT7vHfPo48zdZ20
cF+G9gu8VEZo8c2QZzd1FyHMvHlvMNosdOv+vw9zoBl/f38h+mNIx4D49jSM
brzm20X/bGH9+grvl+fsC2eBS3j/2azqauJDcN85pUsTTQWaDRITvZD3Np7X
HS35r/sVY8cH2PgX4fTy/+NqIsUHY5pBUi6kswf9nPHlyVLSBnAP8OXZQfPf
PFncnVMBxHY3x+OyWM+3nAdGA4qAeq/DB3W0Wx0Jk82JXFBTtzrqinYK/mTh
3JAJ0dFmDi/Qfy/W/CyUS4GhAcP3H9Gp7CaH2GLjgfPwLe5t9Kk71iejK6PA
+I6WPZ8cnr/+WUZSIwxy01Q71NDc1dInv+wLhvUpBS5n9Km7+Udyj/vDGX6C
XSb6sOkU9VNpH3B5INXeieYQYcmaZfCChnwxzl9oG51ZDqdZN6D6dvIxjzyR
kLZBzXvjqQuoSBxrU0E/JLtRNjnnBFGOnEcc0YebRBZaBx1hsJrNNh093yOa
feeKI3DsMra+R7OS8M0/wHwwukTLsYVe15bx6wx1hBw/chvuy5gXUopKQ3pO
sNK603wVrZm8Yqn00hnE6LYO26Mbvdcz2rxcwUltzSoVLRcj9HrPP3eoi5xv
akfH3fusVZuO/c+niUObaI/m7KsbtT6gdHDEklMB+7V9DfTbtv4Qdqv/nRL6
iK1p/8pCEPSndB58jFY8yB5lqfsUDk22PHqOZjs6cXjRLxL0jzUQW9FaRsa9
sqdiIcusim0DnVL1yMd2OhEWXxc/5FDEfMur6bfYSYXTa68bFdB7Lk2YvF/L
BDuxFwds0BWVRmaP6V5BtX2KRRI6QbCYXS3nDZBUxTc0oyeqa0lqDpXC5Z2I
/evoH4NHR5QTqyAEQh4cVsL81/XT5tZogG4f33r5/81y/pZ2axMcaHFjtULz
zXAY9Op3wG0aB/NEtH/euV+b6d2QoWJV9w798dk+xyPv+2Eu3IxlFf0v/dax
8PxhEOozNDt45f/fbxt7r50dA9sDt2pl0cZj1IXeyZNQqavF/Ait8YlUNrtk
BnaTVe/Ho/u+09XwFsyD/LjC20Y0GeWeI1bXlyCYl8C0jDbiduRXtFyBLlMp
0wNXMX9+/NxL+2kVWHPFagholVt7uHIt10Bv5SSjBTrfLum2r/gapIocM4lF
h6uITl49uQrTjzmr69GmzkTBXfNlEKxgY1hEXzvs9fLi3kWw3mY0ZlUmEvae
4DoceX4Oyi7SVsmgvYtCZnaOTAOhaccoGm3TY0JyMHIELqpvzlSjBeQoNUBs
AM6PLplNoqXJQz7tOvXAObOpJRoV7Oemo59cInkPEpufLUXR7E/2t1THNIGo
V++3m+h3wuETZ7jqQZi+w84LHb3XW73YsQJOJjT+fIn23W1KYn1bBAJ8VS4f
0Y2yB5hyfufCscLCv1toGvEr9jwVWcAjnePFqYr9yLTMPhb2NOBqSyVXQJvd
8nPrvZ8IHFrxAY/QpmOVI+63YuDQeBhNLHrAmKfyeHwEHHgY8OQt+rmWwvhb
/1Bg/uXOMI0+panrfxoCgcHPPoruPw7uO5rq/48DOBIlpUikzKRIiBbJ6xZK
QlaUMiu0EHHtvffKJmRmy8ruWonsPbLJHqkk8Xt9f38+zj3n3uvzeb/G87rn
KuB+RNPez0jmCrQHXzKKoMdT9f0cPZxgT8zjCA30h5ikw0/kHWD36YfHnNF8
FqaU5Ja2QFGgEpeO5k2VjLHXsoYduM3ZrvDf/lihbvrNEraaridtoKfVv1N0
jxDhj7rYKY47uM/8CLyQokyEXxPn3t9EP6D7fPvuWSL8MOY9a4zWbFLbqH1O
hJW/HLlh6HBhj8LPB7D+PZhFKtEx3FaEfZgf5hgOFk2hx+jlrGXjrGHmLbXo
fkXMW8Zn1baSbWHyzE7ZeXTMt8c+6rIOMFb8S+Ih+oFrBsOLu07wTXLpkwt6
+Bh9dqalCwy2TklloHX6dpe85nOHvgfDDR1oUogxqcLfC7pnumQ30XJhPBsv
u/ygw6z5K6cS5peDdTzCMUHQulOjeAv9WLS8tIDyDTT7lHWaoGusOVxi1SLh
M9MHtQj0mbI7ztAZB3Xv3vdXoXfv/G3+N50IJMHEhzNoG7a/67fvpUJlWeTI
AWWcdzPz+1d3MqHsZpDeRXRbM7UYJ3M+lHR6TmmipZWrfvemFEGhtqOhG/r8
rEfarEE55M8T5zPRxMKbWjxtnyCHaGzUha5x55Qckq+HzF0Gq3/RVz4NPnjX
2QTpAVqvT6hgvm4p1F+81g4px9R+y6J3ZWebhIh1w7tUeWtTdG5SsZh4Vz/E
i0j/i0Rv7O3saNj+BrFV4o6f0I3qxPuPZcch6vb5XbPoM5ardd38UxDee8b9
oCqJQMtApe+8PQOhj07svYw2Cn3xqSBoDoKWWXy10VuXhq95flwAfxt6Og/0
hsK0o4TiEvhQ0wRno810PZ6WXlkGzxByxh50IiFh+KLxMrix/wn/hz50jHcq
Ym4JnDNWWE7exfokcwgwKVkE+0vfY+XQRxuO8X2dnwebmhGO1+jlI1MXI+Nm
YeOxwGoc2o/mfNv4h2mwoLL71IjOm1rw/ek2AeupTUHr6G/TBv5CmC9Mb7Ho
savhvmGwM3lbeQBW5gyFZdEG5UFK9JldYORbTGGOVt4j2XwzvRUWzlJ1vkWT
Hv86yVPfAE9bVd99QT9bj9ut+PYTTJu8M/uJto67Ifx64yM8pl+T5FDHvPDq
kN7KyQ8w/oFw+Da6u7DtktLTTNC5GzBpjubsqer7K58M334NF8SjlXvp8zjP
x8PDCH63JrSzTK9v6cFIGBC1ufsLvXWu5oNddQioDzae5LyH86w/4RUfKQC6
bJl/3UanzMsPzBzyBmU2g3oLNEs9mzTbsBu0VRWGJaANL5v0UOD8VNClNGhG
k/17qtDz1BGaKVQu/UbXB3Alp+vZgWxSAjXXfZxns5xh4aPW8Fl6pVcOXaL4
vNwD61d6RiKNiN43c2qF/Sdugp5+lolocr+Sn9GqRCDwDcl8Re9em76jLECE
yia+oxvookOLM1x2RBB/aTXLpUEipD6Wy664bgmlBz5/lEdH1Fgec/Wwgsu5
R7wt0bSZ+213P7CBIqUnGu/QE/wfTZm77UDkxwe+FrRntQZfp48j5IZS/N1A
i+sN+6WkOYPARaWmEw8w7x+uHnTXcYPM3rfRCugBuRi2tGFP4LNaem6FfqV0
a/HmPT9IY7kqnoR+Qt4w5+sXBDzlPrSt6NXy988dpHA/0BwY+oPey5IkzUYf
BZw7p7O4H5IIbBxTlPMn4yEunmh3B017XdTEWCgJjl+vl7dGr0TNiqmZpEPU
xGG2ZLRI7EsaL45cYHZ7tNSKdl7YUkzxLoAwnvzKTXQwm+l6nXgpHP5MFnBS
E+dBk+w+1rpqCH56R1sRTVPk9dTXsA7o9sUJ2qCXLkub9Is2gW/mwk4ymt9j
6fekcDvQKFxpa0Mb6/qcpHPrBs9lr/i/aLax6RCdkAGgCuoz4dHCeaLvxHj9
xCi4Cp+6poQOrJP7HXR+Aii6zA/Zou3lY0QVVKbB0bx2LAW9bTt8lP3WLPw7
wpDfjubJvGFiMTgP1iW6zltoXGtzJbsXYeN+rvIpbcwLQu5Op+mWweLvNpcy
Orympiwb88B6jPwPW7THm4tvru0sgalETE0qOkdsncK7YhFWRuZCOtBS943F
L9TPg5GT6ON/6Lz8PGEjsVmY5/I8f1oH97Or7rMXJKfhwNbNq8ro60cL1VbY
JkCom/qGLdrkJq0t1dgIqGQ3KKSgJfW4zdub+8HCw0O9Dc0wVGJ28k4XROrc
1NlEVy/qV1JfaoVyUeqn3LokQj4twSTJpwFG6BteKaBNnPcw3Pf5BBQL7taW
aNPKllMNOx/hZN0Nl0R0n/NMu96NDyATR+XbjDYUOv7WsCoTnhPrQ3+hXcVy
G3jTksFf0T2WQw/744bUuede8ZDHeyNFFk1VZB3jlx4JXRRUOa/RUT6VdfzS
ofB7sK44Dq2pV6nKphwILIVu1Z/R6l3SvGfavOGqv3TjGvrSkV2CLTbuoGOw
u+P4I6zPGvEBaYILuBDqBm6g5avYGaHbEVKOuk2YoGsuNJ8NpbOHxjWphSj0
zPrdVxsGNrDQRPmzFv2gUHvpupMVHEiu/beEntM4VhR32RLO2btSHX1MImTU
9Pq2WRBBVV2KThJ9t0J5VzTuAxZClMwv0SW3TzHQqxEhcm8tRzj6HxdPR90y
EcrHXXg/ob9IneayILOCkTJJ4Xl0wcw64W6oNVC82XWF8QmJwOXl7N5ZaQsn
jWokAe31ZvY3eYwDyNx0kXuKfvHh0EWVdCd4ziF5NwR9ZpZf6s0+V/D/Q6FV
gQ4LeCvUw+QBeR0k/Rm0XhV1dPiWN3RlOBsf0sd8xLhja/Q7AH67Xre8gtZ4
dCm5lT8EWLQonJ6gXQnckr9vhMPVSySvAPT442W33YExoHPQOfgjmk7f74BJ
XgK4zF6LnkDbtBv8eM6SAikk8qT9BjhPb/d5/v6aAY3RnzIvoUWYV488fJMH
C6+dCnXR3360/PynXAR0CtcqfdDgaDdZp18OwqfIGwrR0XTNLFmHSKBK9ql1
BK3nEJH1d7UeiP2OfXsNSYSOyb/kJhRfISqfMCaCPu5pkv7wQgeU+5DNaaJv
NAlaR8X3wMjj6jUPtPLflw0PKgeBQsLxbx76Nr3OoNrHUTjJRKAcMvzv+m7O
m5ImQGZlh5bqKfbbCWbppdZpeN5YxSiEJpCvqtJmzYJ/ogObBvrlRMpnT64F
yLOBU67/ee8ZXoudRehS3RHMRmuYZ9NqcizD77NVl/vQKptcF8NNl4GF2uEa
xTMS4a9NNMvWjyW4Oiohy4+eJV7wv5e7CDoft5XVnv33eY2coX3lPLgEVz5w
RI+x5u0ml5iFlOf2j9+jP4TeP1F8F/uTn3h0O5r5/rV7h55OgEbOZvsG2szh
4cNG41E4316yh+M51oP4+NszHINA98MCbqI95DooLHu6Ye7wBQsj9HtDnZ4I
7J+1F39kvkFb7m/WFIr6AnH38ibK0XfOfa9MVagFS2tjlkn0Bdu48c2aSlCO
Oau07wXmNSXdo+5QDPyV8x7CaM3qHvbC6DygGk2vvI/uGq4Pb+59D2Pkhj8d
0VpMRmX2aUlQfoKHPw3dqLReMcwUD2HSk3qt6Cu/J1juGUWCiUFi5C80tb+j
b7VhKMh66bSxviQRsm0JNpqpgcCdwUYtja7erPxdnOoD281DV1+gv9xxFOPU
8YC+pajXIWj/Xz2LGWyu8OHg/YxS9KexgD9/E53AX5hpfAy9V11t1cjOAQxV
u5n3GuF57f3c0BZvC9ctQu4Ioa09dMiGHKzheISSuzr6qP2l/KMblvDrI12F
PZrvsITNo1UitA9+/ZGM7jAsnHF8QITMfz58X9FBNUGJwfxEcGeX1V1Hv10a
nDqkQwSda3sijhnjfDM5rav8iwhij+pbrqPzymu57qxbwmE3193PjP/7/939
9O+PrGE55bp4EHomYm/LK1Vb+PKZzKwEbVpHW5gwaA9Jc5XpI+hfC6x/bPY5
gT2t3SiVCYnw2fVUWvcRF7gncIVJAH3WLaU7Kd0NhBX/yN9FezXJGQRMecJ+
02JXWzQZQ8y8xi9f+B5iXvYOzSWRVfqYJghIhSJrX9APQnp82LE/x/Sunl5D
P/ojzJSmEQEWf3K0j74iEabygxxyPGJB8ZhRGAF9NeOyUA9tIpy5yv/VAM1/
+bLkU9EUoNKe2xWA3nPohNA1jwwYdUwTK0LPcLLJuXHmQWmi/qthNLe+DL34
k0IIreVOozTFedziZTldXwpG0+PfzqBnzsW9HKupBpk9CYwqaB73YccrG7XA
xactZ432KT/f/4jnC/y7zeqSgI7g2N47eLkN+l4OfvyM/t3096XcZifkB0Su
LKPXDw6bJj/oA9889VNMZpifOpyfpCoPg34no5YE2khmxKVGZwwIPztDn6AP
y/Ga0YtNAgtTcJMv+o21EUXlwRlYv6xIUYCebSOJiX+chVaNA6KD6P6Pp1ZT
qBbgvW2zMcVrEsEiyjNob/siuMZ5p/CijUXSv9hsLoFWtcywIvpAz0mbmlfL
cHmc6rAlesdAlEVPeBlCjh6PSESnbavUiZ9agiXFc8e/ojsjz4nl6i7ALc8b
8b/RjdLsJ0Z2ZiGp6gE3lzn6rb7+yqkZ2PllkiaHrm/Qo46imgQNAXd+Ijr/
JwPrUPMoFD2Jzk1Au/NqaQSrD8Kh2Nzzzei6Sib2uphueNFVV/ILrXJQJOlZ
Sht83jcozmmB+08i7W1hrkY4IblSfdviv+/zaYrYFpDA3nq3tAU6kPPrW/2k
MujPY2mMR7eOvoi+87QAzs8KyjehOyV61xtvZ0MAh3T7T/Q2o6xCy4cUmFPX
uMtBxH5GV52jczUBpAOM+2XRh9+HMPNFR0F8vaumOVqHsEvv2Uwo/P0XOfYW
Led/XHpvVSCoXch58gX9NI52S0LPB/Je1M6uoxUcqhbvDbsDbVL/S3ZLEkHG
O/Rfs6MLGA4urd5Cm7a+WJfYcYQaekqL12huZpX191L2wCZ7dDMOnXLGuWPB
wwasnQTsG9HkqSb0i8FW0F0iSbGOhpjd+usESxBauefOZoX5Kf8OfaAVEXxO
GdHcQoNKLNTh/jCt5eJvhv5ZTZWijPvDtbAI+jj03z3tVJVrRIj5mhX2Gb18
8iEr9V4r+E1Zw/IDTRQOkFxJtgZl8b44Vms831c+uvUP20KW2SKXDFrdrp1C
tMUB9mRQpJqi7c+UMq22OsGjcaYzseiG9EcCh6VdofLo2ZwGdP3Pkoqg5x7A
onRdZA19+wGlU9NrHzD3VC8+boP76ad/iyeUAjFfvbhyE11BCj+gkxwC/L+d
ql6h9+gb0BNWwsFDIFwyBu34cvdYvG0sjD/JbKhHk51NzmVVS4SrsZ9ur6L7
Enexpm2nQERXT+sxW+wXB/bG1O3Jgh/7FlRuoP2KieHCL/NBQZK8zwRtEExX
029ZDOnWRx5Go5PIFI1v/KgAyvwzo3XoJconLdwsNaA9S3i8ghaS0uv6IP8Z
SjnUvrPYYf2pPnklVtMCjPeev5BGJ+++6HlNsRNMAhxXjNHP9vuq9G72QlP9
m9dRaMfPSwOf1IaBZ/v9Ri1aWMz7l+fbMXC6UG27jCZPenJyd8kkDL3oJmOx
JxEkiEyGP2pn4FLSnKsUmmta6eYvvzkIHtzZY4z2uyl9/+DgAizSM/pFoldL
j/wpt1sCGVm+Q7Xo+0nP+q+oL0OSE7xZQrc+E3qQorEMOyWqR486YH9oNFh0
81kCelHDJgL6nobkvjGWReD+aGNniD5qMzltwzQPF0UDBAPRAy95fVZjv4PM
x8Sx4v+s6qOq2TYFGqJFISPoI+HfWtm7x+Hlx0Zpakfcz/wYMp6lj4Cj6PBv
ATSL5dE7wgv9EPxxJV0NXXWs57RIQRckiVI+tEdnddJpswi0QfFHpgMp6HgN
0aXegc/wRfRM9Vd0xr4wu6whEgx9lDD9iebpjDgx86oclkSVuVmdSAT9La6m
4ReFQF76pEcKfXKGPstYOBcOi1l5vkC3XaB4y5SVBjylvmKhaMrMy1rHyN7B
ZbH4hTL0UhRzjnBKLNwu/RA3gT54UEm5yyYctMQaFPc5Yz5wTRo0+B4MJqUD
FCLoBZbkwM1Nf3AWWyrQQFuI2ta693rBm1JyA2e0fgVV0My6G6SJMR59j34g
ZyNXTu4CpaWnm9rRu36FvUqtcYRmMXG7P+jg4s5dBpz2MFJ6R5DTBferHJvn
vm9sYE3s0ZgMmnTG8XBAiRVQllmEmKBjy/hFV59bwpEr3tIRaLOin36foojA
Wxb7uwrdbXVp3PkSEcSv5KXPoCdEJddaxYigUFb7gM6VRBh0qdDxT8T94Urf
/kto53PRP0NfWYJZ2XyVFvoP51fNohwrcL+y88odzePDcoL/mQ1ElNFzZ6M5
bwnl6BfYwfsrPD3d6Iujf2dSVR2hokzU8x86lYr8n/dFZ2i7Ii920o1EsMrQ
9W0Ld4XxMp0FOfTwuYu1C+EesH7lddxrdChfm8CStg9Ql3soxqAvvY32zKbH
vCYeTVGLLovRZRs+gv2hPLtgHk1BeVPZYjYMJMRJ+gzuOA+25GTNa6NBqbyb
+QparOj0AOufeHgsPvtFD/1N0t+99nsSWJRv2XqjN3m+qTMupoOn+EHBfPTk
tY8XLE7nQnT5ibF+9PHhrY/XLhdAtvilEHIP7E+xCuEJmh+hulxWmhf9SaGC
fqe/CjrEtX4ronUnNL0j/tbAVPmrdEv0kXkjUht5I2yIuz2IR7uMe5TcPdkK
NBUR+z+jZR21Duy63gnHr2ZWLaMbRJjM773pBcGKqldMnthfdrOtUroNwfWr
nScAbWhxk7VncxRUK6a79dHbQ4WkBwMToH9108MfHcan5exdPg2WFfvFitDk
2uoUw69nwfsq58IwWmZG8HtE1zzEVpyP2+1FInhPSV33zFsEVfOPnvzoVv1H
lSdmloD2rISZCvoor7EsGC1D7SRJ0xqd+OEa7YNry2Abc1MmAW0fyL7y58kS
nFdtFv6MXrt4iTt4bgHm9ymxLqMpyvgEqybnILGmm/qIN17vijdEcpPvoGGj
sSaOXhoVUu/NnAJ6kZGhR+hMv2L2mKpx+DL3qMEbPZpat38rZgScE7/n5aGr
Rh2/39vqB1GNlzF9aIYrB1aEB7tg5dCa+w46tSU2jOtxG6Q1Wrzi8cHzeX3y
NdXdRtBx+vtAHn0h4VBtjXoNMIs63niNLrY2+zaiXgFtK5TnotEnTrDNDV0u
Ao80r2Mk9DGfjONHxnJBQucA1Sy6kqatl6k9HX4xhazQ+WK9HRNJd1h5B9mt
TIMX0a9/vF57KfAW9D1i6jTRxpUigndLI4ANOHNd0X1sFbcj5kKg+1dyVAb6
iaxeXpNCIPhm87l1oIlt9zq4z/iAlH6O8R90odhX47A9HrDFel6Dww/Pg9bP
QvkxFyjoLpG6ieYuPUQpZ+kEL/yuChqhBR0/JXVdd4AT0qSjb9CXDu0Pt7Oy
hYGtG5Tl6Id3DyTZ6VtDcEHT0jhaLHrMsu27Jci+UOzf64/7qo0yvfwsEci5
u2uE0OYSzGpP7hGhZPB+tjqa/lR3TCrmD5OQbxH26L6oKbkWXSKcvv3IJRnN
ohIWARtEGKX4/rIZfdx5wnse80dE6Yt7P9AdZicJjrrWcMd09TpLAOZbt1XP
dTlboOKzOHsNvW1jW2TSbA+VY5tMhuhZ2llV5W1HsIh0oAhAf2Pe+6wF+6eA
EuViIfoVW3VqlpcbTO/x6h1CJzl68JoWeUJs9X7SrkASIeer4QutfF9QtQzO
5EOX1Ups0Q0EAq0QU7jSf655e/QUeSjUzkQ7WaLZ1/Z3DP8NB5u3HC/eoqXC
elZ0KWNBWD1ZrR59/O2flpf5CTB3gO/aItplME8huiIZEuuzzxwOIhHuqiRa
5n57Dxr2IkeuoCGXfdEkJxfoL5aQ6aG1e35KTzYVQOOi+LwnuvWHRurzzY/g
mPypOwc9ter5rUe8Gi5r3qjuQavLrf1aulkLK4eb3v9Dr4tVnneQbIS05jtv
uIMxzyY0c/Qpt4KOa5fDbTRp8yFfv0wnMInff2aKfqhHE/HDrRdafgyrRqKb
q6UTQu4PgXuGHlSjaZn3b13qHoVKSwniHJpM4MrH2vEJ+C3NknM4hEQYv3jY
OX9tGoQYfk1LoLu7R+1kW2fBcLSd7SlafILf8z1hAeKzstRC0GNkNys6GJeg
39rLvwJNZ04pXXZmGehlntTPoB04lvcFmCyDLOO17UOhJILtk1kH9oklcB4/
flEcrSLg81cicBHKcjZe6qN1aZ/t1AbMw7ptV3Iguj5c9q0CxSzwy+YOl6L1
+WfISXTT8JjJl3EKPSZRG0maGofYSQN5ujfYz5lz/NuejkBPnqSbKFpJluPV
tHo/HHBgr3iENrpUfH97vBNuyP1d90P/Ttq37GXVAg5He/lL0LIW9Dz6i/VQ
Mp3/eBw9ZNvHL0P7CVY++MfQhuH9PvUrJ0P0I5x2etZ1Ef351tnRAzn5oKtw
g1YXneE5PrlrMAOijnFJ+aAfcp7mrdtKgo7v/2wK0cWcXjLTe+KBpqj/wwg6
ZVX/qdD3CJB0KZzfG477pMGZ9X0fQsBWMejEebTEiOvBlboAKGB9+UALLXyy
uZKRxxsW5mRCPNEGz++aUf5xA+4S7qZ8NJhY3DAbdIaHbmS7htFXep80vPdw
hDfKQ2LUEXh9qj1yCJF20MJeYnoO/XW+9lkUnQ1QLYa8f4AmO3iMk/m6FUiU
Go+7oR9phgn60VmChcdtllw0heqtJCY9ImSrnlIeQB+ylKyOwP4ww7nLmzIS
8x5Rs1viKRE4lr99EkBrvCj9VshsCffKS//cQ7udo1z7fc0KAr3CzrmgufPl
Tr5fs4ZGNdOnWeg3e2vO7CHYAQW3QkIvOtjdW+cStyOIrfL2k0eRCAF3Xxe3
sziDaeXuQ/zozZKjobviXSHDZ0xGDS1u5pJu3+8Bk/cqHB3RA01uBjf++MBx
nsiS92iaY7SlPfGBoPrj9UoXOq7hyHv63aHgV614egctf+29V79eBNT78evw
RpMIUUvfuw12x8G2xp4IFXS7pnyYdGoiXDw92WqHzretfn5VKxWMf1ZRp6Gt
fkdJsFpmQRopGjrQa8/NrrJl5cNoAJG4hT7SSs/YVF0MzJoqOTwxJELRxkEr
xuuVoMQnOKOIHrWgpiqVrAHv3zTsNmiJC1tNt4ifgVQ7rZaMNuI+ddF/tgU2
g0j+rWgXyUtNodqdIKIdV/8HzeBQ41O6qw9e8Ftvn4jF/X7qRFcc5o+kP3cv
KqBPsB5p/Rs5BqF0QjHm6CfR6w7/iJPgepKGIhYdMr53tfPODLy+MmlQizaC
i2V/12fhkVLl13n0haetq+xiC6BsECHCEIev19ee4/57Ea7bmUaKoZkZ/swy
HlwG4RC5HV30hOoIb4nZMnCl8zzxQh8iHlC/xI79oYqsKRfdpq15yJplCSi6
B4T60Ek7D3bULRZgba4gbAfduXnYtUV2DsbJArZ43uJ5liuB5sIZ6DjyVE8B
bbb89aH4wCSQ+CU/m6M14h+/Sfg2BvnXWQVi0clG3CEs3cOQcO93SC36ovmu
SBPpPgg0av8zj/7sGNw5jf3T0TVDmyEe55nyraAl6hYwiXKrE0PTy4sC2+4G
0MnVPqOHfitXp0VD/ASK9aJBXujJ7kEvJ+1SIAwx/M5F/2XgKh2e+wBCa4sP
+9ACA2JhBaLZwLHnM2kHrdXxZF2JIxUOsiWePpVAIjCW0XzePZUAZOdt/RXQ
ElTM79MPxcDKLbV1czRP7z/30vthMKItpBGL/r5Afl6DKRhazGmqa9En/M69
3d/sB5U+kycX0HKNDeFUfz0hO6HShyERz+NqE3urihvEFUesiqFND3HPLPo4
g/9XU3U9dORnf8+al45gPyFX4YUOa7AiU022A6M/PCfy0JXy1j6xV21Ai47c
qw8t/m3L2dfWChRODi7toFflVSTXpS1B4kqh6ql3JMIy1bPGN+5EnNcBpQro
gswW79PCRGA1eMphgX7Fb/j37HUi0NpJuseiNemJIZcLibAVzLpQi/Yx69BP
9LeEhbTfSgvoqgSumMQeKxiqbC9mSMLn+ylDUxVlA81dGaxX0IHCj++9XbKD
8jk3Fz20lPuX1FQLR8gk05n1QsdlXuR20XSGmCNid/LQ9THt+l9qXMGX/3Bh
H/pJUGR8/WcPsL2+xEKWjP3+ud8pxTc+8OLeZ8dT6OMm4Q7nBQPhgVHitAJ6
haQhZHA+BGRdbeUs0BXsvQyJVOEgFqWWH4s2tNIPJxuJBr5cIeY69PPzF23v
7EoAlnoa+wW0pUAk39XFJKAZmpxgSCERTt1U9luaSYfN1cpbV9BiQ7lfb7Hl
whx1ZI4eeq3x+pFYrgIYYDVj9EaXHSIqXb30Eb6IyNvkoQWjSn4vRVdB6a1T
Y33oA3X7Tqs118B7bfKbZKkkwuMHvQp7Kz5DpPlg5im0SPP4eda6FqBJoNVR
Rkf1G6adVOsE6+arDHbo8ZPzr+Wp+2D+t1F9KvrbB9pTR58Pw8MT8VYdaK7x
o0ZDWWPQrNDO/w9tKe1VtP/LJFy1phg9lYb33zVXS6N/BrKTRUKU0bnsn+4G
J84BW/vjG3Zo+/v+AqcXFyBg682fVPRRu6c0r7yXgOx0Q2YH+vBuxui1B8tg
orKh/Q99fmPG/cHdZRiz52U4nY7nl2zA84f1Eii/16hXRsuWX77n9G0BSN0+
VnbommfhFCoxcyBCXsGfhuYz5qQBfD9J/EsjHWgJ5uxq3k+TcPgee8g/9Ddt
TQK52xi4uSjeOP0er9/ZwMiZrCH4le30Rxnd1GA/QN3YA/oD+Zl2aFo/weL3
b9uhd/ekdhra+lIb2WbGF5A5x8jQiS7PVP49+K0GSh7eqP+H9pT8/u6aRgXw
ehKtTmfgeVbQcXr+rhCiPqTxq6BPdaX5n6DMBZqR/hE7tNi9ghOiC6lgQ7Mv
JA1N9fVAeglzIixcEL/RiZ7o+HR7T1s0PNR9+ecfemZtM2Q/6Q189Y3LPJ1J
Itg9V3rUrREEEiWt2irow/Kivd3XfCF7gozBHh0xLpOUbe8BbHTC9WlotyZy
3YyfLhAg9siqE21rrf66T8UJyPRD+bfRlx2ZQhUr7cEkqG7kdBaJcCZzUPHL
sA2Mlf8KVkG/E+tREP9qBcrfT92wz/qvvnO0njyxBBLD/T9p6DEub71dvkQQ
Ae/MTnQv2WH7BiEiJD0r095Gay3PU7y8TYTDYQv0vNl4Xq9UlKUPEMHtE2u9
CvrqI7lzzROW8GtBwcoebXZemO2HqTXoMzvyp6PHo3V0BqNtoVcyb6QTPSm4
r0jJxgFkjMeDt9HlrD6b+TFOUBLFcIM3h0SYW85wvEHlCrz1Un9U0B+oPMJ/
sHlA1Kp5pj16MfpDeiCTD9Cwpmqno3/qJIhYMQeCjUwffRfa/MiJ3246IbBg
trd+G61HoXQoKSYcHr4Vs+LNxf75czFJiSkWvn55zq+Kbm7p2vqO90/iV8yI
PfqMcoLWocIUyOZsCU5HU9RRnJ/IzQR2+R3pLnTv32PKoqL5EGgp9GcbPU29
2+u0eDGQJelm8uZhHniXLx+VVQGvWoO1VdFGdCeS9v0gwfhmDb0DOr1sj8jx
E59BmednXTqa1UOCKTWsBWqUeKy60LvAsZRXrBP6Cj4/3kY7fdmruae1F5aY
niuezsf9xmuc+fihYaC02S+ujN5I9hM4ZDwGLN9yTtnm//d7BOmnn9lMgtA1
ZYYUtJDWUU0rxxm4kbS+3Yqul1RfD5KZg4fU4XN/0M7keWSBsQtg+ky058QH
vF71jFfNlZbA8+vgJ3l0sot7ZY7UMsQJ2WcR0TK7kio8DJehIIQjMgFN85fx
PE/lEjT+Irk2oRU6gpYHVRbh2/0nJj/RDtsDbUrXMS+UUz9kL8B9MYXa0eb9
d6DheH/zFppIK373UsEUcLjIiZihuxv2Zpb6jsPF6SW2WLSwdNOeew3fQO5W
EE0DurTq2lxQcx/oZYr8Wvnv+WZTid6mnWBJ1zPGUkgipFVwZQi0fAV/U8uv
UmhhJfpnjq/qIamb5aMRei4tmSu7qBpKL1ckRaB/NSirtTWUQGu0diAJbT6x
86T0ST5MbpPbLqBvrIRaXXDIgE3dJIMjRSTCXgOD7PnaJDhYd0OFgBZ/OWLI
3fYWeE7PSjxDB51n4bSqiQBxHx++UPTRNb93IvEhoLx09kglWlN358t6YQAY
KrWRfy/67/dPCIo/ubzBvsB08VAxiRBqGVnO988NQpkY+6+gP7YEjRtOOMN7
6+LaJ+joTXWieJAjVA/fzw1Av4hvzG/ItIMewlb0RzRTuZ9ZCqcNLLyL85hA
75Ro71JUsgIK6mtm+0tIhK0aO9tWFktgfjahdQltzNvALGtIhLNf3WR10W0W
79T8MS9cFzp90QdNc+pSg4suEe6FfOEsRJMUQ+1eUluC0a8X+0fQAQxz4Vnc
VuB6n+7Pno+YfzXqsxjrrSGqPG9SGD1nTGyr3LHF2K3a9hAd0jpiY7nkAPXO
v8rc0aeMMuPWh5xgaCoiNRd9aV2Mu+G2K6zJXAkZQCsM+N3UNvCAPZnD9pSl
JMJZmtkSLm0f7I+OzwTQ5nROUe2XA0HElEvtHvra+ytNuZYhINNde80ZLRra
fFUtORy0LhuczURb03fQee6OhdfRe4/2oMMyR8JjNxPAezuDkqwM9zXGswQn
8xSI11VY4UUHKJhPsUImFNWuDKqg3z1QXNMfzIPmUyENdmgZ6eerEulFMO59
4UMqWqojEwTbymFjsTeuHR3npl76QokEB5Ssvf+itRMeZFBLNAB3wXGLk+Uk
Qnb0WLrHg68gylSlewe9HbeSf8+wA6hqtG0s0CrXnr6i9uiBLiOyN7HoZqXz
5FmEQUhgSciuRd+4aBpDTRgFo/prn+fRpy/xu8rtn4ArpuNj9BVYf9aVSvMz
U7CHzeWvKFri7VfLXanfobvxBKMuOmK46tIQ6zwkmtcKeKIbVAv5DnMtgjHn
E5kc9PNjgRuaQUsg/nW3Xg+aJazntiDOexqrFJt/6M3IiINdj5ahl/vmG+5K
fD/NFz2fVi1BUttM9m009Yd9g0Nmi2Bq6/nZFM13qT9+KXQe4DTveCR6fZ9A
Q4n4LNB2Nf6tRptGa20UeE9Dv8Mzxu9oAbnvTSWJE5ByZp8gXRWJ4BvUlXY5
YxRe92bIXER7GBz9Ghw6CNdc5PQ00cH1N8rnr/fAAcFFG1e0rB5FyEZwOwwN
+L3JQKsLiuhcl2iCdHeBnA70yqEUR+nuWrAQbv38B22lUz5mGlUFkt+Mxzmq
SYRw3oWX6dPFcND74NZNdL5VBTXd8XwYvpDHaIxeZNqik4jOgPdjSoJh6Ng/
IzR14slA9FuTqUAfZ98/ruMZD1KiIXqT6H1CxUpxR6OAfkrEdt8nnL/aPSVF
86EwEtj1Rhh9LiGOkYk2CDLFzXPu//f4mcguF0lfsP7O2OiInpTwYrmK+flm
aNF4Kvp+pONBVjtXOExQ32pBH+F9rPRhwQnG5n8z/kKbzhnbMaw4QHZ4hCAr
CfPf4DG29Q1bsJEUvSWFvmrP57GPZA0yy/16z9FvwiSCfU9ZAWO0tW0w2lT9
UMLVg5YwfuNY2Ee0Ru3ABZrnRMhdK8sZRV/2uu0se5YIdnEPG6lrcF49lo2v
VSKCrOy/cQG0ZdgxqkN9RGD+Fbt1F22yKbzbsNYSphIkjtihT77r5//Mbg35
8iOCSWg5G2eC+YYNOPxxuNWErmpoF+jRswe5ZI5Ha+hzZJm6OhWOwKL0yfZo
LfYPGQaNpHxnmNnSDSOgTXQEAyN43aAgjSLXAJ2gKnjv6HVPcFZ91+hf+1+9
/mxwO+kLd8ikJgrRfMsnghpdA+F45uTWENrhtFt1W2QIzKq7HaGsw/PO010S
Yh8ORbt4hM6gj0nRmpq8iAGXnPpbyuib0/VaD9USQPGBwSMrtAaT+aKAQjKw
Uu+xi0dvnpcIFrn3Huby08Ia0LVd4h0RWrlQonUrdwn9IfP4m6vPC8CNZq6R
sR77FdfR5o8eH6GraUyIgH6lsqMRfbMauPz6w5+hR7rNn5tU1IKJQvt2KJp0
3FKN++4XqKRrfFKFbg+PyE2LbQPa9urmWbTZUzCdb+gCjeASkcMNJILknXXe
I5n9kKaSGyWB9t5O4K67NAK/DqeRP0UrJMuaXIsbB6met4Yh6P4J7ab8oikI
Dg9vrUB/LNgbcDb/O4zeC7j4HR1QnVM1rD4PAiwesfSfsd6uZabcNl0E20F7
yqtoGbL01OreJfgSY/HcAL2+lLVx2XgZmLWMOoLQh4cq6y6fWwZ9dn3RcnTz
QN1i5sklKBjVjJ9GnzHem9ipswAUiXepDzVi/twjXxJBNgeKj+SNrqADQkZ6
u/hmII5buvsJumhG2WJ03yQsTImLB6JDVl/zq3aNgljq+XelaAp1O7fGp4Pg
achPM4WOo5OJfZ/bDT283K/ovmD9OLbay5e2Aff8sT5R9L+gyXM8NxvBNJMB
HqONW7zHR7pIUP1yX4o/uvwDZ3jOQBn2m137P6InpSIb770pgIcrm2YTaLfa
nydzgrLhfd7awP4m3K8i/SR95lJgw3Tu2mV0SG1H6E+DBLhxfjxND31W/Iz0
reEoCP3ZT+eHvt91ndTK8gbGi9otitHmG50xx2cCQciycXgMfWDPp6v/4n3A
XvSTFG0ziWAxEvog4oAHNG+WZFxEs15Y63FIdQGW8lx6XXSiMI9SOKsTGNql
Wfmgv0hqVnaZ2UORRPxoIfr33FWDzgwboCSLuDmK/vfYRVAgC/PDp4Bsmq94
f1aP/AxVtoR4Zw/GC+jMTOs7h12IsCTpYKuN/sQokicpSATx3cQJL/T4go64
6R0ieNcbyRagpYg0xNxxIvR56Od9Qx94YW1BXLIEnltazHtbsB7+eB+dsreG
1zRqDiLo1Eqpw56ptkBqkp/WRKuLCNt+cXWAg37S8p5owx7aJJq3TqClcLUg
H81uZR39gtIVMukuHBtGr/DLNmoc8YDNNn5n6lb8+1+wlHpS+oBMMPfsObSe
cNoqG3UghKkcV3yIPpTxVC5EMgQmDx8udv/PXXo75UbhINyzjy0P/YxNsHms
LQYcw3e5DaI9FnZGWCYToOXe3/ndbSTCqK7ZOTmDFDjO8kNZCM2SaMu7j5AJ
zwbnPmqgfXYO6Zh9z4OSmHEON/T9fP20fV+KgFprwCMHHRU6+TX8QAXQGrYd
70Wfp6Qm8YmRgN60Pm8bTdilpavSWQ9MtuU3eNpxvyxetn5o1QzH3fMH5dH6
05W5/1LagSswzcQcLU4uycX8oRtORcXtjkWrvaAZ/K49APxJoVG1aL3hJ/7M
0SMgnO0tuIAuppc/dxHr/3KJYy1DB87fGOPEK85TcJVkcf8KeszEs+WG4ne4
3vxiSQ/9jrzIgXtgDmR69Fy80a/Jj41f/bEA8qP3mPPRXyYYrg9YLIHynEJW
P7rol4q4stwy3FuXuk7eifuW6AVLS8wTmttivafRC/0Pw9Obl0Bvz7kXimiG
fr8/Ra6LYEh/itwS7clOfqE2aR5eHmcNe4s+3PTjZfbNWTDlYTjTgHY9e/Px
P79psBTaW72Efsav0NkeMwF2YjuqR7pwPzo4WUoXMwrOUj9nr6IdvIe+q+lj
P1CYt3+CLiaILFrv7QH/e2MMfmh6koLNHtV2CNHrTStAf3lVnX6h+gtEvPh6
dQh9bpCRQUe7FuIsajp2dWNeZoxsO9BYCe8cPxqcQdPu46OvEimGNO+cLWX0
41dz1KoeeZAdmhxkjc6mDqNzTXsPH+KieRLRbWHnqMiskqAkLaisEd1HM/6K
rPctVOZ7KK6iuwYbTVrZIqGm3G6KuYdE4H1a2yB6IhQ+15tZE9DPLy82+T8P
hJa2p3SGaAvffJueaz7QOaCdFIA+Ea9ZT0fjAX2Td0WL0akDu1Ke9bjAt6Xb
Ld/Ql01ene/Rd4LJjWuPqHpJhG8cvqLPWBxgluLyxll0EIX7r0+KtrBEK+B3
F01Rm9nHcs0a1o9wc9mhbeNU1cMbLeEPB0txEjrFprAvvYMI23wH5ZrRrS0R
DCVyRKC8QDX2A53tHbHLT4AIe2HL/FgfiVBWUSzy+DURDtxao5FE36lT7XrJ
bgmHVb6/fYYOkg/k/XjBCo5qfjsfjHYa7hq3w/2FzaCr8SNa5DsnX32PLXC/
+qI1hnZW/17h4u0AvDbVP/b0kwiVz12MDjk4gYBbkacQekeCfO5etgucD8hk
vYdmWCw8bGrsDmKRifkO6LQ3cZc1Z7wA3kXcTEW/uOPB8eCGP0hl+Q+1oOnS
Yp/7TQWBbLHrq1/oEW3PRp1Hb+DOJ2sqtgES4cFW8oVd7ZGg2mQSLY2+SU19
uODVW9Do1hd6iU7XHHFJl38H2iMP60LRrL2P6O8PpwINZ21wGfrV61BmRZ8s
KNA7ozOOrlCwf1esmQ/aScFn9w6SCI6zPL5MM0VAM/1nUxAdkfxHfC2qHApO
6X5WQz/OF44xH/4E2k8/v7FD/ygf23x+sx5oMgQfJaHXWPKfjOU0QcFCmFAT
mvzr1NCnY+2gJbD9bxWdXC+dxrfZBXtNnjQxD5EIE1wT/tde90NBXnMEoGuO
rI5S2X4DrR8i+vro91wbNiu/x2DPhWgRP3TY/UtHVZsn4YMFBXkB+mruRBpt
2AxolTxtGUCrFY/yn+Wbgz2bbdHkwySCtNQ/2reaC5B/5fLT02itutNG+/ct
gabd24t30F4cpEZdpmXYU0VFaYFW/NVt0WO2DPlkRu0x6EQ3jvZi1mV4eL07
rgYd3vnBsOz4ElC7ir+YQ7+kTJD854jPX/dO9NA33Ifan00q6f73ecg+6sto
xa6R6DMDM0B1y7RLC/1q6QR3Me0U5Hn3J7ihKYv9x6JYx+FhM8E4E93HmLKu
++QbUB1IE+9E05O1bG1/64O8O3Q0m+j3IzWi62Od8DDIopdjBOebb11Ew6lW
oOocTrqJdvY43edP9RnyDkubGqF/VrGbrqmQ4KFaJrxB+z6u/RjYUgZUEQz7
y9HuXzkF3x8uhLx+64Fx9IVVX903NLnw8Nh46t5REoEjISCQKyINqDRvmQuh
5yZ2n4mhfQd5cbnX1dGpL7XuUI7HwsNRpoP2aO/Hw0K/6sOBisthOAntOdfn
Y3EpBHIfTb9vQh9avWopGxoAD5LlLdf+e1zaxy74iTdQzRRIHx3DfHd70y73
tTvknj7OQEAzpxa/vGHqAhrPXEb10QuR1O9+cDvB7sy5LD+0R0pC9916e8hd
VLIpQKt5v7+fw2oLGoIfZQbRX8NmL/tzWwPlK44jFOPYv+LWIsfKLCEn32Pi
NLpVupJz+SsRNNaXcu+gi7laFQn/9ZOLavYWaPkpy58S2E+yiRW3Y9Hfiq6c
um9ChPsfuY/Wot9PiW4GMlgC5V+f6Tl0qIP13aesVpAt/uPDoQnM3yx3itki
rOGevYbTZfR5nct/IcQWdlV/UtBGB6tssb7lxjxFznvcHZ1wUy6y77wT3JMM
nM1El42Rx32UcoFdbr+LOtG33S9nWQ26QXa9lusmumk8REKJxQvu7alX4pzE
faG9QPQ+vx/skj3LLoN+akkKT+EOAoGEeVFTtHPoYlR7RihobKSrxqA1XX7c
lLoYCW53DI3r0Vmen2S3Dr2F3BQe75X/no9JKOeg8jsY+jeZxDKF9589P4Z4
KQ2o776rkkKzHX3EzeKbDcKZugNG6Jzi7ts/H3wArV0cPyPQF4Jzve7EloC3
xje6GrTuqo78XbUqKMyL4VtEfxvQDWZaroHRPQ+kmaZJhI0cqazjtxqBVueo
zjV0y9PZ9Y2pVrhc3Gv9fPq/7x9Wk23+6IRHB8LevEHXiHR/Ys/qA/8nqrlV
6GPHi9+uHvwGpeX0TbPoPf8Ci4b+jsE0Q/sUwwzOc2dPF+oDU3DoeQCZxMx/
/fx0/im67yBOkj9miPYQy84/8nkODI/SXgxG/7m9WrtMsQghJl8Uy9H3VsLu
RYcsQWWD5/NpNMf9nkYHzWWYY7vpfvA7zgOtU4/P3V0GRovdCWLoL1UzOwv2
S0D4WlP2GB2TnM+TPb8AL7ide/zRj/Vm842K5iDchrBagq517t4mUHwHUsf2
vgm09lLB3bWNSVjireDZP4v1nsRvc7lxDI462Vy7hH5PzSoVcmMYpPpEH+qi
M91PPVzV7wUTwQ0LH3Tq7qzw9ksdEONeFFSI7vpavPG8qgkahl9njqC16X8L
PW2qhbXzIg175/B+nyvQIx+tBDbf1TERtJFuWHH7QBHcmsjZ0kR/ePD6b/fv
XHgtZsTkiaaRePVk6XE6xAfxC+ejeyoP+HOLvYOm73NyQ2jVgHZDQd9Y+AXp
BlTzuI849bx1YQoHrnADZyH0pUvkek/1gkF+6WSsBvorB7td0IAfWEpPFrui
k5RXWagqPCEpJrEjG50nmWImsuQKrT90FvvQ/OeYqhoYnWFTln3PrgWcl0Ne
QVzzDsCTOMx1Fs1zleyxRY0tKP+JvqqOfnc6VX3GwhrsFDXuOaFZhb5v2Q5Y
Qloqs1kG2tyMMWW0jQhd2z1+3Wj5LMWk/TeJsHP3TdoOWjRwQ/iiMBH4slRq
eBdJhO5LLTFm/kRQo6T/poJWrvH+KqhlCU4P2jbs0FINWcD63goy8/0Z0tD5
n5taS5xsoG+vvEAHejc72aEHW3awS3ffrS30nj1eqhaxjiBQ0viIZ4lEyP3O
1ihY6AwadJ72imix6d97Ah65gZv+jUhrtJLmu8f9bZ6QW0FZkIRu5Yo+bCHs
B0OHa1pa0MtFjtecDIKgqsCB6Rd6O4Kp1rI8FBJVxXVYl3Gf2q1cs/IjAlzX
N9Kk0BWDlqNTcnFgEFq4+hx9kLlgocsnEWTPm4qFoIvpbhzYO5wC/F0CLqVo
fqU6z9X7mUD3er5pDO3GcIvze1oerDGkHd67QiKQGJ+b5dAXQfeHx5pC6PUe
lvU9SWVQosKZoo6ObRhTHr3zCaJ+DC/Zo39kkjI7U+vALiTqUgq6ce/lzcmd
L6Ajou74FV19w+L+44o2uN7J0LiO9hSgTLGN6IKTZm2Hjq/i9eee/R7M0A97
GPw0JNF1eQsUmZzfYD7/1rtn6KmzhuvVbWPQoky1EIR+cURGODJrEnLXSOc/
olvqLIuvO81ASLCD3Sj61K6xRTX2ObAQFq+nXsN5xKgtRv9gAe51bBwQRB9t
ZmNO3L8EV0wL1dXQOtccOVdYloGN3jTeDq3wcfRdF+4T5PkCs0noQiXP7BbG
ZZhUmj/XjCZcEu2/sncJ6ldTrX+gCybCvlzQXoD0oMc1LD+w33VpuHQKzoHv
OU7a6+gMys6DZJEzYNQ+rPoU3ZpGNuRZMQnnD6lPF6Nr1+6avUoeBqY8BsER
9DOT4r1vWftgU7GNSLVOIgjq67Lb83bC0Ipv9Vl0cuCFo0f6v0JV4K29d9F0
ko+tdk/WQ6IQlbItupjfTLVL5xO4tpGi3qFHtkjxZyRLwcDEYeILOj+8YvpT
/weQPSjOv4a+wEj37CVPNpzN3Xh99CfO47m90aFHUuGgYmEFAZ13Nr+aZywB
1pZfURmiiUNeZM0HY6A7QOBOANo/0la24mEYlAjOhxf9/O/zNFKPwvFgiGpN
HR1G16X1CIX3+oGd8WPe3b9IhNnm0k+DVF6gQ8dpyo8e/blLhVfbDSRzhktV
0IXUrZ5aYc7Acydqlw2abcbE/CDREfYsq8kloh8SH702KrSDeX+GN43oPb4b
6cy3baBFoG14BX1fyXvvTQ8ryG3x5WH+TSJce5XI90XeEkKMbhkD2vZkxry8
DxEsDlCV6KN3EdYfW4kQ4V42icwfDcGiK6lAhCsKDrcK0VW8Szu4TADb0pXg
IbQ/Wz6rnrMlkPlvDOzawH5leaRgs8YKJs4WnjiD3gxRWDnraAP1X1+9UEY3
N545deKLHaS9FCi0QutscIqyaTmCz/75f/FoznNjWzPizrBE2g5pQuu/btBi
63AFZUt6vl9oyrLorE5OTyg6y1PN8Qfvf2x2h4mOL7BMiKrdRj+a0r38dTYQ
7CPkF8zRu+P4yjKeh8KYvK5zPNrTzMvs9VoESO0yZ25CTza0iyd+jYO0Es/s
n2gqr4HXd4XfAa1RjBTHJokgHH9LI5ItDYxP5A7IoluClTfnHLOho6/GxBzd
L6fLcFvvA1z076WKR+uEK14bLSqBKMn5mC9omsSzNuf9quDfxrbwT/RbovbF
HvZa0Mmmb2T/i/1j8FH46/BGqH3Eoy2L3nKm8Ko42wanj4r9fI1eDxlcP3Oz
C3xa5H3eoh+1zI8UHe+HJRddzi/oeOuyE5Zx30BZ1Lx4HX04iaB0W3EcipY8
5dm38P213RViejEFLEkxE7fQtT/WhuaNv4P9/Vyr12iBseazT7jmYexALd1b
9I/ky1lZcosgVdub3IhWvOFPLl2zBGlW81fW0ccF1zv0ny8DreBOO9s/EkGm
9F/LefFlMJmkN7yF/rm1u7pAfAm6Inm2zf799/tqLqYZmC8u3RELjfu/fZcG
T85BFKUCXyM6d+kDr5DyDGx/1K3+geZssR+XFp4EPWNzNbZtzHP/sl5c+D0K
ddxeCzLouBmah1NJg3B6IMbZDD0fRnPywUg3+AbkMseh//RsMWUMtcGKVG32
Z3RsPrPhHYtGUNnslfqBjk4Tu031gwRFOfMDrDskAu/otWNm22XA8mTHRAY9
odg2k5lWAPYsDNRmaJXaAYacd9kw1soTG4uWHuMUU15JASk3MZHP6E7hy2o/
9BMgTUyhcQ3dwHio7GFXFNCu6GqzktUQBJJpn8wceAMmyeY/b6LtqUMePBsI
hC4NLx9T9GgpRcZzTx+4dDCWMxZtGiGrR77hDlF1ucUNaO2P9BSvQlxg27pW
fg19OWWU6RKtE+gJ9U0cJ68h/DnP3+CiZg/1U/NWN9EnOXnYpkNsgC96h84U
7estciQ2ygr8FBlSYtDFY4eDzKUtYWX3KfEG9PWbfNfSbYigWibWsYrOj7ga
Qo15ocREwfA4RQ1hMjnMm/8uEY7x6G3fQNOIvk/3XSGC/aB56Cu0xof2eBYq
KxgP9OKLQUtwNb6OSLSGGzdiq+vRjK9+7zUesIX0v7lqq+jv2xXd/E0OQJtX
u3BsVw2B4fLu2fEWJzDR73O+gSbdXQmZlXIFn8dzN4zQst8+OC4KeUCK3hZN
GJqMl+XRrxFv+KRzoLUCbSVW48PlHgBDWhwhU2hmr3C/sA/B8PuhsPp+yhpC
qPnavucvw4D+gdSxC+hz6TsW/LzRcPa+2shDdE+H0d+G8HiQUTd854oubYhV
yzJKgkd3rQ0y0dKbNjR/VdLBXsX3TBc6q6186lxQDkQqxS3/RWuKNKYEVH+A
gju5H07sriHoHEvR7/hcAq3yJOJt9OClZToBriqYu911xQyd+KbF4KBPDVDK
Tu9EoW1lrhakWH0GdpmNGhL6RcD2HU6XFhC7QeM5h14debR5a6IDVKWOy9FT
1RDe5iuwu/D2gvF1gYNi6Ncpyhb7DwyBN4HQpYt+v3T+zYeyUUiWUI7wQh+R
FWN6FjUB1eKPH+ahg7nFrFUcpmFQzIKjH+1el9txRmIWfl32nCSjriGcbZP0
nU6dh0OXotJOoyercnQtgxaB/0LmC0W0x+3e/Oz+JbgpUilkiV5jblIgvlgG
vXNt62/ROZpeHOqSy2AnOF7SgGZdZkyaerQEEWfXbZfRfH4nR9yGF+DDGapr
THtqCGU+BFu9hjlo4WXeDXv+e72A3H3wHWZP8TXqo/uc+Q5ZGkwBJY+4nz/6
fxXcdzzVbxQH8EJkryQy2wmpRAnnGkmShBCFShKSSNfee++VlVXZZCX7WtlK
qOy9SSFSfuf35/v1vO7rdb/f53nOOZ/7x11Ymh3OfzQGvEdUbpag2R+/ZZ/p
GgKJQwZsQ+gUaUJ7Id9XuMVn+XUPNT4/VbDKiX+fwYLHI0EIzWld/4FwtBP8
uKLu3UJrXQ4r3PzeBOmcb446ooW+qIR/ZqmDmgPls2no8K3EOl+JD/Btf1tO
G1r+++7jJ1yLYG3f0LNfaNNnLPuPUOQBE+vKeS4aPO8N5XJvM17DKWayLTl0
iE6HALNUCigw7qsyRR9qrFVKcY+He/TH3MLRJ+DVc+OUKHCgvaDwAV3uya1Z
KR8G0dRKNONo6/rmfytkQVBIdaeDhpZEaFQ/7GmDebl9j3nY2f+tm8TKYugJ
M+Qumjrof/KtKZ5hbkBOFsbphp6krnHTNXcBnl1pQ2/RrNkBr6OSHOHiv+KU
brT/VAAtUdQeNLabjDbR9D8zr/hZ2sLTra8C/HQkAtXXTTdWKRvw+z2/pIiO
qPZTdHMhQvr630ILdObF/VL2IkSo+cVIjEHLrMkToxSI8H2V/1INWtGEs+91
LRHWV87tTKNZXT4y26TbANPyZRIjPYnw+OWRntEtWzi1qOUtji5mv31Ptcse
Fg59d9dDhyQZflkUdIJsbT0XT/QfBjjbEesCZkGjDtloEY+GqOMebiBYb2j7
GV1pe1FQYNEDFjanrbfQ/yI2anN+ekP2aVNLfgYS4fRI9cWOan8we7hkroj2
cPOmIMmGgODLZ6ZP0fk+68d3yYfDQtevR1Foa5pnTJMM0ZBNaWNYiba8//fL
0reXYCb5x2ACrWdp/spuIxkELZ3u0jJivXca7X3xKQ0WXu/WOYtmI9Bl7C59
C9mDHpq30boTUYmB83lgxrpX3QWtFuQZcnv8HQhe9b/xGl1ruVps0F8GC04M
yh3oit/FJzlZqiG7KFRxDb2VpFM2bUICs7l9l7mYSIRT35VIrWLNIMgXIyOH
VmkKSV1m6oCFWwelTdA3esUo0v0/QbZ/okQo+tgvn0v12b1gVssvXoZe+eIW
GvboOwhtpJ0bRsd+uG0moj4CS4InRCiZSYTjhaz7BHnHIfd+lqAQumA9WdV7
YxLMY4RPaqBpGsPHIt7NgHBHwVF7dLyDXsfWsXlYIj9/KAVdkbjHo+34IuRe
LOP5iJ7ITFASilgC86eXDq6gAxZj9BduLYNwehU7OwvWoyOXbd0fLMPSN5l9
0mg7cJk5WL0EuUwNTA/Rdy2me4KfL4K5giJ9ANpUolT+WfQ8CDu0Ur/7f525
lzpBZhaWClQov6FFdjnXQtgU5E53k+1mxX7LYH24N3scTqv3/1FB39wT4L2a
9x1WfHR/W6NPd+veuKPfC/lVQ7/i0QRvzjclud1g8eveDxLa4Wm/rcWzVhAR
mFycQyvY2rWrkjXAir7xHPM+EmFO+F5f61Q15EfOT11A9zjXj3seLQOLVvNx
ffTk5VhDkkohiOxeHfZCd4+Oji7OZ8GKmPVADlq9SsjaziEd8s1+9/egh2rP
HfUuTwaLFPsvf9CV78mueBjHgUj/v+5DbCTCLWeVjtmTkbBC79ZxFe3Gp6Sv
KBUK+XJ7Wi3QDQxU95NCA8DC1qcpGq0qfNz8ObsPnMmjra9CX/AKfNCU6wGr
E0E1k+i1ZPZHN/a5QSEnSyXdfhKhz+adnz27C1iqRr4/h65g1be9IeAIZ70O
lOigpRsgfGHaDlY/vCx0RQsHp8ndk7OFwh88eW/Q1UTXndVDNmB5PCWrE+1q
LbTBbk2Es3ePvllHq96759qI84bVm50ffOwkwtWuwuhjN4lQ9PPrpWtoxhuf
3MmmiLAmXeRpjf5sR809sWoDYn5BnUnoV7Mnx2bd7YD4xZijBc3w1ispLNsB
yvjkHvxCx8neyz/i6wybptw5PAdIhNvaC9xGya4gUbqxroj+opHJpELhAfZk
nwhW6GPHtR36WL2h4nq2XwI66kSB1uV/fvA3xqunCa2iv4fm6O4QkJ4w4FlF
39QjGT+4GA7Opy8Zc3GQCMoxc/d19aKhxo6tUAF9QohNy7c0HnY1Lv+xQCve
Nsj82/UKZJhbLr9EZz2toKe+lgFud9KCG9BPI8Xvz+zPhrrXTl+X0TVg5Lrc
UgDkP7UPc3Li/o/9vS6fXALy0ueeyKNN/JI1lHoqwNOXvtQczex5VXzqbh00
9kzvikWX7+JkptRpAiq+OiUSuuRTR+a1wHZQNI2PWER7xeXtRAZ/At+SF0Ps
B/G+ZXUsCbL0Qcvumydk0Sseu4ynrwwA7fVTlmboD4+59b/uHQXlmD0VUWgH
Bd4AQ44JCBwf3lOLHjg3EfT1xDTmz/Ib8+hzMoblbbvmgNEuIpaNi0Qo0hi+
pPh4AVQbzMcBHfX599DomSUIZboqZIK2f55X/OrCMnzSPUyMQC+b5wf+wPmC
9fXfmiq0dp7HYl/HEmis9tHMok8xLJ4RNVuESKlCDVZu7O9xK7KNd+eh1ycg
UQodo18y+bd+Bth7jGYeoXff4NZ0b5kEbV6Zs2Fop2I1ttj4MYg1OehQgS5k
yEq/2j8E34rXGqbQ36zPJqp19sPB3V2MzDx439J/XWh8/BnuKGfevoQuNKq2
kshph4Roj9SH6DDbIKcvio0wNKa3GIweaB0+5xhQAzzCF8XL0TlOeg+dbMpA
35bVdQL9iiXgXDpvISTXL7Yw8JIIrZ/OGZ3bmwUjjM37LqIDdJcbDe+nAb9u
it4DdIqFArnt6SS4n+HwJhB9pkfqRYRMDKT+0FwtRf/O9FmJFQ+HCckzkmNo
3iRCQSF9MBz1ofWi48P3M3oiP/ulLxh9nuwUQ7vF2WyYhXjCa54ajnvoxcGf
8ecC3GDmcdwDf7TU+4tKlddc4GTx85xi9Ntz9fqm4Agmu25sDKMZ8ji2Otrt
IOvaSRkafnx+B8aKs/tsYSGK3F8U/UhJTKJtlQhCY4M9emj5mA/nOzSIYC5U
xuOLFiLIpNDh/TeqDYnKR/8lHWPdsCCC3q3HDP3oobsjWYYHbEBzVsZrB10k
I658RsAWbjhy/jt2iESg7eZTUSmwA0Xmn9YqaKfLnUNGVQ5ASG9dtEYHvCpi
WDR2hgsX0x4moDkqk76qGruCSLvDYD1a04dbozfYHU7cu3VrAf1EI+tfo4IX
8K8JtbMeJhHOxsO4eoEvcPpSXr6EzubSH8j4Fwgs3MMV99Hdnltyu0pCgaag
VNQPHdH5WuP6kUgguxySXYBOjqLYUXeMha1+4yNf0SZma+b5ZEnw00wmftcR
EoHpdQwFC0UqLOzi3HcCfXEq1mja/jVMRKz630Ar/FazfXoqBwZOtJIT0X8S
GQbjzhZCT0WqfSL6wCGlU9ONJdCm6vCzAf0yUN7SOqgCGiY0TBfRex6FynNO
10KVjdD4vqMkQssHK4EB40YooaPUlUQv/GIWG19thdzkoU8P0Ot0r/6mq3dD
hmipkj9a0n+6TlDlCyQ2B9cVouX449Yvzn6F6DvGEt/Qh8j7SKb7hiFkhVC4
+xjmUefA1L23xsDHg0PgJLqS8fNgudgkuBxYfaWKntvzcI6TagZssls4bNDL
ZryFoTFzYEFIDU1Cx7Dc/2NatQDGPfbUTWgvH/rOE+pLYGCs4bqE1qY/Xzwg
uQy3twU32Y5j/7/GvmvBfBnUQvY8k0IT1We3b84ugdKRoRlD9NCJrf1pJYsg
W1ZiEIBWsHvvsjg7DxLKwf3v0Hnjy3V7E2bh7Mgj1e/oTAWL3z7LUyDwnNBM
doJEAB1lj9I9E3BoLwdBAE2/vcwzSzkKB+N/lN5EB03HsrGcH4B9Ii2nbdFi
kU565U29QFef8joZfUOdkXlzqxsotO15m9GxbpFrdf2tsD2vHr2MNggwCXKW
bYBfzoKM7CfxPrkwkXb218AC6x5vaTST3BSJT6EMJl4P/nuI1ryyYnJaqxAG
L5W8CERXnSui7R/Jgt7OoKUidCpHT9rM/XToePDIaABNL6dT3xKXDI0bMEQu
QCJYxD/3tTkWB1X+BzRPoYMX1Yj+cxFQwvujXQ39TeymyEnyUMh79/GyHXo8
rjt29mQAvLmSUvkKfWQhpiW2whuSv9ud/4jujC3puGbgATFP1XNW0Cp94T73
u10hhFzw6IFTeJ7GXQWfVDmDTzRFAqDb21/J2bc7gOupwX2P0B/Nit6FJtjB
Vg/dt1D0MU9ayxvLNvDcSTKpAh2mF3KB9RsRFo+bGU6jrzdRfzC/ivWi++VJ
FkESQXxGMrDyDBGG7VqXJNEuOV47dUFE0D7y590j9FHfVvq/922gu13ANgzd
5iko9LLUFpSIOtKVaO7UNHO6BHsg8fmRz6DbWWcfncK8IdnyvplFCOeb0lkR
xnoXKLaaDZRCKxTSc/quuIEwN4e6MdpO+h0VRQXWz0bFA+FoXRCi3r7pC3wW
NoOVaNEp2t2PFwIhjuNNygxaaeD6ONNCKLCS+h6xCpMIrxueuz+pjIQAMyoh
afTQja1+Qk4cUO4XXzVGG4797XrpmwzO1Ual4Wh2uR8N+flp8Ns4yqEKLaZJ
G6HNlgnPWBplZtGd8zqGHn75MPdhjXLfaRLB/NTE6l2WYnjw8GibNJq/kuVH
+mw5DDDcCn38/3qIc6zu2Vq4VeahGYGWHyiYOfCjATruFR2sRgdW98VujLbC
FdqJkVn07jbrJxox3VBTxJqxTwTnO85Xf65sf4GLenKmgFb5c/r1GOd3zKtW
IiZot2u9XAeejEC6zqfyavT7g6nv7BKmgIeCzGUOfYnnZmqO/yzE5Jy5zHYG
8yNZV+cV5gVg1rpHQ0BbNLiW3t5aBL9doZ0maBP38HtC/MtAnlkTEYmmFSm3
22u5DA7qK7dr0CNyxUL9c0uwts3LO49WFLgX+CQG80LGjQm2syRCmbRVy/Xw
eZi+4fyWgJ5sui2s8HcGDDZzzU3RXtSRvp92JuFrytC5KPSEbjGndcsYqCkz
bNagn7aSfzHjHYbWNamqeXRLq/ybxZ1+kE964r7/HPaPD4Kajz0/Q5VigqIM
mly7qKukrh3EV9vozdBFbZs6HxQaIf/l9qcotIUa05WHDjUgcFkwphb9mxjT
JnCtDFKXdO8uoHe8mF13LRcAV4z/IXZREuHZzqF066xMiJT5MC2Dzo170Utk
TAOG+blsM7Sz42HKl8mJ4B3BaRmN1lf8qCf1MRp2SSuJ16FHlQ7yRHwOA9tp
2+0F9Ij4tlShcRCshrytZT+P90dKYEVuny+YSnz1kkWHWikw1PJ7wsT4XuUn
6C4W4JQ76wZ3Ay8wx6C9imPDb5K7QK+YcW8dOu7vbY4PbQ6gOhL9chEtLvS7
uNzaDj76NhkcECMRPJsjBkx7bGDGxFhPFq2nRTvX3k4ESmXqO2bo/NnmQUYF
IhwRyrwdhR7s3z4QfpYIsgzXtGrQJ9IOeQUEE8FgeV5jDq3PFDtkrm8Dzl0B
avvEcT9jwuUnMm0hsUBIVRr90+773Ruu9lAR1nHdGN3tsGb4ddMRvlk9vRaG
vvHj4N2QOBf4rcF0tQLN/6Q3tCfPDfaLFShMoX8dbK9J0fGE8+xq8kwXsP6l
r538WOcDGr9XZSTQcnN/7zBzB4Ll13AwRLNVhAfEa4VCSLmoVBDaoyf+hyfW
19yXXyTK0GFO6u9t3GOhzeHFhTE0U3pKH9mzJJi7yy5Gd5FEONl2f8AxIBX2
Qtk5MTTfn5ddx5zfwHG+22cM0C+XcuWKx3NBYfeWsB96VtWEJBT6DgzH4gSL
0Kf+HOK1HiwDN9IlgSE0pTJvbFdKNSSnDRzfK0Ei8ATkM9Jw1UOVp+PRs2jb
27rnfjt8hAEjnsN30EbOr7zOMnXB1pVqPi90qUtf1ChrD3CcNODJRzMWm8Zk
dfTDBZrdXN/QDvNOpUFnh0Bz/hUHxSUSwae2Wus97Rg8b5NlF0Y7CCerLh+c
hLCc8X3a6I3XXMXynDOQH+TB4obWSRpqXe+cg46nR5my0dS3lExSqRZhQbWR
vhctJnSivyByCWjPPqLdJYn9omkuZOruMgiw7qUWQDeq5anvubUMir/eUGqg
BRfdupWdl8Doy1UKJ/TaXJxNzOICeJTM7X6DjhaKCUkpn4OUaP+dbvTL3KKX
p6hnoNZG8O8ftO1lU5dEskkYud2+dVQK++vF90+ufBmFfxLmv2+gzfZuNGzd
GwQuLsZ1W7RHbMjnN+59IPE372cquoIuRLxT/RNoD6n+aEcXSes0JuF8Raz+
sbSBXm0q+9exUQ9RyWEL/NK4PwHyqc0nq6HI9dzcNfRydN3s+f2l8Ol+z7Q1
mi949nTCsQJYkbOeTEJDGdXf5Jy3wHB0//hH9G9GxqsEy1QQoiwd+YnmzJmx
Tx1LAOVprSFuIBFeSBwNvagTDSbNv79fQWvovvGijAoDn7exX5+hDcuEB78I
BEGGn0TfS3RJfbp/3h8fqDf93tOATtW2ar3M6wnjyg6fltHOU5Nc4pJuQCbM
3cVBwH4VlRvmwuoCfIxV7XJo68xjEo4/HEB6Ra/1Cbp80XJRK9YO7nTvNEej
IdV5pAfz+9k/ib+q0O/oKN4qLxGB6qg03xR6PexQzlEdIgyoDF6jl8G8If7A
MVGQCIU2DkRR9IjboI7iPSL4pBxM1UV7CsWccv2NeaGtvMMNva3z0uvGhg2I
rt/eeouOFvn2NOaRHVDzbR7tRj/1yN7K1XaAoasxN3+jJf2Sfl0ecYIiK3FH
XlnMVzV0VbP0ruCX0PtGAb3TlCIJHO5g0GTd8wQ96/6gbiDLE8R+7NsVibav
Uy5Tm/YB2oNFpyrQAxuPhC9vBMCIvLrWOHoos+rXSZpQKDFfdaORwzxRSf6v
XS4CAmJCc8+g17LnTuZrxcD9OpFv2ug3hl8OKLglwIWFzj0uaHEbmhCdvSlA
v//pmdfob2RPwu+dzYAxYLjbgWa7ryOa7pAFZY9zfNbQMZY18qUcBRAUrlzE
JU8iZHSr3iTXKQbDyvlhObShWw8zc2k5SEz70Zqi96d3P50tqwFGZgHxMHSM
hdu26mw9TEh8vP/+/897Z+W4sLRAuaFx0Aj686tLjZOnuiAkiKqc6jLWw9mm
Nz2zn8GoLGNSGF31kC5U70o/SI5dZtZE+22t8/hJDAIz3aSkI3qTttp0r/oo
TJ33ME5DD0TxuIucmoAK/cMRrehehjEbv93TEOZbV72KLt9cftmcOQvG7+7N
cyiQCDZ2SpG8W/MgPbiLXQZtdmzDMbhpEVipkmWN0R4buj6715ZgRgTMg9EV
gfnkvyyWoUpnKLYErSfaQnwptgwRHo4Ng2jlqhs31JSXwCSX6wfFFdxPzUVT
+9oFIPR/4BJELwzLUOVmzwEbma6iOjqHsjnERmAG5k5tWdmhH4lTnba4Mwk1
t2KTXqFpvPt5fz8agyjnC63NaEnNP2+pZobA7G3f+jJa1GvsIOW1ryD7+cUh
dkW8v5wdV36e7wH2v2wq0mhL0SIui5ROWDhWbPsQXfrufXWgTjPUqWqkB6AP
R4sHFPjWQYzdz653aLuP6c/5GCrAPC1s+xvarIj0RVusGOQ7zpwgu4r9+6HL
Yy6OfOD43aV+Es1tLq5InfgGlvgtnFXRmsc9vJ7tSYX6a4xZRLTW25Xjmo0J
EGed25uIbmoYsnmdHg0WSdfJGtFnDObKKNjCQeHjgtAiuks1uIJLLRgO/vS/
vU8JnV7dEHnCD1a4TnleQke1TW3vSHlBo0JL/n30z91yrKKy7sDlVXMyEE1/
VaftSLcLWDWUpJSi9xauGsrtdoIWipyDY2hu8jDPCC174JNPjaC7hvXlk21s
1jNbeOEeSy+OPrLxzIla0Aba64K97qFvZty6dOIpzg9kXjv+6KevlutbsH7Y
yTjYlKDlFdfIZfSI0OVi+WMELXMifDWc3AaO1xib0CrjfC57gYJw2BacdvTG
z6NLHY+/8m6xgx7pW3cM0M5CtZe0GRxBwOnaFz/0Nhv3zceULuBaKaNSjJYY
N9zVsuEK/dviTcPohu+s12yJHiAsKUyguY798+J1w5NZ3uBhf+S9KPqGSQ4j
d4M/fC/nPKuPli1+Gb/qHgJnt5iyfNEcaxt87ZPh4HOR6kgR+vSHk4zcsjEw
ZPM3fgjNLcBpMj2RAOfLfrJRq2B/VTt2JTYmBQI2ZoPOoZljzXJt1F/DmNgI
lR76jE+Y6tfnOXDhRa+LD/pzkcHQeEEhBBe3bRai+9zchFs6S2HqV53lIFp6
XeVyhEEVSIq+n6e6QSLEZ7AxiOqRIMwqz/AsOsLxa5fuq2aYLUwfvINWPBJg
rnSiEwirLzW90aA1kTPp/xmizoR1FqCNa0IjzkI/LFj4KA6g91td+gApgyCX
71RLqUoiOF1YN1FvGoW45ecSZ9B5I5f1coYnYEXY9J0u+nnv3eBPs9OgYH5P
0Atdcusd6OfMQUKOVno+mkng9DRpdQF+LVzn+Y4+zWwlIBOwBEqC8tF7bpII
5zN/1P3VXYZkUwkmEXS+h2LPLM4PG5kivjroXT+Xi0WdlkBl7hiZJ3qfc/kr
+akFSDvJbZ+Hrlk509L/dg62jFl/fUUHvbc5x7A4DTffUD+hUMPzUl0itPpt
Av4dW9e7jfa+uruqcmUANIwW+tzRm09Gx8bo+iArfUw1Fz0nsspDO9INZJP9
H/v/X68OCtzhacX82ilLrk4icLmtN3sR6iH3QcMHIXQb9cmtuM1K2JP6QVQb
Taww33nLXwJ3xgpy3NCpX/jixI3yoZD/zbEcNJ3D1fejbm9g773EpD70lSdL
ov3+KaCfHHGATAPPf/Xoie/O8VAy7BcqiHZ+w/E7VzEK6HhdabTQTrI9jQZ1
oXBfj+juit6RnNj3fTQAyhKebGeh969V1y1seQPD4APrXnRvFXHjtqYHPOTS
Wdp1C+efat4iuiRXsExTiTyBjuv6os9l7gwugnKSqujnFzz5FYIcIKhIfJyI
VvKw2uZ7YgfxkoJ+SehQBvpCm2kbyKznO9OEXv7RMlc+QYQyZbb+JfTv+3Wi
wRpEaOyhdt6viXlzn7jvESEi9Nz5d1QabTY9znDRhAhjE6ttD9G/31c+D6az
gRWzaatA9FSxkHsXhy38+/WdsxhNufO4sC3eDmgdu2oH0LmFjQK8GQ5wYE+D
MYUWiaBtuev9pevOcCzwPaMguu9YHfVfbVcQZcstUUdHxtB8vePsDrIJKXft
0WxvsytSznuB6tFoilS0SZc3+dVkX9DL8c9qQXvm8l1cWgoEs/Muaqvoql/0
ZPl5oWBX+XyTQxv7XbBr1jRfJPhcfpwsg347Of27zykWotrvXnmMDhMLJtLQ
JUHaLbWlELRcwu+jVQypUDCoEFmGXn2VKOka/BqqHl6SHEFPXqy5QKmcA22L
p8epbpMI4SxdfoLKhfDN+ojfabS/rGmqyWIJzPw9cEYLnfVGd72ksQLWPen7
ndD2PD8WORnrgIKBzDkDfTtJNkUnuRFYotaPdqDNKzmz16XagI9nvm0N7X6j
7AmrZzcIZwxbcevg+3EKr1UN/AKSwj2cl9FTFKLqfOLfQKmkudYMHSK1k19m
MQza0pXGEej8U1SHzviOgVFjAWMF2vqA3zVX80l4rpJRMo6ejXCnWZeeAbfe
uLu0uiQC+8CGuUDbHATrBVOcQ+v0e2ULzS5A/JR7lg563wXNj/0WS5BpbqPm
hq7zmJDiVlqGsnWzzbfoDuLqBafHy9DodC+5G525TLPneNcS9FBqXtlEf8ka
te/xXYSxIKUlvjskAtXdh+xZmfOwsh8iFdEUFzed467Pwr/Ec5IWaH2WxKir
4VNAd/zEeDRa971WCvmrceDM4/KrRnPWh+iMJI7ACXHmM9NodgXRPvbH3+F8
9Z5+hrskQvIfrWtvqHtB9sqWkxjab8GLUlytG1Q7l47qoc1YJXK33reAntZ4
myf6RPOvgmGtejAb7rPKQffzVRJD3leB3aM2zi9oDjKRZI6jpeCzXFO7jaYb
qyFI2hVAFLHY+IgeiXD18fVLq6GZkLbzllEZrcbjfmOXURoUeieWWKG1UxUb
7UuToIYx/O5LtFxU7fVxiljoiPamIKHTssfqyRgi4DuvQ9YcOvJPwfkLOiEQ
NDzqx6yP8w8lc0GHlD/IJl0xuYA+ttBV1c3uDWt6OVf10Tt/8lhLFt3hDQ/r
SS90eaq60n03V9Adstmbg56XFD7Fp+4MDIlD05/RQPUz8bmXA9TelW/aQid1
Bsa4WdjBc+7MDH4DEsFChfqwwAr290FGL0X0yHv9B0cxb3yLt374FP1rgPdW
M+aNwDvf5aPQopZzd/xxXiBwyRypRL+hs2Xdq0+En98zyCfQjsoaSp6rRMh4
STdOcw+fb4ipv33eBm7rWtadQcuU3OS6r2EHdAf7X2mjQ0hDyjsSDlD9TcrV
GT2xaD7mUeQElnGpBhloE/OrF1KWXOCoDjWhHV1z6pOYyaIb9HM85f2Ftnu2
p1fpqSf4f+35x3kf918zTUAzwgekYyWGZNDRyeG7FbwC4Id2cqUxemNfk5xv
ZQikHaBMCEYb/hvcEhkIB61+U4cS9L9ILrmp1migienWHUQr8Ff+YmyMh0ot
8UsUD0gEVyfb6lnfV2DBnsB5Cm0Yc8lpyScdDveRbd1EV+xRuiwTlwm9UcZf
bdCxmjabLO754KvZUZaErg0N5PcPKwLJ/aIxjeiPz6I9X+e/h+UvscRFtI1Q
j0YxfQ2kRO5o7jMkEZ48VBySoquHW7ceil1CV+pOn2v63Qx72VrZ7qNJp2Rr
ytc74EOPyJoP2sdwYlKI+TOYR0T15KFnZa4uysn3Ab/G9rtetFSIUZohwwD0
sN4P/4s+f93xe03WCHh/brI88pBEWOLIUDxpOw4S4UJq19CHI4/pyapMwaJa
+BlLtJ5BcOL27llIZtlkikXLzKgtaxjPg/onvZXq/51e98JYexEow+o7p9Cc
tjtD3QVL8P6mQB69EebZLLnjq/rLYMYcEiSKZuT/KJitswy83WtPdNHZ1A5h
UulL8ClE97obugjse2WUF8FTtVbwLdrUpVm77cE8XGA6TteFjthbIUNDOQvz
nQHz6+iPgt8d1NWmIDF4tYX70f+/F19vOW42DhSMVb6maLpF/qoy6e9Q2nH4
cRiaR1CLl+HvFzAJ8lV8j9Z8UUR99W43cKssHx9BD1Q1t0uvtEAX/S0qKmOc
PwbqOCKT6sG9vXxKCH01o/qvkUY1iAXyNWqgJRXopu0+lMKssle6Pbrr3NnK
0+SFEE+34JGC7lAVjFRzzYKu0TcFbegT6l8y4ivTgKL04dA62oeMWwdPClwI
OETL/xjnB/ERI7m3MWB2b1j8GppglVp02SscksXiDa3R+RSJxu2ewdBDezs0
CS3ybDJleMMX9o6yVX1E67maXvbq84RLJZ/mfqI9dVN8D5HcwNw/mJ3HhEQ4
yHO7mOGFC6QYKMsroj+kxmX/dHaE3vPUzyzR9N6DNn1/7YCGtjEhHn2sbiPo
gpgtSI+4tTSiTxd7FBjvtQHLYthYQb+ecGQbwvyQ4bd9+KAp3icahuZ6rBff
9N+rXkZT058+6GZGBIbzLxyfonl7z55e5rEBWZpzmbFoI5LckOA1zC/Dy70k
9H7rbEGKHTt4W5RNvoSe2HaW77nhCAO+j0UOmOH80al8mlHYBZj0j92V/d/J
YozTx9xAXnTc1wxdRz7aUJHrATbUySVR6BjX+F3q896QPXRnvAZtV1htMMYQ
ACPvOJjm0c3SZD8nc0Jgn2+vJNsTEsFhifrmt30RoKgX/hjQF+VMj45Zx4DD
OdWox+jbtXvfKnMlQv5eelI4uiDZe/NfUQpMDH5crkSb33MhjzZ/DezvvLhm
0No3E+os/HNAyUfuKos5mlvxk1FZITjd3fVCEu31KT+uqb0UCs9WphihfdIm
TCpVq2CKyq4zBB3/p8ao8RoJOAfFtsvR3K4cnN3OzaBS+PPEJNqiJ6L45GoH
uHnn32J8inmc0P4w6cFnKLnzxO0imkZA8wE/VT/MnRHIe4Dew6+wtKE9CDxU
098D0YOcj/9axo2C2kDq3jL08JVlmRfZE+BZYHB+DF1UkMk0/G4ayry479NZ
oO99ayi3nYMF3W9BYuh6k9Hbkk0LwHcm+oMBOtY2bcjDfAk0KDVm/NDRa9F6
varL4POdia0Y/cCckuODwTJU5LfLDKPps853tyQvwYqnnzn1M6x36qTHLXyL
cET3ystzaDJGHpaerTnQFqFovosePsR4U+PmDATsqf3ljb72VqY07fok/MyT
UBlAC5ZVnC6fHoRjnht2lJYkwqOVS0X0G32go1P0WgR9iPSl63PBJwg6/axH
B93n1HBo1r0N6iiEd3uih8l3la3db4D1r3NCeWgbKinl+dpqEMh7rfMV/cSZ
8cR+51LQ8zD0JrfC/WqvyXzwpADCbvMXCaEr6GPt62gzwZE4wHALPelm6ilF
nwbGkdGPHdA2nuIxRnJJoPFOrT4VrV3gajL3Pgagm563Ff2HUcLu1lA4CCw3
266i9W4/3oyTDIH99B49HM9xftpMstpP5g+7T8FpGXSoGsUnhmEvWFDc8jVG
Bw0KbdS8d4c+o+KJYPTxxXmjgxquUOdhAaX/W7fRsILMGXJSTsUNoWUOztH7
yzpATM3Urz3WmK+eHfG6dtEO3Ide3RBCW0tlpq412ID59p1MDbRVAMdLt24i
6HAe2OOAXpw9vp2lTITLFz7rp6ItMoJiHgsTQUQzqLwFzXDo3ltyKyJwPb/K
toquOjsVEHfQBqjCKCw4XuD3zSUEswrbwmpedQsBrcH6UlG72A4G2+2OGqPj
3slw7NQ6QPP8eZdg9IG/Izvqps7wjvrHtxL0DW2K30+MXSHxePb5IfTBaOH0
80Hu4Hv5UcgeIuanQ86n7WS94PmDQ/OCaFpNz+H9b33BwHXwsgZabRfRrXIl
EK4lxSTboxuqTtL+yQwFsUr1PynoYcrAajfWSDj0nUGzBc2zHEj5zDAW6Dc/
5v9AB8R+ZPEaSoTf+z1pOWxIhIQ1h6CTcykwLkowIqCdP+o/l9J6DR1qf2oe
oZ0Y6BR4f2dDuUXJwWC06A5/AgNjIaQHPXtRgi6rylEViCqBkGzB7kH0zI05
P33lCnBomT61xxbvw78tkW/ltfBoJsVLEP2286mCpXAjqFHqjaqjJZeVG9hf
t4LUEQ5Je3SNYy2Z/eFuOCHbE5WCJj8VmmDN8gX2GQT/+Ijm/vuRwuzVV9hx
VFL+gX5MHrkjUDsEcy/3vD5gRyKMZ7NY9R0bg973NbsJdv/X7527LJSTUNtn
f+cRmjmI9fnP3mnIXhMrDUJLNlrWW5nNQTTrKnMJOsBLk/VP7AK4nckxG0Qf
MKsvTb24BOY3jJso7PH5i0T6GkWW4faTw4cE0YMfdOP7ny2DvP+Qgzr6ynly
/eE/SyDyNrbPDm3jpkoK6F+Eg00aZ1PQ9jmGWuycC0A5yRj4Ef38na1H2NdZ
+EHWOr2CthJ76NhxfhoG+LxkDzjgPL4QqK6vNgFN0jIJgD6+0p/GojkKhXe2
N4zQgiLeeSpdA5BgV6oWhPbb/WPeTrsPfGIsc4rRyxuFC4n2n+B5idDeQbSm
n+7eiHdtoN8zc5/CEfv//RXNpLUGkPfQuSmCnvHK+x3OVQMCom1wB23F/2LU
2L8UmCakhH3QbV9OH8yAAlgPz+MqQotvkj+Ktn8LA3L8tCPodXeXqAqmVKj9
GbZJ64TnPfO19OTfeMhIpZgRR9P9+9C2/TwKAtRf9D5Axw0pbuXUhIIl+Ux9
MFr+GceFmpwA0H53+90HtPYFruGRPG+QftD6ahqdppMgHUPuAYdZpUJYnTGf
ehS6ul13hb2kXCdA90vZ89+Ld4IlS74npmjOed7F++/soedQmG70/+sfLskR
Um2h/BO5Egk9qyK06Sz7//+/WF9YRu8ez6MYsiaC19npYwddSITC/IJfKzgf
mI1ps11BK6/5VdAYEOFmWAu5FXrxguTJc4w2ICYruZqINtyB5V4ZW+BazRlp
QecUBc4LU9kDWQpv5zraaSV9/x2iI8zcDK085Irvz2CnPUPHBTp2k2eroL8/
sutss3GDooLncXboAwJDdHLinhB3b8onA80p9CKprc4HnJm1iZ/QF5sNLV21
AsGw9uPDf+gs0k7pbEooKD27pCHghvV+jGfCxSESRPhzZDXRB7xES3Kd42B/
N88ZN7Rf+SC/iGcybLuE8OaiK9me3etpTYMxETKGb+jHt42vhD3IhOYRq+09
7nj+qre/KX/Nh5yQybkz6BeLf6gL4oshjKD19S666g7FZmbLB7BZaW7yRe/5
uDPOMlILeskSJcVoF1qmwburjSCvmp02ilZUblXsV20HgV084fQeJILE3yKJ
0xGfgCk/2PUi+v6Hxumzin2wrr/b4iHaO6ty061iAL4zWumFoiuk1MQOGY1C
TfWEciW680BD8Y/oCch4qnlpFv2AvH0wrXoaAnibT7J5kgilCYH0cklzYNl5
8YAM+t/fURrBzQXQds6ifIIO6R9wrIxbAunT3GsxaNqhp1J+D5bhyHDQeD16
nrVr5+mVZaAO3vVpBX3tg+jnV8pLsCRtWcPlRSKs/AzwpPFZgJ6l8VxFdLyl
nQgV5xyUJ95KeI7+Tt72VlxwGpJVmvyT0alj37ibl8fB698Fuzb0+taDT/Vx
I2CWm2n8G32e976dZOM3UNPj0jrijfPj9Yh7pKUeEGcIuqyKdvN+wmw92Alc
VTvnHNBL3z72dtY0AZn5s0Nv0PGP5yrSiLUwwz3O1IO22td3er/ve+ho19jZ
QTPY1B3+lVsI/wG9DCl/
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwU2Xc4lX0YB/BzJEQyQkt2SxEhM/djhDITKpVsShEJSZEUUVaEEC2pUNEU
cU5GRGalKAmZZzr2eu/3r67PxaXO8/zu3/d7S9bVz9aDi0QiPeQnkf7/c8eO
pyRSCoVQuHHX4pQtE0QsYgw3oS0HHW1a+JnA9PCIskLv7LaQFEllQFO4Yc1Z
dNlvRqifPAOKMqT5stGfe5cWL6PQ4UbJ3J4qtEatjbShLx1ONv6IG0HnBvA3
FWylw96B142iqRTi4ZLLB1VmaLCFnCKkg3b8nqWwuZMGfOv897mgTzv3BF9p
psE/daubMei6EY/M4S4aVFtt/foMPd3wlVm6hA4PvPlWfUdf5zPTltxDh8uR
/QcX0DWBdz/1vKCDaxb19oZbFELqfNXlI0YMMHid02WBzhiV3h9NZoJMc5hU
IHrQuNlV7jwTFocOOWeidYvqdJqEWfB7ieY96v+2FpA3r2JB+XqxviF0y+6j
J67fYkOWJmuDSBqFUJkLfn47egzO7/vipYX+c7mv78wtDjj6PH18DP0vw6V/
qnIcVud4KBWhyRcjZG84TsHkW0O/r2jpjr6vUhXT8K1V+sUc+min3DJ1xVl4
NTrHlk+nENtrwXomeQ5SeH6qm6MFvQ9EmDPm4YzMm6AA9N6fOz+uUF8EW52U
txnoEcHLLpOKJELFzn+mEu1vHT638yGJEPK10htEyx6JFLjNTSbo0VsvCmVQ
CKc4f6+HJmSi4S5f5U60nAh8HzlBJp6+7yc7oWv0dt8jnyETsV+pRlfQptbD
R3hdycRxRs6VArTjezvLWV0yYbbsQm0b+nTsVi2hpWRik7zjsll0zyN7ISUK
ieDZpWkud5tCOCcFeL46QyL6HcRu7EE/TIvyOClNIqpOs76cRlfuc0xbemMR
Ih88ta1Aixxyvuy5dgEWBGQcj2RSCL+jx8rVt8/Crw3zmZfRASu4Pr47NwNl
8PPXE/S2X8zfD2unIfRMiss0eu390MXNflNw6Ib/fZks/HqAQ5BZ3SRoPbLq
N0WX7LlmP7xpEsZ/8h2/hZYdMvGxHBuHdk7/k3K0W9q+BGvncShe8XG0D61P
sznn2MqB04YXTqtlU4inVP10vpoxsD7iWOyI5uYK/8syHQPlIE3OJfTguT+6
AU1sGH3MCm5Gb1W7zTvBYIHFjw28s+hVl5IPCV5iQQGf460NdyiERx9D4+Ua
FizXit9gg07RMSdplDLBx4v6MhStJjvq/s2VCfW3Joweog2WVmd/X8kExRrF
tiZ0+uR6n1+3GRA77uQ6g3YuWdGeKs2AYYWbLIUcClGvJvhS+zXOo11thDX6
VN3TZ3uP0eHJ5VmhUHRGgWRNyjo68Jdsz3mAtugN4z42SoPjf92Um9Bvo54J
57bR4JNIevk02r0+dmRrOw02GzRYKORSiBgY9frOokHMaVKXFZo0rnbiiiod
BnPUfc6hB22a/4hn0MGsyXvmPlrCMV9IaTsD8heyrn1BZ9hVDtXPMIBPuWX1
NJquG1Vx+BITvI4uzZe/SyGsr/EoHd/Igprr2ppW6Mo3K749o7NgY9mpmhD0
LyUXJ81ONlwduWt/Hx1Yd/Pvy5Ex+Lf2W18j+tlc/7SH1DiY7OUPnEJ/tA3L
H/ebgLxz+kvk7+H86n2RcO6cBI+OPNkQdNVrH+WLf2egirfz+T10jHCbQ9aJ
OVDQFCIa0QozSe5h/fMQ5WnUNInO9W/hEdq9CH2pwU5y9ynE88KfDkG7SIRx
9VOaBVo/t+P9VBmJeMDpDgtGC3wI/bxakkxwK4gtv4fuO7HT2/EgmXDbb5bZ
gO4M5nCkAsgENTJMcRKds+B56+BJMiFX/Pyd7AMKsZCw7VmhOZmI7Okzs0DX
iERJ+ImTib/CazqC0Dxz2eqVX0iEIWHpdRedZkThXxtGIu75XZr4jA42dJSQ
kSURLl+GxGQf/v/+rNxevluAP3Gl+z6j+daWxLbcmAXiPf3POHpMKZNyuXYG
coflTsvkUYhdiXWPp7hn4NieuPiz6FOh6wK1bkzBh5CK9bloppLclfKOSZDK
HyuoR+c2CDjHbpmE3zxHPks/ohDCx40HPnSOg/7ORMe96EAt2/mQXeOQ7VE1
FIje+fXbqY0POXCkahtfPVo1zix+8eoYlI05p3HQKt4LSTHkMZCUT90onY/z
wK6xo0ayofPSvHEgesbEs3LPbRawp7dzZaG39F949UeTBfwBrhUf0WrWFZ/0
upggO5wSNoJO12tkp0czQcu1VnvlYwqhE0w5uVWHCdY/pyd00M5Rya6mgwzw
tN320hU9WKa51d6HARfqnfxj0W/zDOI+z9MhxTBJuRh9Rf9y10IOHZ6Wfhz5
gV7h8r3A3ZYO1B0T+eQnFKLNP8SmRJwOP55s9tyCLu1Ne750hAZMucPy+9Cm
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
p14u/vt5ortpd16iVeLZmWcxbyGb410I9GlbTavNmMfTj4+zpDzaSLMnvcbV
eDGP1oeKzdEvip4v24z9M6dn37ZD6LlfIkt5//3+XHeX2cvokK1brklg/70/
ZHP1fxXdeTSUfRQHcNkrWwsiS4uikMia5Q5RilIo+1rWJDtJJSHCEO3ZoiQh
b4QU0hQlEknIVgqlkmf2meS9/vycOWfOnJnn+/vee2bmPPXo4heG/o0JBDT5
GBqNocvUzEr16nB+/aUxLuSE+9Fb0/RHBM7TkUoXNNCGUa0sH20qTM2t0nRA
80YvU4g/SQVGkmj/afTwzNSRPW1U4BfjPVOC9qxPfa8gTYM1CtMddHS6go1P
wzMabCkZDZd3xve75dS5Qhk6GG3plbVAp/Et12mPoIOjSaP/JfTusS5Ox1YG
ZLpn8m9zwb7WtM/Iq2NC7sS5+87onMnbBjKyLCgLjrFNQGsKT2XVn8Tz+7RX
YTe6SFS1QM6ADb2Ch3ax0RdkIgxp2Wz4Qt7ze40rhVR/kNEqPcWGP1Jw2RId
EZtQtlcP85W/zSgEbf8vwMkSr28RZZXxq+jvueYXKps4IPtA7kIz2sTT5Z0y
jQMqess0J9FcWs34MQUu6DQL9Iu54XnbzufnZYT9uItzWhcdkOOQoYj9t7/r
9wZ39Lzb79KVmEd3h/GOJLTWEM8zIQvs19GP4RVo5559g/JqXIj165D9gPaL
Ce3sxXk1ZeZZy1/0Q3uJh8we7OfoR/5K7hTSrQ8vD2Ze4sDt+Xvi1uif65S+
vbPCvJ7Prw1HExWcahEOG56J57jdRLcdYKTkF7Lhk2Lc/R/o+g/ZlmuGWEAe
/XxhmQeed8sUCisjWWBWsCtQH31Z07eoUoQFpQorNiWj5wTvSg/pMsFlJEa4
Au21eEdc4xsGiOWPTL5HD+Y1y8Z5MSBCvqxkrSeFlDnoYqyRTQflYfFkS3S4
behVO5xnB3MjfY6j1ceNqQ04z2a4fjK/gr6s53RyOoQGJDlTpUb0GSVTw4BV
NKB+KuH7it5A7fOuf0GFkpsi40u8KCR/Z5t1HlFUcHIJe66JXtkr9X1CnQoi
q/tvOaJ7KwbfD00T0DxofPYMWqH3/pLuKtzvbhR7lqB97zu+tD9FwAbnxaRO
tNpYSj0D+6tf5rgiDT3BIB4YaxCQNtD7T9Ybn1/S++stSQJMrm8fMUVX+dv4
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
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {9000., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Resource1\"", "\"Resource2\"", "\"Consumer\"", "\"Predator\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.717183361237316*^9, 3.7171834064548492`*^9}, {
   3.717183539535798*^9, 3.717183599248475*^9}, {3.717183705263093*^9, 
   3.7171838439123435`*^9}, {3.717183897945176*^9, 3.7171840864248686`*^9}, {
   3.7171841424628754`*^9, 3.717184176577524*^9}, 3.7171842390275297`*^9, 
   3.717184284698913*^9, 3.717184348373473*^9, 3.7171844240556955`*^9, 
   3.7171845366156745`*^9, 3.7171845968634405`*^9, {3.717184649580413*^9, 
   3.7171849082938943`*^9}, 3.71718494065388*^9, {3.7171849904322295`*^9, 
   3.7171850278990507`*^9}, 3.717185575060662*^9, 3.7171856198967404`*^9, {
   3.7171860878411894`*^9, 3.7171861657491264`*^9}, {3.717186226564516*^9, 
   3.717186232803091*^9}, {3.7171889502054415`*^9, 3.7171889645036106`*^9}, 
   3.717189121497534*^9, {3.7171891656926317`*^9, 3.717189172356165*^9}, 
   3.717190097130226*^9, {3.7171901430065317`*^9, 3.7171901747108364`*^9}, 
   3.7171902753002605`*^9, {3.717190314987173*^9, 3.7171903340971017`*^9}, {
   3.717190418811219*^9, 3.7171904258018274`*^9}, {3.7171904982689695`*^9, 
   3.7171905068896675`*^9}, {3.7171905837741385`*^9, 
   3.7171906152596865`*^9}, {3.717190704437745*^9, 3.717190712450549*^9}, {
   3.7171908149533377`*^9, 3.71719084935489*^9}, {3.717190905640012*^9, 
   3.7171909475169306`*^9}, {3.7171920787703605`*^9, 
   3.7171920893980894`*^9}, {3.717192120096923*^9, 3.7171921676451516`*^9}, 
   3.71719221321912*^9, 3.7171922494773264`*^9, {3.717192302712843*^9, 
   3.7171923108447256`*^9}, {3.717192345155565*^9, 3.7171925405245495`*^9}, {
   3.7171926417389975`*^9, 3.717192665904681*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K1", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K2", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e1", "=", "0.15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e2", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tf", " ", "=", " ", "10000"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqs", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Res1", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"r1", "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Res1", "[", "t", "]"}], "K1"]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"H", "*", "A", "*", "p", "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"H", "*", "A", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"S1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "h1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"S1", "*", "h1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Res2", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"r2", "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Res2", "[", "t", "]"}], "K2"]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"H", "*", "A", "*", "p", "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"H", "*", "A", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"S1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "h1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"S1", "*", "h1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"B", "*", "A", "*", "p", "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"B", "*", "A", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res2", "[", "t", "]"}]}]}], 
           RowBox[{"1", "+", 
            RowBox[{"H", "*", "A", "*", "p", "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"H", "*", "A", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"M", "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"S2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "h1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"S1", "*", "h1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"e1", "*", "S1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"e1", "*", "S1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"e2", "*", "S2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "h1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"S1", "*", "h1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}], "-", 
        RowBox[{"d", "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Res1", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Res2", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aa", " ", "=", " ", 
   RowBox[{
    RowBox[{"Reap", "[", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{"NDSolve", "[", 
          RowBox[{"eqs", ",", " ", 
           RowBox[{"{", 
            RowBox[{"Res1", ",", " ", "Res2", ",", "Con", ",", " ", "Pred"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Sow", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Res1", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Res2", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",",
               " ", 
              RowBox[{"{", 
               RowBox[{
               "t", ",", " ", "9000", ",", " ", "10000", ",", " ", "0.01"}], 
               "}"}]}], "]"}], "//", "Mean"}]}], "}"}], "\[IndentingNewLine]",
          "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", "1", ",", " ", "0.05"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7171850823883705`*^9, 3.7171851443603168`*^9}, {
   3.7171855037507534`*^9, 3.717185504005747*^9}, {3.7171855624006505`*^9, 
   3.7171855628363514`*^9}, {3.7171856423772593`*^9, 
   3.7171856426125917`*^9}, {3.7171862161699696`*^9, 
   3.7171862649928026`*^9}, {3.7171889759919477`*^9, 
   3.7171889767310867`*^9}, {3.717190187939597*^9, 3.717190188306387*^9}, 
   3.71719033976348*^9, {3.7171904340989237`*^9, 3.71719043468218*^9}, {
   3.7171905165569887`*^9, 3.7171905175954957`*^9}, 3.7171906297054615`*^9, {
   3.7171907180597086`*^9, 3.717190718691328*^9}, {3.717190792372143*^9, 
   3.717190792794281*^9}, {3.717190839258257*^9, 3.7171908401466026`*^9}, {
   3.7171909578032155`*^9, 3.7171909672260895`*^9}, 3.71719102746842*^9, {
   3.7171910730519257`*^9, 3.717191075418869*^9}, {3.717191139995598*^9, 
   3.717191152439045*^9}, {3.717191200555944*^9, 3.717191202571689*^9}, {
   3.7171912829035845`*^9, 3.717191283409565*^9}, {3.7171913381613646`*^9, 
   3.717191338752761*^9}, {3.717191395188902*^9, 3.717191395722227*^9}, {
   3.7171915049744816`*^9, 3.7171915096151257`*^9}, {3.7171915616029053`*^9, 
   3.7171915620194006`*^9}, {3.717191620251911*^9, 3.7171916250005093`*^9}, {
   3.7171918007733316`*^9, 3.7171918016071863`*^9}, {3.7171918478678594`*^9, 
   3.71719185097678*^9}, 3.717191937681549*^9, {3.7171925564085565`*^9, 
   3.717192578367292*^9}, {3.717192710139017*^9, 3.717192721234208*^9}, {
   3.7171927886171722`*^9, 3.717192790002717*^9}, {3.71719303013867*^9, 
   3.7171930322183332`*^9}, {3.717193080816657*^9, 3.7171931285940657`*^9}, {
   3.717193182881154*^9, 3.7171931838764367`*^9}, {3.717193229922507*^9, 
   3.7171932303621325`*^9}, {3.717193296579914*^9, 3.717193297345705*^9}, {
   3.717193354147759*^9, 3.7171933621137323`*^9}, {3.717193408087184*^9, 
   3.717193410991564*^9}, {3.7171935240557175`*^9, 3.7171935248735676`*^9}, {
   3.71719359179428*^9, 3.717193592706175*^9}, {3.7171936471540747`*^9, 
   3.7171936491299543`*^9}, {3.7171936972079525`*^9, 
   3.7171937279844165`*^9}, {3.717193832705904*^9, 3.717193854177884*^9}, {
   3.7171939457143583`*^9, 3.7171939496578064`*^9}, {3.7171940097762556`*^9, 
   3.717194022377844*^9}, {3.717194076816846*^9, 3.7171940777213917`*^9}, {
   3.717194300160469*^9, 3.7171943027928805`*^9}, {3.71719436214762*^9, 
   3.717194368416517*^9}, {3.7171944524916353`*^9, 3.7171944535461197`*^9}, 
   3.71719454183185*^9, {3.717194598396923*^9, 3.717194606706704*^9}, {
   3.717194732739648*^9, 3.7171947375874376`*^9}, {3.717194788956518*^9, 
   3.7171947924186797`*^9}, {3.7171949283438926`*^9, 3.717194929371859*^9}, {
   3.71719499487516*^9, 3.717195001593797*^9}, {3.7171950523914757`*^9, 
   3.717195056022874*^9}, {3.717195144232401*^9, 3.717195145002062*^9}, {
   3.717195208849593*^9, 3.7171952109868746`*^9}, {3.7171952666677494`*^9, 
   3.7171952678237085`*^9}, {3.7171953289332848`*^9, 3.717195329855966*^9}, {
   3.717195392144329*^9, 3.7171953930831327`*^9}, {3.7171954447150354`*^9, 
   3.7171954456961474`*^9}, {3.717195493290973*^9, 3.7171954939878445`*^9}, {
   3.7171955477890234`*^9, 3.7171955486663246`*^9}, {3.7171956185487013`*^9, 
   3.7171956190176*^9}, {3.7171956611497855`*^9, 3.717195661688156*^9}, {
   3.717195807142214*^9, 3.7171958114175577`*^9}, {3.717195881389179*^9, 
   3.717195883466364*^9}, 3.717195996467184*^9, {3.717196051303999*^9, 
   3.7171960568047433`*^9}, {3.7171961299800124`*^9, 3.717196138360855*^9}, {
   3.7171962266816254`*^9, 3.717196228466385*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "21"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "21"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "21"}], "}"}]}], "]"}]}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Total Resources\>\"", ",", " ", "\"\<Consumer\>\"", ",", " ", 
      "\"\<Predator\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.717185180841191*^9, 3.7171851842449083`*^9}, {
   3.7171852580320168`*^9, 3.7171852820801835`*^9}, 3.717185483198584*^9, {
   3.7171857238185525`*^9, 3.7171857290704517`*^9}, 3.7171904558793297`*^9, {
   3.7171939214393654`*^9, 3.7171939233621407`*^9}, {3.717194916224516*^9, 
   3.717194921315722*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQPHrM/6d+t/tJ81EwRW2q9TuL3uUCSMv9N+VsSD
xJzSj/YmxiBw2D7dSL7/4RaY/El7b7OY079nf7SHmHbB/uCC/SszN8PUX7a/
8mPiEoM1H+3T00Dgmv2dbPHfrKth+m/ayzzbPitk+kf7s2dA4I79hbBlLMvS
YeY9sO8VW2TIKwpT/9D+jM0F7ZSgD1DzH9v7ifrWmku+h+p/Yt/F8GBZLNM7
qH3P7DcECDmyS7+DmvfC3jVxTcs7jXdQ817aa61815J27C3UvNf2c/a5Hve0
fQc174292buQG51zYOa9sy9YZZc3Ue491LwP9q76e3cZLXlvDwAbsJx4
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNxeTIdt/W/28+aCQIr7UtfvJbyE4Txd9pzn5pQ
mvfim72JMQgctn9WtPLFtlPfoPIn7T825iZG932zh5h2wX6G2wyDCVkw9Zft
Wfgfn3O0+mafngYC1+wXnpNnmaEP03/TXrGQM/gY9zf7s2dA4I79r+nNFn4P
vkLNe2Av3HG64uPTr1D1D+0FVpzQWM4GM/+xfXTfjoDFmjD9T+wnPfx3oCAC
Zt8z+4siPbOt62Hue2EvKXDFOSkBZv9L+xtiX1b2R8PMe23/NyLf8KYNzLw3
9k3tvy+xCMPMe2dfreRpsvkpzH0f7FviL88S2/bVHgCMMJ4l
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQN5JZ9/GJZ/s581EwRW2i958yvvaCGMv9PeY6v+
t6Vt3+xNjEHgsH1ch7hK2zKY/El7XYFvrt7Xv9lDTLtgv5nP7PrPtzD1l+3D
9HOTf0h9t09PA4Fr9lM4Jb/McPwO1X/TXjPPQtA8/bv92TMgcMdeWN51gfq8
71DzHtifaVtzu/8jTP1De735RzQbfX5AzX9s/zdD11K+7QdU/xP789Ny5C8s
+AG175m9SdyzSa8jf0DNe2HfvCBh44WKH1DzXtofeb5FXXMGzLzX9uq8nx5G
T4eZ98Z+96mH557PhJn3zr52s6Gv7VKYeR/sjx8zmfBh+w97AMJ9odY=
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0.8997468895432845}, 
     PlotRange -> {{0, 1.}, {0.9304688068707823, 1.5449071534207393`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0.8997468895432845}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0.9304688068707823, 1.5449071534207393`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Total Resources\"", "\"Consumer\"", "\"Predator\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"]
          , LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.717193220007586*^9, 3.7171932728044686`*^9, 3.717193348767825*^9, 
   3.7171934007274694`*^9, 3.7171935106284857`*^9, 3.7171935781423197`*^9, 
   3.717193640235777*^9, 3.717193692106789*^9, 3.7171937668326187`*^9, 
   3.717193924029703*^9, 3.7171939939561186`*^9, 3.717194066159634*^9, 
   3.7171942528149567`*^9, {3.7171943413935785`*^9, 3.7171943515303125`*^9}, {
   3.71719440466156*^9, 3.717194422036933*^9}, {3.7171944983782635`*^9, 
   3.717194516519349*^9}, 3.7171946442175426`*^9, 3.717194779533563*^9, 
   3.7171949225482936`*^9, 3.7171949837015667`*^9, 3.7171950409044323`*^9, 
   3.717195136656747*^9, 3.7171951868776517`*^9, 3.7171952488015027`*^9, 
   3.717195307758932*^9, 3.7171953726518416`*^9, {3.717195432332178*^9, 
   3.7171954350682774`*^9}, 3.717195486948848*^9, 3.717195532894808*^9, 
   3.7171955971850224`*^9, 3.717195801276828*^9, 3.71719585353207*^9, 
   3.7171959741438723`*^9, 3.717196046641147*^9, 3.7171961234082527`*^9, 
   3.7171962128770666`*^9, 3.7171962838558035`*^9}]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3529, 48, 31, "Input"],
Cell[CellGroupData[{
Cell[4112, 72, 7071, 183, 666, "Input"],
Cell[11186, 257, 48203, 934, 146, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59426, 1196, 1470, 30, 172, "Input"],
Cell[60899, 1228, 122952, 2091, 391, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183888, 3324, 1184, 24, 31, "Input"],
Cell[185075, 3350, 253, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185365, 3361, 237, 6, 31, "Input"],
Cell[185605, 3369, 236, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185878, 3380, 8677, 221, 846, "Input"],
Cell[194558, 3603, 2739, 71, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197334, 3679, 9996, 229, 846, "Input"],
Cell[207333, 3910, 1239, 20, 31, "Output"],
Cell[208575, 3932, 113782, 1928, 391, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322394, 5865, 8886, 200, 817, "Input"],
Cell[331283, 6067, 4986, 131, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336306, 6203, 3107, 78, 172, "Input"],
Cell[339416, 6283, 17983, 363, 391, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357436, 6651, 11974, 286, 886, "Input"],
Cell[369413, 6939, 1845, 28, 31, "Output"],
Cell[371261, 6969, 237325, 3967, 391, "Output"]
}, Open  ]],
Cell[608601, 10939, 13225, 298, 926, "Input"],
Cell[CellGroupData[{
Cell[621851, 11241, 3090, 83, 172, "Input"],
Cell[624944, 11326, 17969, 364, 432, "Output"]
}, Open  ]]
}
]
*)

