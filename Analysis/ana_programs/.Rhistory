colnames(screen35)=c("Colpidium", "Blepharisma", "treat", "BA")
ggplot(screen35, aes(x = as.factor(treat), y = Colpidium*20, fill=BA)) +
geom_boxplot(colour = "blue") +
labs(x="% volume screened", y="Colpidium density (ind./ml)") +
scale_x_discrete(labels=c("20%","40%","60%", "80%"))+
guides(fill=guide_legend(title=NULL, reverse = T))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text("", size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
ggplot(screen35, aes(x = as.factor(treat), y = Blepharisma*20, fill=BA)) +
geom_boxplot(colour = "blue") +
labs(x="% volume screened", y="Blepharisma density (ind./ml)") +
scale_x_discrete(labels=c("20%","40%","60%", "80%"))+
guides(fill=guide_legend(title=NULL, reverse = T))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text("", size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
screen35=read.table(paste(paste(path, "35screen",sep="//"), ".csv", sep=""), sep=",",header=F,fill=T)
screen35=as.data.frame(screen35)
colnames(screen35)=c("Colpidium", "Blepharisma", "treat", "BA")
ggplot(screen35, aes(x = as.factor(treat), y = Blepharisma*20, fill=BA)) +
geom_boxplot(colour = "blue") +
labs(x="% volume screened", y="Blepharisma density (ind./ml)") +
scale_x_discrete(labels=c("20%","40%","60%", "80%"))+
guides(fill=guide_legend(title=NULL, reverse = T))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text("", size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
ggplot(screen35, aes(x = as.factor(treat), y = Blepharisma*20, fill=BA)) +
geom_barplot(colour = "blue") +
labs(x="% volume screened", y="Blepharisma density (ind./ml)") +
scale_x_discrete(labels=c("20%","40%","60%", "80%"))+
guides(fill=guide_legend(title=NULL, reverse = T))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text("", size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
ggplot(screen35, aes(x = as.factor(treat), y = Blepharisma*20, fill=BA)) +
geom_bar(colour = "blue") +
labs(x="% volume screened", y="Blepharisma density (ind./ml)") +
scale_x_discrete(labels=c("20%","40%","60%", "80%"))+
guides(fill=guide_legend(title=NULL, reverse = T))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text("", size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
ggplot(screen35, aes(x = as.factor(treat), y = Blepharisma*20, fill=BA)) +
geom_bar(colour = "blue")
ggplot(screen35, aes(x = as.factor(treat), y = Blepharisma*20, fill=BA)) +
geom_boxplot(colour = "blue") +
labs(x="% volume screened", y="Blepharisma density (ind./ml)") +
scale_x_discrete(labels=c("20%","40%","60%", "80%"))+
guides(fill=guide_legend(title=NULL, reverse = T))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text("", size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
ggplot(screen35, aes(x = as.factor(treat), y = Colpidium*20, fill=BA)) +
geom_boxplot(colour = "blue") +
labs(x="% volume screened", y="Colpidium density (ind./ml)") +
scale_x_discrete(labels=c("20%","40%","60%", "80%"))+
guides(fill=guide_legend(title=NULL, reverse = T))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text("", size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
ggplot(screen35, aes(x = as.factor(treat), y = Blepharisma*20, fill=BA)) +
geom_boxplot(colour = "blue") +
labs(x="% volume screened", y="Blepharisma density (ind./ml)") +
scale_x_discrete(labels=c("20%","40%","60%", "80%"))+
guides(fill=guide_legend(title=NULL, reverse = T))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text("", size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
ggplot(dat.summary, aes(x=date, y=mean, colour=sp)) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.1) +
geom_line(aes(group=sp)) +
geom_point(size=4) +
xlab("date") +
ylab("Log[density(ind./mL)]") +
scale_colour_manual("",
values=c("darkblue", "darkgreen", "blue", "green"),
labels=c("Blepharisma_W/ Colpidium", "Colpidium_W/ Blephsrisma", "Blepharisma", "Colpidium"))+
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
axis.text=element_text(size=16), axis.title=element_text(size=24,face="bold"),
legend.text=element_text(size=24))
ggplot(screen35, aes(x = as.factor(treat), y = Colpidium*20, fill=BA)) +
geom_boxplot() +
labs(x="% volume screened", y="Colpidium density (ind./ml)") +
scale_x_discrete(labels=c("20%","40%","60%", "80%"))+
guides(fill=guide_legend(title=NULL, reverse = T))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text("", size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
ggplot(screen35, aes(x = as.factor(treat), y = Colpidium*20, fill=BA)) +
geom_boxplot() +
labs(x="% volume screened", y="Colpidium density (ind./ml)") +
scale_x_discrete(labels=c("20%","40%","60%", "80%"))+
guides(fill=guide_legend(title=NULL, reverse = T))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text("", size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
ggplot(screen35, aes(x = as.factor(treat), y = Colpidium*20, fill=BA)) +
geom_boxplot() +
labs(x="% volume screened", y="Colpidium density (ind./ml)") +
scale_x_discrete(labels=c("20%","40%","60%", "80%"))+
scale_fill_manual(values = c("green", "darkgreen"))+
guides(fill=guide_legend(title=NULL, reverse = T))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text("", size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
ggplot(screen35, aes(x = as.factor(treat), y = Blepharisma*20, fill=BA)) +
geom_boxplot() +
labs(x="% volume screened", y="Blepharisma density (ind./ml)") +
scale_x_discrete(labels=c("20%","40%","60%", "80%"))+
scale_fill_manual(values = c("blue", "darkblue"))+
guides(fill=guide_legend(title=NULL, reverse = T))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text("", size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
ggplot(screen35, aes(x = as.factor(treat), y = Blepharisma*20, fill=BA)) +
geom_boxplot() +
labs(x="% volume screened", y="Blepharisma density (ind./ml)") +
scale_x_discrete(labels=c("20%","40%","60%", "80%"))+
scale_fill_manual(values = c("lightblue", "darkblue"))+
guides(fill=guide_legend(title=NULL, reverse = T))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text("", size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
ggplot(screen35, aes(x = as.factor(treat), y = Colpidium*20, fill=BA)) +
geom_boxplot() +
labs(x="% volume screened", y="Colpidium density (ind./ml)") +
scale_x_discrete(labels=c("20%","40%","60%", "80%"))+
scale_fill_manual(values = c("green", "darkgreen"))+
guides(fill=guide_legend(title=NULL, reverse = T))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text("", size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
ggplot(screen35, aes(x = as.factor(treat), y = Blepharisma*20, fill=BA)) +
geom_boxplot() +
labs(x="% volume screened", y="Blepharisma density (ind./ml)") +
scale_x_discrete(labels=c("20%","40%","60%", "80%"))+
scale_fill_manual(values = c("lightblue", "darkblue"))+
guides(fill=guide_legend(title=NULL, reverse = T))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text("", size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
ggplot(mzpdata, aes(x = as.factor(treat), y = den/100000)) +
geom_boxplot(fill = "grey80", colour = "blue") +
labs(x="", y="microzooplankton density (10^5 um3/ml)") +
scale_x_discrete(labels=c("T0","W/O mesozooplankton","W mesozooplankton"))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
write.table(OmniResults, file=paste(path, "Results", "OmniResults.csv", sep="//"), sep=",",row.names = F)
library(ggplot2)
library(graphics)
library(scales)
library(plyr)
path=readline("Choose your path!")
##### Dilution exp ############################################################################################
datlist_Dilu = read.table(paste(path, "Classif_data", paste("list_Dilu.csv", sep=""), sep="//"),header=F,fill=T,sep=",")
sumlist_Dilu = read.table(paste(path, "Classif_summary", paste("sumlist_Dilu.csv", sep=""), sep="//"),header=F,fill=T,sep=",")
Diluresults=matrix(0, 11, 13)
colnames(Diluresults)=c("dilution factor", "incubation time", "biovolumeT0(um3/ml)", "biovolumeT24(um3/ml)",
"growth rate_bioV", "Max growth rate_bioV", "growth_P", "MZP grazing rate_bioV", "grazing_P",
"R2", "biovolumeT24 WO all ZP(um3/ml)", "biovolumeT24 W all ZP(um3/ml)", "all grazing_bioV")
Diluresults[1:2,1] = 1/5
Diluresults[3:4,1] = 2/5
Diluresults[5:6,1] = 3/5
Diluresults[7:8,1] = 4/5
Diluresults[9:11,1] = 1
Diluresults[1:11,2] = 1
t0=c()
for (i in 2:3){
temp = read.table(paste(path, "Classif_data", paste(datlist_Dilu[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=",")
phy=temp[which(temp$Class=="small20" | temp$Class=="Phyto"),]
tempsum = as.matrix(read.table(paste(path, "Classif_summary", paste(sumlist_Dilu[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=","))
vol = as.numeric(tempsum[3,2])/as.numeric(tempsum[4,2])
phyDen = sum(phy$Volume..ESD.)/vol
t0 = c(t0, phyDen)
}
T0=mean(t0)
Diluresults[1:2,3] = T0*1/5
Diluresults[3:4,3] = T0*2/5
Diluresults[5:6,3] = T0*3/5
Diluresults[7:8,3] = T0*4/5
Diluresults[9:11,3] = T0*1
for(i in 4:14){
temp = read.table(paste(path, "Classif_data", paste(datlist_Dilu[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=",")
phy=temp[which(temp$Class=="small20" | temp$Class=="Phyto"),]
tempsum = as.matrix(read.table(paste(path, "Classif_summary", paste(sumlist_Dilu[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=","))
vol = as.numeric(tempsum[3,2])/as.numeric(tempsum[4,2])
Diluresults[i-3,4] = sum(phy$Volume..ESD.)/vol
Diluresults[i-3,5] = (log(Diluresults[i-3,4]) - log(Diluresults[i-3,3]))/Diluresults[i-3,2]
}
dilulm = lm(Diluresults[,5]~Diluresults[,1])
Diluresults[1,6] = coef(dilulm)[1] # MAX growth rate
Diluresults[1,7] = summary(dilulm)$coefficients[1,4] # p value of MAX growth
Diluresults[1,8] = -coef(dilulm)[2] # grazing
Diluresults[1,9] = summary(dilulm)$coefficients[2,4] # P value of grazing
Diluresults[1,10] = (1-(deviance(dilulm)/(var(Diluresults[, 5])*(length(Diluresults[, 5])-1)))) # R2
Diluresults[1,11] = T0*exp(coef(dilulm)[1]*Diluresults[1,1])
phy_W_allzp=c()
for (i in 15:16){
temp = read.table(paste(path, "Classif_data", paste(datlist_Dilu[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=",")
phy=temp[which(temp$Class=="small20" | temp$Class=="Phyto"),]
tempsum = as.matrix(read.table(paste(path, "Classif_summary", paste(sumlist_Dilu[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=","))
vol = as.numeric(tempsum[3,2])/as.numeric(tempsum[4,2])
phy_W_allzp = c(phy_W_allzp, sum(phy$Volume..ESD.))/vol
}
Diluresults[1,12] = mean(phy_W_allzp)
Diluresults[1,13] = Diluresults[1,11] - Diluresults[1,12]
write.table(Diluresults, file=paste(path, "Results", "DiluResults.csv", sep="//"), sep=",",row.names = F)
##### Dilution exp ############################################################################################
##### omnivory exp ############################################################################################
list_Omni = read.table(paste(path, "Classif_data", paste("list_Omni.csv", sep=""), sep="//"),header=F,fill=T,sep=",")
sumlist_Omni = read.table(paste(path, "Classif_summary", paste("sumlist_Omni.csv", sep=""), sep="//"),header=F,fill=T,sep=",")
OmniResults=matrix(0, 4, 5)
colnames(OmniResults)=c("incubation time", "biovolumeT0(um3/ml)", "biovolumeT24 W/O meso(um3/ml)",
"biovolumeT24 W/ meso(um3/ml)", "grazing rate_bioV(um3/ml/d)")
OmniResults[,1] = 1
t0=c()
for (i in 1:3){
temp = read.table(paste(path, "Classif_data", paste(list_Omni[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=",")
MZP = temp[which(temp$Class=="MicroZP"),]
tempsum = as.matrix(read.table(paste(path, "Classif_summary", paste(sumlist_Omni[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=","))
vol = as.numeric(tempsum[3,2])/as.numeric(tempsum[4,2])
t0 = c(t0, sum(MZP$Volume..ESD.)/vol)
OmniResults[i+1,2] = sum(MZP$Volume..ESD.)/vol
}
OmniResults[1,2] = mean(t0)
mzpWO=c()
for (i in 4:6){
temp = read.table(paste(path, "Classif_data", paste(list_Omni[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=",")
MZP = temp[which(temp$Class=="MicroZP"),]
tempsum = as.matrix(read.table(paste(path, "Classif_summary", paste(sumlist_Omni[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=","))
vol = as.numeric(tempsum[3,2])/as.numeric(tempsum[4,2])
mzpWO = c(mzpWO, sum(MZP$Volume..ESD.)/vol)
OmniResults[i-2,3] = sum(MZP$Volume..ESD.)/vol
}
OmniResults[1,3] = mean(mzpWO)
mzpW=c()
for (i in 7:9){
temp = read.table(paste(path, "Classif_data", paste(list_Omni[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=",")
MZP = temp[which(temp$Class=="MicroZP"),]
tempsum = as.matrix(read.table(paste(path, "Classif_summary", paste(sumlist_Omni[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=","))
vol = as.numeric(tempsum[3,2])/as.numeric(tempsum[4,2])
mzpW = c(mzpW, sum(MZP$Volume..ESD.)/vol)
OmniResults[i-5,4] = sum(MZP$Volume..ESD.)/vol
}
OmniResults[1,4] = mean(mzpW)
OmniResults[1,5] = (OmniResults[1,3] - OmniResults[1,2])/OmniResults[1,1] -
(OmniResults[1,4] - OmniResults[1,2])/OmniResults[1,1]
mzpdata = as.data.frame(cbind(c(t0, mzpWO, mzpW), rep(c(1:3), each=3)))
colnames(mzpdata) = c("den", "treat")
mzp.mod = aov(den~as.factor(treat), data = mzpdata)
summary(mzp.mod)
ggplot(mzpdata, aes(x = as.factor(treat), y = den/100000)) +
geom_boxplot(fill = "grey80", colour = "blue") +
labs(x="", y="microzooplankton density (10^5 um3/ml)") +
scale_x_discrete(labels=c("T0","W/O mesozooplankton","W mesozooplankton"))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
ggplot(mzpdata, aes(x = as.factor(treat), y = den/100000)) +
geom_boxplot() +
labs(x="", y="microzooplankton density (10^5 um3/ml)") +
scale_x_discrete(labels=c("T0","W/O mesozooplankton","W mesozooplankton"))+
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18, margin=margin(0,20,0,0)),
axis.text=element_text(size=18))
plot(Diluresults[,5]~Diluresults[,1])
View(Diluresults)
ggplot(Diluresults, aes(dilution factor, growth rate_bioV))
colnames(Diluresults)
datlist_Dilu = read.table(paste(path, "Classif_data", paste("list_Dilu.csv", sep=""), sep="//"),header=F,fill=T,sep=",")
sumlist_Dilu = read.table(paste(path, "Classif_summary", paste("sumlist_Dilu.csv", sep=""), sep="//"),header=F,fill=T,sep=",")
Diluresults=matrix(0, 11, 13)
colnames(Diluresults)=c("df", "incubation time", "biovolumeT0(um3/ml)", "biovolumeT24(um3/ml)",
"net_u", "Max growth rate_bioV", "growth_P", "MZP grazing rate_bioV", "grazing_P",
"R2", "biovolumeT24 WO all ZP(um3/ml)", "biovolumeT24 W all ZP(um3/ml)", "all grazing_bioV")
Diluresults[1:2,1] = 1/5
Diluresults[3:4,1] = 2/5
Diluresults[5:6,1] = 3/5
Diluresults[7:8,1] = 4/5
Diluresults[9:11,1] = 1
Diluresults[1:11,2] = 1
t0=c()
for (i in 2:3){
temp = read.table(paste(path, "Classif_data", paste(datlist_Dilu[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=",")
phy=temp[which(temp$Class=="small20" | temp$Class=="Phyto"),]
tempsum = as.matrix(read.table(paste(path, "Classif_summary", paste(sumlist_Dilu[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=","))
vol = as.numeric(tempsum[3,2])/as.numeric(tempsum[4,2])
phyDen = sum(phy$Volume..ESD.)/vol
t0 = c(t0, phyDen)
}
T0=mean(t0)
Diluresults[1:2,3] = T0*1/5
Diluresults[3:4,3] = T0*2/5
Diluresults[5:6,3] = T0*3/5
Diluresults[7:8,3] = T0*4/5
Diluresults[9:11,3] = T0*1
for(i in 4:14){
temp = read.table(paste(path, "Classif_data", paste(datlist_Dilu[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=",")
phy=temp[which(temp$Class=="small20" | temp$Class=="Phyto"),]
tempsum = as.matrix(read.table(paste(path, "Classif_summary", paste(sumlist_Dilu[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=","))
vol = as.numeric(tempsum[3,2])/as.numeric(tempsum[4,2])
Diluresults[i-3,4] = sum(phy$Volume..ESD.)/vol
Diluresults[i-3,5] = (log(Diluresults[i-3,4]) - log(Diluresults[i-3,3]))/Diluresults[i-3,2]
}
dilulm = lm(Diluresults[,5]~Diluresults[,1])
Diluresults[1,6] = coef(dilulm)[1] # MAX growth rate
Diluresults[1,7] = summary(dilulm)$coefficients[1,4] # p value of MAX growth
Diluresults[1,8] = -coef(dilulm)[2] # grazing
Diluresults[1,9] = summary(dilulm)$coefficients[2,4] # P value of grazing
Diluresults[1,10] = (1-(deviance(dilulm)/(var(Diluresults[, 5])*(length(Diluresults[, 5])-1)))) # R2
Diluresults[1,11] = T0*exp(coef(dilulm)[1]*Diluresults[1,1])
phy_W_allzp=c()
for (i in 15:16){
temp = read.table(paste(path, "Classif_data", paste(datlist_Dilu[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=",")
phy=temp[which(temp$Class=="small20" | temp$Class=="Phyto"),]
tempsum = as.matrix(read.table(paste(path, "Classif_summary", paste(sumlist_Dilu[i,], ".csv", sep=""), sep="//")
, header=T, fill=T, sep=","))
vol = as.numeric(tempsum[3,2])/as.numeric(tempsum[4,2])
phy_W_allzp = c(phy_W_allzp, sum(phy$Volume..ESD.))/vol
}
Diluresults[1,12] = mean(phy_W_allzp)
Diluresults[1,13] = Diluresults[1,11] - Diluresults[1,12]
ggplot(Diluresults, aes(df, net_u)) +
geom_point()
Diluresults = as.data.frame(Diluresults)
ggplot(Diluresults, aes(df, net_u)) +
geom_point()
Diluresults = as.data.frame(Diluresults)
ggplot(Diluresults, aes(df, net_u)) +
geom_point(size=2) +
scale_color_gradient2(midpoint=(zmin.s+zmax.s)/2, low="blue", high="red", mid="green", name="total Z",
limits=c(zmin.s, zmax.s), guide = "colourbar")+
labs(x="dilution factor", y="net phytoplankton growth rate (/day)") +
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text(size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18),
axis.text=element_text(size=14))
Diluresults = as.data.frame(Diluresults)
ggplot(Diluresults, aes(df, net_u)) +
geom_point(size=2) +
labs(x="dilution factor", y="net phytoplankton growth rate (/day)") +
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text(size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18),
axis.text=element_text(size=14))
Diluresults = as.data.frame(Diluresults)
ggplot(Diluresults, aes(df, net_u)) +
geom_point(size=2) +
stat_smooth(method="lm", se=FALSE)
Diluresults = as.data.frame(Diluresults)
ggplot(Diluresults, aes(df, net_u)) +
geom_point(size=2) +
stat_smooth(method="lm", se=T)
Diluresults = as.data.frame(Diluresults)
ggplot(Diluresults, aes(df, net_u)) +
geom_point(size=2) +
geom_smooth(method="lm", se=T)
Diluresults = as.data.frame(Diluresults)
ggplot(Diluresults, aes(df, net_u)) +
geom_point(size=2) +
geom_smooth(method="lm", se=T)
Diluresults = as.data.frame(Diluresults)
ggplot(Diluresults, aes(df, net_u)) +
geom_point(size=2) +
geom_smooth(method="lm", se=T, linetype=dotted
)
Diluresults = as.data.frame(Diluresults)
ggplot(Diluresults, aes(df, net_u)) +
geom_point(size=2) +
geom_smooth(method="lm", se=T, linetype="dotted")
Diluresults = as.data.frame(Diluresults)
ggplot(Diluresults, aes(df, net_u)) +
geom_point(size=2) +
stat_smooth(method="lm", se=T, linetype="dashed") +
labs(x="dilution factor", y="net phytoplankton growth rate (/day)") +
theme_bw() +
theme(panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
legend.margin=unit(0, "cm"),
legend.key=element_rect(color="white", fill="white"),
legend.title=element_text(size=16),
legend.text=element_text(size=16),
axis.line=element_line(colour="black"),
axis.title=element_text(size=18),
axis.text=element_text(size=14))
