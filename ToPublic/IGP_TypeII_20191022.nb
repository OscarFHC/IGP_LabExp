(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    347746,       6587]
NotebookOptionsPosition[    345083,       6532]
NotebookOutlinePosition[    345426,       6547]
CellTagsIndexPosition[    345383,       6544]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Results of model with type II functional response", "Section",
 CellChangeTimes->{{3.7225792073874717`*^9, 
  3.7225792513205547`*^9}},ExpressionUUID->"390b4f92-903e-4439-9b5a-\
4fa961261121"],

Cell[CellGroupData[{

Cell["\<\
This first section is to try single parameter combination set\
\>", "Subsection",
 CellChangeTimes->{{3.7225792573478956`*^9, 
  3.722579279597886*^9}},ExpressionUUID->"745e81c9-16fd-4c0b-9b8d-\
0cfba270575d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", 
   RowBox[{"1.71641", "*", "0.15"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K1", "=", "8.13829"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", 
   RowBox[{"1.71641", "*", "0.15"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K2", "=", "8.13829"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e1", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", "0.38580"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", "=", "0.35959"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e2", "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "0.04"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Res1", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"r1", "*", 
        RowBox[{"Res1", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Res1", "[", "t", "]"}], "K1"]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"A", "*", "p", "*", 
           RowBox[{"Res1", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S1", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "*", 
           RowBox[{"Res1", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Res2", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"r2", "*", 
        RowBox[{"Res2", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Res2", "[", "t", "]"}], "K2"]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"A", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "*", 
           RowBox[{"Res2", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S1", "*", "p", "*", 
           RowBox[{"Res2", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"B", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"B", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{"M", "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S2", "*", "\[Alpha]", "*", 
           RowBox[{"Con", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"e1", "*", "S1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"e1", "*", "S1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"e2", "*", "S2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}], "-", 
       RowBox[{"d", "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Res1", "[", "0", "]"}], "\[Equal]", "8.13829"}], ",", " ", 
     RowBox[{
      RowBox[{"Res2", "[", "0", "]"}], "\[Equal]", "8.13829"}], ",", " ", 
     RowBox[{
      RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "0.1"}], ",", " ", 
     RowBox[{
      RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "0.1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"eqs", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "Res1", ",", "Res2", ",", " ", "Con", ",", " ", "Pred", ",", " ", "q"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Res1", "[", "t", "]"}], ",", " ", 
       RowBox[{"Res2", "[", "t", "]"}], ",", " ", 
       RowBox[{"Con", "[", "t", "]"}], ",", 
       RowBox[{"Pred", "[", "t", "]"}]}], "}"}], "/.", "s"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "8000", ",", "10000"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Resource1\>\"", ",", " ", "\"\<Resource2\>\"", ",", " ", 
      "\"\<Consumer\>\"", ",", " ", "\"\<Predator\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Res1", "[", "t", "]"}], "/.", "s"}], ",", " ", 
      RowBox[{
       RowBox[{"Res2", "[", "t", "]"}], "/.", "s"}], ",", " ", 
      RowBox[{
       RowBox[{"Con", "[", "t", "]"}], "/.", "s"}], ",", " ", 
      RowBox[{
       RowBox[{"Pred", "[", "t", "]"}], "/.", "s"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "9000", ",", " ", "10000", ",", " ", "1"}], 
     "}"}]}], "]"}], "//", "Mean"}]}], "Input",
 CellChangeTimes->{{3.717181025284259*^9, 3.717181118138817*^9}, {
   3.717181218215954*^9, 3.7171813167622886`*^9}, {3.717181398378661*^9, 
   3.7171816691056705`*^9}, {3.7171817107115126`*^9, 3.717181745161034*^9}, {
   3.7171817777236567`*^9, 3.717181866874895*^9}, {3.7171819189167013`*^9, 
   3.717182013787071*^9}, {3.7171820674667664`*^9, 3.7171821752267895`*^9}, {
   3.717182237714019*^9, 3.717182264066127*^9}, {3.71718230960942*^9, 
   3.717182521218413*^9}, {3.7171825935076094`*^9, 3.717182709665344*^9}, {
   3.717182945826183*^9, 3.7171829764909487`*^9}, {3.71718304079659*^9, 
   3.717183072993797*^9}, {3.71718316538284*^9, 3.717183184394414*^9}, {
   3.717183217057561*^9, 3.7171832337472625`*^9}, 3.717183274064032*^9, {
   3.717183335379603*^9, 3.717183404066572*^9}, {3.717183536185794*^9, 
   3.717183649987437*^9}, {3.7171837026276875`*^9, 3.7171838362104993`*^9}, {
   3.717183890057135*^9, 3.7171840843241606`*^9}, {3.7171841388274283`*^9, 
   3.717184236749412*^9}, {3.7171842806755676`*^9, 3.7171842826094103`*^9}, {
   3.717184344502861*^9, 3.7171843450927725`*^9}, {3.7171844215076466`*^9, 
   3.7171844218012342`*^9}, {3.717184532929681*^9, 3.7171845943656483`*^9}, {
   3.717184640145952*^9, 3.7171846404653845`*^9}, {3.717184675414962*^9, 
   3.7171849510142393`*^9}, {3.717184988417399*^9, 3.7171850255297832`*^9}, {
   3.717185570627535*^9, 3.717185570756548*^9}, {3.717185617512802*^9, 
   3.7171856177998915`*^9}, {3.7171860845366015`*^9, 
   3.7171861638330145`*^9}, {3.7171862240546284`*^9, 
   3.7171862309005747`*^9}, {3.717188947410328*^9, 3.717188962564954*^9}, {
   3.717189118576405*^9, 3.7171891189083223`*^9}, {3.717189160144075*^9, 
   3.7171891704592695`*^9}, {3.7171900922421846`*^9, 3.717190172690037*^9}, {
   3.7171902725919538`*^9, 3.7171903319802895`*^9}, {3.717190416020916*^9, 
   3.7171904237669*^9}, {3.717190494972172*^9, 3.7171905047866983`*^9}, {
   3.717190580472206*^9, 3.7171906130400753`*^9}, {3.7171906922771473`*^9, 
   3.717190710090454*^9}, {3.7171907969575777`*^9, 3.7171908470027623`*^9}, {
   3.7171909032909727`*^9, 3.717190945355277*^9}, {3.717192074929902*^9, 
   3.7171921775761228`*^9}, {3.7171922104799557`*^9, 
   3.7171922538239202`*^9}, {3.7171922989122257`*^9, 3.717192308540033*^9}, {
   3.7171923410868044`*^9, 3.717192538226968*^9}, {3.7171926374107046`*^9, 
   3.7171926756244726`*^9}, {3.718126411234793*^9, 3.718126462593651*^9}, 
   3.718467825658448*^9, 3.719752451527778*^9, {3.7197526209537144`*^9, 
   3.7197526216565866`*^9}, 3.719845244391306*^9, {3.719944507583151*^9, 
   3.7199445285177975`*^9}, {3.7225780476620426`*^9, 3.72257805834408*^9}, {
   3.722578230712858*^9, 3.722578282186466*^9}, {3.722578559906558*^9, 
   3.722578588631407*^9}, {3.7225789133433013`*^9, 3.7225789416033735`*^9}, {
   3.7225791194268847`*^9, 3.722579127732984*^9}, {3.7225791838108215`*^9, 
   3.722579184579377*^9}, {3.7225792872282567`*^9, 3.72257928767552*^9}, {
   3.723905085658146*^9, 3.723905089947155*^9}, {3.727702525373803*^9, 
   3.7277025333800373`*^9}, {3.734872592908353*^9, 3.7348725938719378`*^9}, {
   3.7348726937491837`*^9, 3.7348727408689437`*^9}, 3.7348731571962395`*^9, {
   3.7348733256685495`*^9, 3.7348733261067915`*^9}, {3.7348735816550145`*^9, 
   3.7348735827061377`*^9}, {3.7348738455086126`*^9, 
   3.7348738474579945`*^9}, {3.734873882196656*^9, 3.7348738863481116`*^9}, {
   3.7348739622587547`*^9, 3.7348739663709283`*^9}, {3.734875427283546*^9, 
   3.734875444255822*^9}, {3.734968927528287*^9, 3.7349689523009214`*^9}, {
   3.7807223736679325`*^9, 3.780722374360639*^9}, {3.7807225223698206`*^9, 
   3.7807225360092554`*^9}, {3.780722606522705*^9, 3.780722608084684*^9}, {
   3.7807227839393973`*^9, 3.780722812850998*^9}, {3.780722866999696*^9, 
   3.7807228853606806`*^9}, {3.780724797576403*^9, 3.7807248088755007`*^9}, {
   3.780724891446959*^9, 3.780724891946618*^9}, {3.780724977017332*^9, 
   3.7807249808320093`*^9}, {3.780725079312207*^9, 3.7807250824125934`*^9}, {
   3.780725154819293*^9, 3.780725158850137*^9}, {3.7807252112989902`*^9, 
   3.7807252170604906`*^9}, {3.7807253474855394`*^9, 
   3.7807253482514925`*^9}, {3.78072742428327*^9, 3.7807274331033745`*^9}, {
   3.7807284632717695`*^9, 3.780728464796747*^9}, {3.7807290957287183`*^9, 
   3.7807291364649863`*^9}, {3.7807291862781076`*^9, 
   3.7807291935710163`*^9}, {3.780730298939555*^9, 3.7807303789369726`*^9}, {
   3.7807304155626044`*^9, 3.780730520481914*^9}, {3.780731803043133*^9, 
   3.780731808670148*^9}, {3.7807318602732906`*^9, 3.7807318644093432`*^9}, {
   3.780731916326908*^9, 3.7807319194114757`*^9}, {3.7807319947351*^9, 
   3.7807320803595033`*^9}, {3.7807321627451735`*^9, 
   3.7807322257729387`*^9}, {3.780732383589053*^9, 3.7807324447357426`*^9}, {
   3.780732499222089*^9, 3.780732556434993*^9}, {3.78073274794977*^9, 
   3.7807327512183824`*^9}, {3.780732794381495*^9, 3.7807327947455397`*^9}, {
   3.780733033655046*^9, 3.780733049831984*^9}, {3.780733102409177*^9, 
   3.7807331032269735`*^9}, {3.780733135402999*^9, 3.7807332122348633`*^9}, {
   3.7807332471672864`*^9, 3.7807333353732023`*^9}, {3.780733377014264*^9, 
   3.780733380637847*^9}, {3.7807334160359964`*^9, 3.7807334198497534`*^9}, {
   3.7807335213246813`*^9, 3.7807335727125826`*^9}, {3.7807336263546762`*^9, 
   3.7807336337009096`*^9}, {3.780733733861151*^9, 3.780733791435714*^9}, {
   3.7807338644727335`*^9, 3.780733944150622*^9}, {3.7807341974209843`*^9, 
   3.780734224247505*^9}, {3.7807342704347053`*^9, 3.7807342937620635`*^9}, 
   3.780734333915462*^9, {3.7836914199325604`*^9, 3.783691435394223*^9}, {
   3.783691498511315*^9, 3.7836915188372293`*^9}, {3.783691554975135*^9, 
   3.783691555187559*^9}, {3.7836916101775627`*^9, 3.783691613008024*^9}, {
   3.7836916454533367`*^9, 3.7836917008130684`*^9}, {3.7836921095161734`*^9, 
   3.783692110258874*^9}, {3.783692143400987*^9, 3.7836921468742304`*^9}},
 CellLabel->
  "In[1357]:=",ExpressionUUID->"e689e6cf-5d68-4ebf-b321-3c8dd48ea804"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
4vSiO57ssnA2lIY7bTW9BukULNkuaFNyUxp8lZtaP6NH5DXWmu+TAQfqe6NK
BvbLXz4iKs9lYI3br4++6P6pIvFOGVngv815IZaJ+XVCVJErVxZ6TSdKd6A7
SuX8vYZkobZrtvAe2mKE16BpJQOKY/kfjqHVS2Q8PH0YkKYudsf0JgXZp59f
hjsMiHwjk34FvfRsae65JgZ4eMkld6C7N/dpHsN8tFlE+ZJ2Fj7vr85xDHWY
oPNg8dkwdJzlB5jjwASG5bLot+jEAUc1sWAm/PurGzrvFtZL55rM6UQmtF0w
OrofHXpSZfD+IyZUaa8//Bjtv825+d4bnMe1Zvt5b+Pzk3BwU8l3JlzwtXa1
QXPVVwIfmwkB0g5O6WgLW0fP51wscCp02fYXfbzZ5DxDnAWvoqW61t3BPO54
mRbEfLTC7tWxRHQOX9KCi5iP0lWPi/WiU7fkyzZhPhEd0c4k2Zh/R7zL//+9
SfDLTt0EtKrZix+7VmL+uppS3Y028Fi3tBfzzzYPK5e1d/H+icut/oJ+psc7
eAl94FRG8Xp8vYbAk+gudMLtltsWeL6kL94so3s4X3tOhghpsYDvrnLORfQI
9wHxJDUWHAluNO5Enyi+byukxIIWs3P1+vcpkFng/NF/LgvM54HHebRST1lQ
N+ah4p7hiQ60stFWxSDMQwtL753Xy8F8EGjgsgzz0IWzu5TPobWS6G45vF+T
zjKP29BJOXxRZr+Y0DAZ2nL6AQUfFouWXHjLhHXvlh9pRZ9ZIvHiSQUTcq91
8a54iPUVcG7cmMeE2LVbNZvRjnrLRe/GM2FYbM5z7VwKei4zJ2MimeD6/em2
k+jM4SV3W32YYBihErI0j4IqN6nzQpZM6KscrY7Ip8Chu7ngLjcTHC/luDSg
+xoGoh7+ZcDLPa6D6o8o2LzybMe6rwy4wVPDqkfX3RTkVcpjgI3JdQ/VQsyb
W463tdjj+n29ge/NYwo8KhuX5cXLwsLk8ST5Ygoq+Z97eQXKwkXPh5p+aMHp
tPSPO2TBU4hlO78E12dH5+/0RbIwf/OfzENPKAgaUlKIfywDkR/iiXQZBRtu
idVsrZaGcK312nvQobFVu9JypCHs7JBCPlowcy2z4II0hGx0mLEsx/35mLf+
RjtpCHg2v+JMBc6H45w86VYp8My9Y8hdifsR1r901V+S4CHqqLEV3etgLqf/
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
8B/4F7XK
          "]]}, Annotation[#, "Charting`Private`Tag$56143#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$56143#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9MGi/FU++CTrepOhEAV51TidmwOHidlPam6jIEEBwa0GL+F+5nOKPVgiI3Lo
52cJ4OFLY4r3oK98hmNtu8G+x6a87b6SkbA5ti73Cs7bBXEZuyhkhFcuFwaB
L05xHBmD3vHjqTpKAU+f9FDZqCEj0RCXRd5aGP+/rmE3n5ERrV8k2xncdD3z
162nZORv0m70Alz59Uy0AvSVeHnC5KbX8Lx0L5mnw+sMrkNpVuBS3dx9n+D9
gQFr2nlgZVF++s8XZCTRUzM4A+biP6HP9o6MWgzd4/TeELFfHtZjYnQyCi7Z
q3IXfDfWVkK3m4ykOL5/+w4+n/pQywF6q9U3JUK2jogdY+PeHM5MQTe+mcoG
gjMiJpofilCQjMG/Tx/Bt5qiZQu0KaitsDaQ5y2c/577lYWdoaBQtmtil8BK
+xZ/7gmhoK9fe64x1cP6+szIgO0jBYXrZPAdB2OvR+9xzlKQfP7Rd7lgt9uC
6Qf34OjW1bccug2w3q6wGbL54+glk7hVCnjsfvV3u1Icjd27nTYK5iO38rP2
48iCaMWf0gj3s7omlxN6K/xkrd0o+PHB3u0l0bBfTgrl6LwjYgIPF9vFGqiI
n3dcfBQc+XOLiLwc7CdlFpd0CHA/+Pep/T1HQzdRTVEyeH0g4JNGKg0NXQmV
1yHC/uywpp3zk4Z4/w15JIPLozlSdUXpyCzDrGrk/9eLX68pmMF5T67ypzaJ
iIlmdKtiXnRU8Y77YDK4VfDy19PpdDRgExwwAv5SRS8995KOdv/oe6PdBOvT
VOwxszbosbBDa0nglt7kO4IzdBTEXaY/AjZsk3wxyMxA5U93Rmi/h/NazWHv
V3sYqE/fvykJ3Bheq/RaAc67X7qYR8A5mfXSXLoMZOyGmWp/IGJXZOr85k0Z
KOBvUVwSeJval21J1gz0NG07YxjssJtSK2HPQN37fDi1P0JPvfrDM3WRgTgb
O6ySwEYRrhzS0F+G1nrpw2AtQZ10Tuiv6+MF7VpkIpb0y15nBPqr+OY2gSTw
iriOyQD01/ddnmeHwRP6QWXa0F87StpytCjwvLcVVUpAbxnoafUngpurVw5S
wT6fc/cOg5tWD7yyhd564rLFWQuH81tNCNc4uHPNrTgRXJubeDsbeoE9tWVi
CNwtU60dA72lJ3NQQYtKxLbfDjv0KoCBvOofeCaCSUYflpSgtx5b/asaAsc/
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
yqXwRKtdUj1cUHD53wT8MubnrHj00f8Bev2XpQ==
          "]]}, Annotation[#, "Charting`Private`Tag$56143#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwU23dczW8UB/AklaJoL0KptFBWKecJJSsNlIz2EBkNDVQUUUlbGtpFpIRC
dO9NEince9vr3m9DmpTZ8ju/v7zer9u99/t9vs9zzueE5Y6nLV14eXh4mvh5
eP7/833tA14eQiM37xfG6NQ0QUPqcqF09IEjv8LChprg86mkxfpGNKJNnwqf
s7gZWiRClvlsReftW+t7pBn67a22DGynkfw/yj3SP5th7t+/AZ920ohap/df
N81WMFi143umFY2cD5Kg7S5pBzJd8cdwP42Y7V7R59zaDts+ruFpR5Ouk2/i
eTtgl6+cqORBGklJ356pdaADbBgjmtdtaETELlNZeaoDfA4luJ89SiPv86w2
iJp2QdF1breRG41Y3zWkhFw5QK8oVRhGL9E0O54XyAHmSOihJHcaMZzwcRW4
yYFfFiqsweM0AnNcFaTKOUDkTtTEn8T7vRZ8fhEfFyz3GMzd4kkjk9bBB5Ol
uOAStJAMoJ9RQTJMNS5EUMXPDU7TiDrF02Gxhwuswh8P+s7SyLcz4cnbbnKh
v+PN15teNBJQa7JPPoMLf0Ruqeh708jwCX6H+IdcUPDWy4z2oZF1Jgp2Rz5w
QTtPqHOTL40sq5JWv9fGBaPmdtke9OKZ13zRA1xw3RwUv9GPRlanC+hLz6XA
33PfJy7aadm3BeWiFERmLFsY5U8jZ8GxpU+egpK5r69yAmhE3qFHul+Hgqr1
Ca8jAmnkzCnaglJDCthuLjzrz9OIbEz5xBxTCv7WCQRev0Ajr/85hS87TMGC
2ZYy3Ys04qhtoTDgRMHSNYUTnei9srtPrTxJwRrH82uuBdHIianI7WxvCrYm
7PHUCaaR5SbPNb4FUrC/ZklhB7r0qqmFzyUK3P6M9l8NwfVafTHvcDgFgep0
pbWXaGTD9xMlmVEURB2JtW9HP1M48sowloI70Y7pVy7TSGPSvHzNRAoe0XXb
VofSiN0n3wVuyRRUj/NJt6GLCvuU+lMoaFJusgoLoxEdTgs3O42CgYMFMdpX
aOTgvqquxHQKJq/517egJ0aOni5HL6jYKRR6lUZW/ria/Q9/XnFEbodWOI0o
2t3c5ppKgY7icGgz+irPzzEKv2+7xSv6pWs08mNR2AJPvJ6DodEzGtdpJNM3
vm8qhgL3p3b6TWiV/of5VyPx/r6s8QuJwPMxFejDd4WCG7K8T9QjaaR16sK5
kxcpyNzN+sZGn/QI63zqQ0HpxVyt4Cjcf4P8gi0eeH/Fvh6rbuB+Wdfh+96O
gmauSQELPW/6xrcwKwoGxWV6L0bjeYtUTPhnTMG08ddlajdppCTWgdLZSIGI
/4ujTHTnjFCTtCoFywojUy7E0MgpJdM/BZIUGItoS3yOpREL837lx6NcuHD4
j+CZOBpZo8kbmo77r/Ru1YxIPI3sulkWYfaGC0u3WX/Zk4D7LSy3dTqJC/tj
lncMoUWaWyz+XMTz0Dn0KSKRRjQ9NzWVOXHhl1/Ii9okGhH75n00VIMLmm92
FbvdopH9qu2zSQu54CgmmcufTCMfvj9UChjlQMODeze236aROfW/+ekPOJDP
ZdrTU9Enj/dvVuBAh3b6Abs0GnmX9+qK4VA3iF1w2zWLtoPIHL20bgiSmtY1
uEMjxkWPs3b/7QLr3SsFnmXi51tK7L2S0wmCT/2KivNwP1ztvPmrtQ228G7N
NsunkUqPmBThS23gs2/BrRH0+lZXj6dqbcD5mhmicRfrhZrr6OHAVni+9L1V
QSGN7ND7QXum3gLfTiSYmtynkVX3xZ2hrRlUnh8z7ENTLewvRyObIc5qQkWp
iEbSoi8K1Iw3gcc1hck7xTSy+XLR+5yWRshs7B81LMH1KtPYYH2rEZpWPOrp
QL+a2+i6zaYRtr4yrpcrpZHimqSwWQ4b/IUWVT1H09qXy3y5y4aH1m1lNo/x
+hcJlG/2ZoP8+KnMpCf4uv32xxaibLAEvcT1T2nE4GJQnTKXBdei5kaw0dS6
hvPhT1lQ2Vof5F1GI1pKKVPBUSz4oZLsLVaO531qSaS4KwvUfRzdH6HnOTXP
MdnKAnuG5lHzZzRi+ctzudxyFiSJ/LYYQ+93sdeK5WXBh8MMk+jnNEJ/ocR/
v58JPlfMl6i/oJF29bPRXfVMUCjunniDBqEJ2aRyJlS3nHrvUEEjd5nPrOtz
mODJO5s5g/40G6EZFMcEKc0bfrdfYv31vKGfFcqEygMKZutf0UjoWEuYlh8T
XIPvK39GS4vdS5TxZILIPf2pk5U0oqsTnXLQhQllzHefBWk08iRn4mSbHROO
TdvczUWLrVt9J/EIE/hVBoIInUZGuavv+h9mwsN9fgc60J6LfIS88fWDAfya
/gwaWaDQau+N75/NTuSVqML99WJ3gpszE/I/KLcWo40kP/EanmDCvl+Pi3e/
ppG/looZHG8m/FHcdvUL2rRaTw6CmJC5k3kktJpGmkbEhYwjmGDq7aCr+AbP
/wIVwe5bTPiW9m1+BTo9Trfxbz4TkmuCOQdrcH9vSve5jOtFvomUj6Mjhb4Y
ub5jQsw2LWf1Wnz/gwvav78xYZPnS/0adPxIXOglfhZwknYvdnyH9VB8LG35
EhasHTxeefs9jUjeanVy3ssCZky+zPx6GjlnorvH+RkLAl+sH8tF517/WSPQ
yIIVvdVvSAONZK/Pv3pgnAXeG3u8/D/SiMTiczk12myQ6FKs//IZz4v6WPO/
IjYc1Lh9qaYJ92PeIZ0AWiO0vokcDOXQCEdsduVh0RaIMfP7pcnF81j4Wa13
UwuYNjvyNqETn/2ojnVsgbIBPTm1Huz/C8SSrctaIE54YOeHPuyfgR/rLtq1
wi6L7fckhnA90n9Wjpa3wYuOabe8nzTysrubEXKxE866DHib/cLvezEka13Y
CWqjrODf6DkOz/aqN3dC0r/CWzv/0IhclYNs2Zou8F5x6O3IJI1o5Fn0dVJd
IPXEVlyeh062XpPbZKXIAS9/89un0ceMD1efXseBegMTxWr0384rWcd2ciDs
zVoNzzl0ojG6eVeBFwfGmwS30Xjp5O0OzvW4Kqxnf8u8nObRyTZDstDnABde
7r63vxQdaOYfuMuFC/fSUzfM4aeTht745Y0+XAgzCpm8g05e7X+UJ54Letd3
Xm4ToJOWJ4/NQuq4oNK+2XmVIJ1YRdvPf9/CBQktbRN/tHrQg8oXfVwY/SQm
JDWfTur5xtdHzHIhV6Yj1kKITow/dA0XaVAQ59HgnYm2TL+uO72eguCX9ANj
aB3ZufVcoMDWPk/2hjB+/1SzwnFLCnaU3ppqRwuVXQ+ah3lgHV9Ep/oCOpEf
ULqujXlA9O6prFr06dCKYVkv7D9/7UOlF9KJeOCls43+2J92W7m4ouNr/o6I
BmP/Sjfe8RRd5H3g+Jsw7G9jG1fxidDJ/CTh+9+vY/8zUhe2Qj+i2rfFRFOQ
Ea8wkoWeo3T9fFoc5oM+kY/f0DqzOS6Lk7C/bpzzCETp5PDdvfVfsT+7X5+I
i0azO/hNlmH/PtDe59OJPnuqVbkY+/tWrZaDmovoRDDqxuUY7P9rgt9vOo+m
9jaaVKKXfH4p9x6dJbpqqQ5aSKl4WmYxnSya23yjDz/vj09Wlxv68d2xoc+3
KeiriaeXoVPpYqe+4fUwZa5mzxOjk7V3L2jqx1NA9/AP24/WvrN31V28n6KX
Hq456PO/P9vq4v2miBw1HUcHTMWUsi9TcM1+n7qROJ0YeO9SvXKeAt9SowUx
6E8upjRDzFeOfOtGu9D7fMrSfh+nwPygyictCTr5UTpn3gPMB1vuypReQPum
NZ7Zv58CjUmhhDr0/k99iYM7KJDZM+MrJ0knM6TY212fAv47Y9bH0VUD75xq
cX/8GOPqPUPHevxRnKdAAdeILS8gRSdJD+06ZIUpeNn3rDsXrUuzT/1/vxVu
vM+YQG94fagcPnPh1vX0nK3SdHJH/7TGzQoueGldduOgL1sHf7gaxQW7YJ+d
q2XoZFTFtVPLmwt7PrtqBKFFrnzYkG7DBVXf3WPysvj9hrObOxS5kPZr6MRZ
tLwyW2XpPw4s8o8aqEF/XrfkzJxODkwG1nPPytGJW8tv+Q8JeN5C9rHfytNJ
SkBEhTnmg22838yXKNDJdK320q1J3fAsNKbeC53EoxJoAt2QdfVzzZIldCJ3
fV+TalQX+ERZPfdeSiffLLVfq0t1wteFP9a/Q3M/b7t8vqwDjt1MKF2qiOct
IXOOxcEO2BHXeP8d+oZhbZx1YjvIJVvfUVxOJ01dcOuIVBvclP0j54u23tT7
yOZZK/ClJt96j14yc5DhcLgVRtNbY3xX4P7hXzO7La8FGDmHQ+uU6Ngv8qfP
7GmGDSun/y1TphPzOJInPNUEhflpF86h7Z1TPevvN0HCvU7f5Svp5G5p3UpN
iSaYrxE0fg4dJPZI6XddIwQ9WHr6A/rT2FCJ8dVGcC+2c/dToZMOlQuCz3gb
oXMNT98H9JuX/HYz1ZgXSjMdVqjSiR3v2ZvzI9iw+SnXth7NGiDL7yuwoWTD
5eYVanSytPtHoPUgC5Sfrdjvj9Z3skv984IFIhVOe5VW0Ule2oHBjS4sCDXg
e++P1hQwjOduYcGfV7kmDejRV8G0JHkWnATj10rqdNK5nrfFZooJXHofBKBH
Q+SOqnZh/9169WUDms/MsPDfaya8f62ip6xBJw7Xopd0PmACGL99GoAOkjkx
8iyZCU9q3HQ+otMW+E9fD2fCKlPBYmVNOmn/kaJhHMCEO+/uagSijRUopU7M
C+K7d979iP5zojloK+aFax++Kq/UopPQJ6u+OGG/n9kbkRWIPiLWSrQxD3h9
VF/6Ca3wWK4pCvNCv3ldykptOjngPn7t+FEmHGaekD6PXrj6pXCRAxMEq0b5
PqLV05Us5N0xjzw6O75iNZ08LOg3uH+GCc5ZP7rPoff+vPF++3kmiMX61b9H
15mkvPyI108PmXyxdA2uh3vyZ90kJpw6c/GuF3rbGdEJG8wHCvY8STVo+VUq
x1Sf4frsCw2VW4v7f+Pud+F1TPAH/rOn0L76+VecOExQWX39WBW6JMP1Tu4v
JlwSuannoYPrV1fXx6vKAu3ZxaqV6PyNv3b9ISzoGEmQENOlk9UtPSFzj7Bg
U33K2HP00ZVnuiQTWdD/cknnwnV0smzXnNTpUhYkPMh874CeESvY+ewzC75F
5ufNX08n9JwvgX6L2VCwq/TwoQ1Y/wUW/GEks0Gq9t3bP5voxLXxfq9hZSNU
l+95ukcP+9fbw6+v9DaCV8HH7Ez0u94bfyWFm6DhauNFU318PpKee2dtmuCK
MVc3eTOd/Fy8Xvj67yb4UfUnY+MWOum7IpFnYtgCzFeq/ue20Ul50E4TvZ42
ENtcwKhGC9j32T8XbgfLZyrC4tvpRKVBcI3Vunb4XLryTjF69rjb5c9X2uFT
gVL1gDH2/7qF6dxVHdAQq7josCmdMLySrkj4doKIaMahe+jbs/9WpN3pBLOo
pTm/0YeMBGaX13ZC/dUlGxJ20kn/9PsxOfku+HBe/kj9Ljp5XRS43ZbeBe9c
pO/CXqwvu019NXg5INiT9P0G2o/3+t8xSQ6Y2ktt7kB/eFMlGruKA7W2kg3+
Zlg/VOt22JlzoGaf+I9H++jk+3SDy9dUDvDXxxnymNPJiasCE/secsBkl1i4
2f8WaT0TQufAm+2L5YbQXQ85Dzb0cqBaT5QoW9KJ4mIBAZoaF/jKo697oR3y
JDM263Fh+zoRFh09b7W3jddOLrzWXuh61IpOJtaxNQWOc6FKSTgqaT+dOGlt
d8nI5QJvVkRjL/r+eO3dV6Vc2LpUSFH3ANZz8+r6a3QuMGTml35EpwgWmSu2
c4G+UKBF0Brvn0poWrqAgvAX614eRTfwHNN1laHAzM0xsxT9aerjsc3KFHTQ
X7kfscH7Fa6LCsP+leM5tOcROqLegju+nQIPOdm1/IfoJFEjL6XHjIK/3j5/
i9Erncceb3HAfrwsu5PPlk42Bhx+koX981r9R8YhtN+c2gP+ZynYFziT9xDN
e8tAvxLzi5SqRsTcw3g+b56kncL80smyOWWDlnkoMRyG83xuyFXLIjQtoDBg
KoKCE1pPNvAeoZMnZmGfPtykQKeNK2eNTtRVmhnHPPD3qui/+2gTQ1W62y28
Hl3DHp6jWD9Xnw1RTsH753i8PYA+1VhquQLzitmN5PuF6OJ047m2mEck9Wtu
/kP/YMXzVaM7+ie89x/D9UnxSrBB58Yvt7mH5g3bkyGK7z9B9hnMoh8sL+nn
YF7RGbmwzMqOTi5d2TXxGvPK5O1Cvrton9++q0owXzFMWgam0Sb/Dn5Ou4Hr
MzGv3sKeTiByu9KlcFyfTN1H+einzsn794fg+ux1SJxCW+5+l7cQ16vzb3SA
uQOdMO2FzuaewuvJf3k0D21vmqy/yBmvx2rQaBLtViDHMLXB6+GRUdnnSCeS
1mqiJrtxfR4YC+WiJX673uAxxPU55D36B125XkfirBauD38Wc68T9quN1nNj
MZ+YPW4oy0ZL/gRzWyH8/gXqwXuc6UT6Y+dWNhfz73Nrpyz0HKvfYRcwP590
vbLjF/pkPn/Iq8dcmKRxRDNd6CTy3zGFuSG4P0+K/PiB9nbptRZw5sI1WYOW
na5YD0yLT+eYcEHK+1bmBFphdp5GiQAXOhXfhJm60Yls8aYU9X4O5H4Yd09H
Cx99nmD+mgO6KmZrd7jTieE2iSWvAzhg3spXlXKcTioW2qqteNQN0ld18sfQ
D5qUX9gc7oYuHfuI7R50UiDZtvz13G44GVVhOYr+eed9RtO+LrgOXj1GJ+lE
dcv+F92tHUAFpCnFon0mTp3jhnTA5ic1Thz01YbJzljVDhhRk+8N8qSTwmPK
Ztk+7WAhVt1bcQqfp9eVsP7FbVC4Z1RZ+DSd1NgXRdBftMLccBkXW/SH5RGN
Ic6t8HTqZN8ftMzCN+abK1pAtk+yf/1ZOtm+w+TXuH8zeCkSlSvo1AMm2501
m6HukIcrGx0SsvJrJrcJLjZU9nt5YV4re+b62aIJmgS/qlShe7NvLh5e0ASr
t4m7LfbGetBVL7vsfSNwy92+FKPvbY8QkNjdCPrjsar/0KIvfUS+izRCvOZL
NzOf//25YXkjG4yzFg0Mo8ceXDtT5M6GO+36aga+WF9513kt2cCG35Iu7pFo
fgMjS2F+NtyLeD6w6hyu5+Mhk5AiFvC+6VELQC8Y++QpcYUFh/8tPF6L7l/d
k0fsWPBEb9M9aT86GXGaEy5owIKFPo5fXdHR15xjTmF+cX0YtaoMHagdXek9
wwTaQNnxef6Yh88/fSxNMUFGiXtvPzrLxvqODc7rZ48KD+agm1IVJ3UeY7++
tV59Ai1g974nK4MJSkw7j60B+LzI1cw70Uy4sCCiMBYtdbqMd3kIExpNngxy
0IeF321S9GGC9qUu9TWBdPLMhGq94cGE8ArBE8Ho6j+S/PZOTOD81LnfgN5f
FRUcfowJemuODi05j/UiyOz5D8wvcR7hGp7oByF5f5PQQ7mPTrxEnz+yMeII
5pnt3e33hS/g89kW1qqDeSZdln/YFr3A43k6vxsTflmt0SxE6z0bFKg+xYR9
0bYn/6JVl5QPH/Rnwt3asAemF7Ff30v8WhjKhDlzi4dvoUGvOPp+DBNsDVs1
v6A3+ruEbsf7f+w313NDEJ34n5XMdShmwoJSraIr6HuHHZXH6ExwGbYeYaPr
GgMLWllMqFS5rKUcjPnlwLCFyAATpB0eeHqj7/MpcALxebxr5BldHEInkzvU
vzzVYMGRoIUZdujgivHLvdtYMKoiZ16ENnKuC/yH+UbMX7fU9BLOl/Laoa9j
WWAr53ou+DLOZ33aiqv42DB4rG52OAzzkARf1p25jXBBoKVY/wrWB6P7N86u
bASRkl77a+jrVvZ/UnY0gs6c2Sqlq7gegR7tHVGNEJizJtw2nE40Ui/Ny5Rr
AuGBRNHa61g/PBztNEkz3InJpktG0MmeoEx2ukszrNErPuuEll2yb0I3shn2
R9SyZtHvq/ymapuaIU1z6tb6KDxfe/u8Ak63gOZZ+2U50XQSFcoWc81vhb2T
6muD4rFe+tYLuKl1gCuz7wIT3ZNtU/d2fweEFGbWqiRgvR5ZXm1wqQNKbaXs
P6I9LgrZ2LZ1gEzFnJvLkujEYlqiUupGJ/SebxmuSsb67XN7au/3Lpi1it8k
fZtOttb8bD+8BOuZplnYCXRv5+yAwc5u2NXxWl4ihU5+S+7b4pDZDSUGxbtc
UunkbcPt929WcuDCzJW7Anfo5ErU120StRxIaiQ/DqO1PnjLWLRzoLhoCkrQ
8q+6luwc5QB19GyzTQZeT2vgU3txLphWHuEvzKSTWyQrbugQFxyTpC1n0Yek
xscrPbhw/hQz3TILn++JA0s3n+fCw6Wm66fQqvxGOStTuSARrOu8Jwf787ul
2pFNXNC2Hi3ORHuKmew92cuFHavvTf1AWx7P4+3/zoXA7qXx6bnYz27ujk/B
eTihvLXrO1ruIt/gJ2mc728mqJvk4fMv+vMmSYkCDghVjaIbtKZe1ehhv5V+
s3BbPl7/qPNeDcwr4t+CD91Cv2tTN5bAvKJZq583hN7LlbMPsqbAJPPnNyig
k2Y5y9Wu9hTY+ZcYJKCTfax+vnWnwN/8xLUBdEpN/puMMxTEqamwDe7SyfLs
8UNf/Si4z8NVjEWnTC7flBlEwUHX5Lfd6EbjYb/DYRTwfth3Wvse5sGBdTnR
1/H61wpIX0Tr54juWh9Ngc2tyso6tKdALHMX5gO+GV9XuUKcp4eNrN4nUlDs
qCVyHC1rIFL6MJkC29rep+Xo4eLZG+OYZ/i1047y36eTsjNRZjGYRx7FW807
gA5wrllxGfPKkb9CRTnoeLcHPFVoQbuq/ePoI9rR93eiH1cHTJMH2E+uZZSL
4fuPqa/NvYm+1CwQI4WfLxQzsLsLzbzmdsEM89TTnxkTmkV08ly/Kv8x5i37
w9ap59ELr4grAeaxBQyRbe/Rym09v7/i/Zar1AzKPMTzZHxOpSiUAseoi3Fu
6M8PBx9fukCByPg6/TK01pLWx/Y+FDy3HubyFeN8oVpoue0EBc6vcq5boUf5
fnSvwHy5SOnw2mx0PMu07c8BCiquibV+Q0+ujpyu3EmB6+i7ECjBeTPCcNdp
AwrE9l9Si0bH7y6Q4dOm4NXzTZ860OumTizzX0qBu+I3P41HuF/6VaNqFlIg
caVAMRBdtzWGZ2iKC7TBY29r0Zad0fe5A5hPyuqlXEsxj+4Uv6hHw3wuf6Xy
CXrccPHapLtc8Lxk4Dr3MebHOx2+L2O4UL3n/tNMtFnP1c0uR7lwutTx6Bh6
1o3F+mrEBTkZuXlbnmCe/eK0w2AlF872XNvfjr7D1XY7NMABhZ1ketVTOjF/
V6mmjee39uHvHH/0JveLs735HFga6DohWUYnLwTOj8g4cODDou1x5uV0Mv+s
R6RvfDf4nZvSy0BH/hVxOrOtG1Z0lHJH0MdP2EV9xfoSULB8beQzzBciMf2t
u7pAZcu/j2+e4zwWtn11+rcOuHTixcLNL/F+pecdzNVqgyc8y8xj0Pwu0x25
H1uhP/FKXB+6bvPgknyvVthDN5eOeYX782Dpgf0vW0Ba8suyvko6+VL38ke0
YzPsKtzjpE+jk5jE7PbPi5rhApTm3USvzP7dvJbRBNTxi+r6dDrRTA0KKlZr
gqJK8XU3GdgPn6aQBZKNwLEKONeLFvY5UFTSxAaxr13P9KroZKmHkoxEKhv8
xQsNe9GbfG7b79Vkw/27oiF6r+nEWuVnu/5fFnQZ+lZFo+vglZPUOxZscyc7
9Kpx/8s0c8vPsuDcTN71aLT37y1rI3ax4G6c8IcetEDMRVEnFRa0q54V0XuD
8/PkstDt81gg8qrJPBrtbucepv2FCUaWBvE96EN5A1aKH5jg8yWrcVMNrufM
iS6xJ0zIvyAgE40O/yKwZC7249bFnrY9aOvt5p1forAfFzDTNr2lk3Qiml52
kQlbDDZ130ALl86ZcjyL+eZz+vIedMJ8b8MuzAe5rnOdN9XivKbzekAa80Pz
lHv+DfQVtbz0mSNMEIptGKDQpb6CxucxfxiorNPY9I5O/iU5BZzH109X3Pa8
gQ6kBE58sWNCtvm/Ygr9JIXuXuDCBHaf8/jG93Rit3Doa7YnEwTOv193A71m
P51L92OC/qI1fhR60cyXH18wf3jmJT7fWEcnVsV3S2ZjmZCpPzUVhc5cw6oa
ymIC86P9Fgr9SEdILQnz2TyXmpCNH7D+Zu+36KthwqZJjddR6Ir4wb2MdiZ4
3IydR6EHUz58FRtnwqfnRyKi6rGe54+ZVq5gwdx9VR+46GU8n/6OYH7c0Ksq
urGBTtoMjQ3BhgWpIhPxXLT6yl3CM5g3GnJsmjZ8xO+v2HBsRwkLePQqZaLQ
9pL73536iHnT6Xr6hk90IsgvOCK3iA1rnykWRH6mk8tW9ezQ22xIq3Cz7UZX
1py9nf2SDYK04oW6THy/6/Lnmzls4LwBnzb038F7W16pNUIMy85oFZtOborE
PPr/9y+joxntNU10crRnPKnwVxPcX7lsEW8H5rOh4qVnrreC1Cr31wfQzguL
r1Q9boXLmiXn7qH3mH7nrOtqBVtd0mneSSd8N5qe+uu2gZCRfWFGF53cXpzj
cq67DdyPZG435GIe4a6PbDLogJXxywL8++kkjbwbzuHB86/scq0GPe/KjIbT
qm5Y9vTeLYkvuH/75mROWnSDQrNOWQn6ZNqVlIzsbhCTN54YGMC8PxB5+s4y
DvDkHPc8NIT1xXxw24dyDszqPrxQgJ48MnCS+Y4DU9XjkT/RGwuC0zIwX/zq
P18YO4zr01LYcXWWAyPq0V/ejWCedN/lYYn1b7CC+Ut6FM+D34fBQxZcGNgj
ze+KnmQ9spV14ELvqUxl3jE6GVqtafU8mAttpaUO+t/oxEFRUtf8ORdatv0+
cw0tSI26fa3hQhN7c0gT+pWDepYWmwuff1Xf8fpOJ343XHJLRrjQED7/IR3t
c1JafvgvFz7ImL0SGacTjmXU17p5FNTqN7cXos88z9p1Fuffmjr5oT/oqx3D
grqqFLw+Yj9pMoH5rsfsTOxaCiqDvsr0oNfn5HnIG1PwUlRbbe0POrnbWbFt
K+aNF5leG4PRtddMdk4fxP5ZNXVA/ifWj/lHSpa6UVBqRVyOoxuf5Qpewnm+
pDfMpxz9M9z0nIcvBQ9934XO+4X5IsfLt/k8BQ/4ReKt0A1JmruqL1FQeMsy
Owtdftv/n2Y4BQVqtx6Noc9V3HBZGEXhfN5ON/xNJ6dTGIscYijI3rXsUyS6
aPtfG6UECjLbnbtb0dWfog/tw/5+5+S9UdU/mK/SB79336YgbWZkxhf9nZZc
8zGVgtvROgur0dl+i7bJYn5IUvRTEPuLz5urlFaGTiip0LBHX59QZGWh44x4
Nj9Ec2wyn7MxX8Qwt++aRucny/4yxc+TjN/4w3wS+3VddvpLzDcpVup38tCX
lqpwAPOPosQS00l0pa2B6nu8/ly26LjZFOaFq21vLCMpWJXIm5aDXpCzbu5n
zFsPD/w0/oP+w792lcFFCtZJDYztmcb6tLcpLvL/fNHUdjsL/SZs7osyDwq2
3Krf9gtdcyvJ9KkdBdXW9JFdMzh/tkmuCraiYKfM41sZ6C8JtFsLTChoaMkz
+oHOaeCsO7iRAqvbyUOms3TC0AmVPoD7o+VQZGI6ukTsAYdXigKq7cxXk3+Y
35VbmPvHuOCW6hSfiuYp2ZE91sqF4cMHDb+hI7TGq1Vec+FXx+bY2zwMUnz6
q7pDLObrdO3No+jjepPXHM9xgefY8r6tcxiktzjpyjTmcaFufr1hNJgL9s1d
woWbGX8pwssg55z6tAKmOSBhPxyViB48bjr/VhvmBe5nzpa5DGJzmF9lOI4D
uj1p12L5GERYz8rXerAbnuXc1OlH/zmU91sqqRu2OF/u0J/HIBcVLsydgG4w
7XNb04vWWZRYkBrdBUe+6LRsEGAQzxVLvrspdELYUK1qx3wGaerq2MlWaoP5
Dyo+rxFikDc3+nwTaloh+uTD81fQzK0eggc9WiF5JP6jtjCDXNp65tTlpy1Q
NHbM79ICBjFbs0Eo8Vgz6JRYLG9CV5d+D7+0sBmendlep74Qryc4/FpYZRNU
fV+lyEbzNkgW6qg2QdPEjxoVUQY5KJWRGol5YcSo94MvOm7DpunsdjbwxbCY
1Wivqh/Gkrls0NEs7XJcxCD24eTdegM27AzM6n2EvrJOedtvYTbY18YM8ixm
kEbhD5L6XSyIdj796w76hXyAh10EC/JKj02PoFd+3MC315kFL3nMeA3FGGRe
SI8kk7CAZWYoGIU2nlei/V2RBYNpmiLt6AL1Q8H357BgzpC8hLo4gwzzZIzz
9DNBRk9YLgD91C+OPYb5QTt8UrEWffn7WV7fMiYYN35dKS2B639J6GNkNhOO
KLVquKKb7/1la2G/9Tpbu/YpesbeEawuM+E6rXwjnySDePRkho37Yj9eWGBo
hb4sMSed5yQTyg8nbctG729NFjzrzISGe1d2fkcPSrW2r8c80PfbZx+RYpDJ
ZTgMYF6YNnY+cBO9nj/8VRDmCfEEq8NdaN3TyvxcfF2d2uqgJc0gIZkBvvvt
MQ+t0XG7gL5fNLKgBvOETdByzzo0+/rlLSswT5z+sMhbToZBNqQZyB44x4Sr
cjwBx9HbPeee3nWJCenuY0HP0MrXLkyP3GDCk7KuMAFZBnkgU35DI40JdXwN
EQfRK008FMfuM4GyfBWThz4injWt/IoJi8ZS07bJ4Xowf/Wn9DBB1TAyOw6d
W9P/9ekfzFeRgXe56HfHc3f8FWHBSdVDT4LlGeRjecrM0y0sCPU1fdGAnnHo
TxLFPJHyeiN9iQKDePd8ELX0YkGtndSHCvTc7LhltvdYoJzM6vm9hEG65ww6
yS1jw+b+qq8mS3F/tn7fcAjYYLmudCwRXWa4nFKyY0PIp5gpXUUG2bv15En9
TDZ0CJqJn1nGIHOsnrXeUm2E+IDarQMrGERcOLGzz7gJdH679BgqMcjrpIfL
+zyb4JPP3LB4tHcOe/3ypCZYcGbLmy3KeD03Cry2fmmCq65PdiSuZBCR+ouh
HZHNEGCVuWerGoNYn7tUw+poATst/4NpWgzyucMwNC25HWYLJX9/R18KeFLk
8KYd0tQe39qhzSAm340OG423Q4vSaMs4+luBwpedezrAUs758M41DDLye2Kz
yZxOMBYwt/+lwyD8Js6pBie7oDdshGePLoMcfrNb1ul2F1zmjczKQou/zbQ9
WdMFlTNvqD3rGMQwhAQsWtYNm35sdslZzyC31nxr//2pGzS4qh7mm/C8Ou7f
0xfLAd76gvO56GyH1pnXeRxoe6Z64w+6T1LvqstzDlyLUS3J1GOQHwMxzv3d
HOgH1V/f9BnEKtJ0ZfIqLlRqFAgYb2aQlEO6lPFmLiRKq8reRh9wIe+z93Bh
+5iKgZEBg9wRSb3ocIoL2XdULscaMkihfETisyIuBEbkx/ehX/u9ts57yQWL
cyp5eltwvx1mjK6pw/psplLLRe9tFExS+MKFZr381vXAIJU0hRv+P7jwcKXK
0HW03cRjhRNzKDg6s1JEhzDI2WJXWWE57Fdf8xSvohcxrBser8R5unHl2jb0
PcuMjK9rME88WLn/shGe/y/fHnzHvBGXnOfShHZ5uZqnch8Fx8NW+qlvZZDW
JRaxwocokDmyMoWJTmlXslbAfvdtR959lW3YP06y2pvPUvBWd+WrQDTHfZ3u
vADs/4p5DQ3onIYHnIxgCs4Jr+Ss2M4g9YqFfDlXKDD7nfv9HLrZdcX1+dh/
V/Yoz61DJ+7TGavH+X+6IVdC0ZhBTgx2BQ/GU8B+oazijZ6yvSl7CPPFg/zc
jW/R86d6HcWxpITGKe+UN8H9YTs39f/fP9gG5dqeRi8YH6vbh/lBx0P55Gv0
ev2nma/R8w/mXpTegfWm9V2cK5pjpHzzBHpp7BzWGnz/M63cTBq6ffrgUTn8
/JuyyqXipljvPsbOyuH3u87Lfe2Gnjpkc1Qdr2/Ld6XGCnTeI08+Eo15pDOn
X3Qng2xt+uFpdY2C4VqlP07o8FNPRI9g3qp+kjP/Gbr+r5m7Ba5XaqaS/IJd
2D90HRdqnKHAKypH0x6t0XX+BceFgl3+SlueoOcGTdp72FKwwjlnn+BuXJ+G
+Zvoeyn4u0/J4cj/ltv8sQ0o+LQ5x6sEnTMipPgYn/ddVaUwvj0MQtSjU7Yu
oyBEPCfRBu3Uf3prqAgF1v9WFDxA/9JOfnF6igv8zSve79+L9fXNPBP9z1w4
bZ6xMQftKVKyu7AC8/I7+bzv6BKHxaH9uVy4/1IiJNoM95txxTG6NxckNsSO
dKAvOs6/fQzzRVDxwsMa+xjE77X7tveGXDDP5t9Qi77cs2yV5FwuvJAPzZEy
x/4yMZg53cMBpcR/i1zQ+g/DRxmvMf+H/xmaY8Eg6xRyXXhDOJDqOZi12RLP
wwW9yxUt3cD3xVU0Al345ZekXUQ3nLLvudCCnnOmUsVdvxuIVYe1rxWDqI1E
BqskdUH/poaFxfvxfG89UC5GOmENX2nACmsGcSx8UtQa1Aa3L2p/OYO+PVBu
+Ui1DXh/F+6nob1kk8u3fG6Fxq85q4/YMEi8d149n2orBH5M7Es8xCAt7N7S
J5xm6DEVs+pF31Mx+fw8rhn2VEXTdWwZJFZ+foijSTMoPg1P/YieKXpg8ae0
CapTAizmH2GQmuysW0dzGkFL4lelNdq78eHNR86NkHTDSzMfXZI1mKOP8+Dx
kBMC244yyIptm7QVy9jA/PvFJxY9XXq0NjaEDQbezlQ3euDess9ue9kg4nr0
1YVjuP++5Bk4jrLAv7tVvQ799EG0eVIVC7g2B5Nl7bA/qvrJ7b3Ngl1M5jx3
9F26zbdI7E9Pdu/zLkOvy3f+ftCMBUve1HH47LEfrbZXfqTJgqtbTM2s0BXh
5cZpC1nwrby6IgtdKtVYJPOdCYfWGq36ht5j+8pzZTMTdrWdWGvswCABjpEe
fdhf9UOT9FLQUqZNHzILmKChyTAaQ9ddLTxhnsAEhcahndsdGWT5VwZrMJQJ
C4KkLG+jE9fBBWfs9zMqRrajaJMX4Z+LTzBh9OMJx21OeP2NM1teOTGhyz/J
Ixn9p1tk5/ljTPi4nOE1gm5mG7xpwvxBfz8UuNWZQbKuXp1XgS7xlgq9hQ49
PDNHDH8+S8Eochit7L8sqdqRCXFvTsQbueDPg9zrF8eZcPlUUmoS2tzMpr/d
iwne0oycIXSNqe+4SBATnOlD94krg5wxcijSj2TCgeNSTxLRSZzgXuMUJpiI
Gb0cROutmEmRxvyxoeJENbjhfoml69/C9VF1TvqQgO55P/LswWfMdwsZ7K/o
jUIrSskXJgiWDXVscWcQh5GF4QazTBgUMBoZQJf5s+9JrmFBe8mJn4bHGeRh
ksK697tY8OFQ0kwceodonGqiKwuK7g8tNPRgELlvx8NVs1hwZl+SduwJ3B+L
Tx0Kw/zh8Ie+oR89SOYZaWzF/JE1tGXzSQYJK+zd4O3MBt0Jsq8PXdAcXVRR
yIZfSUOn9U4xSEbDS1cNw0Y430Uecc8wiAxXW93CG/OE55CuzjnME9F7TqUJ
toJgrljyJbS9aLya45pWiGzTm/6EnrxVaGxs0woxO65Vn/ZjkGMTpW8d77ZC
yvKVB4r8cT/o8Yv92tkGxY3HzqmdZ5BIYcmUnXGYLwyZz5aGMMipgzq9smu7
wNbnr8Ip9HnJC8rih7ugs3DZpVfo3ddzcv+GdQElfXrnkUsM8lwzgFxs6YKR
78Jtty8ziPrEYEfXxW7gzTeekriC9W/35UjuMQ6EdZy0c0bfG/h5QtOLAwLi
Ca8fowMv2GvvuMKBBSFUpOVVrF/DRu+pQg5I2QYrxIQziFtazQavCQ5oiDw3
FI7A+exwaKCCPxf6S6vEDqFbDR4/lgzHvGD94Us+OtbqZTQjkQtyWd2xWyMZ
RLXyTIt6KRcE1/H3B0Rh3jfg5EtjPqhuEa14i1bxS8gPmOBC8EXZGMkbDLIt
383r0j+cB2s09R+hI6HK4TzOk32HrKIHovF+xWjvcLqEzNkjThtuYn6yuZlr
uBMjeo7rpjD0bIgDXcsS+7/pmYVM9JelBwNLsP+whwMoxRgGWfypYt5rR5zH
Y0PLPdGmN/mPO2I+2L3hRlQF+sj91/6RmA+qgjM3WMdiP4xlj5wMoiBIuVA4
D237dv+vJThv6717zBlHH8xQ7N95nYIfnq+ekjjMY7m2ocM3KCgRexsRjb79
/JXZnDgKTpZ/sutA7273SAjF+V7tSNs69XgGoX3f5nAK5/9ent75/ui5yh+u
vsT+nZE30vUGvU3YLsv9/3yw6/dj8QSshxIWIp7Y/6XGeK47oEtiff/9nw+Y
8ULHitEB24+fcENHb5LQnUHvlBpWssD37+pcIrg7kUFi4u3qAvHz511W7UxG
f/kS3df5/78XUVlb2o/ukWps8k6g4EKdfvi6JJz30mpH1sdQsOnM9iOX0f9e
qHoswfwzIWG29hM6c2DuFSXMRw+fW/MvvYX1TPJ6gBGul8cxh/YT6NjeHdFn
zlGgMvdEyXO0Co+QYqEnPsECnysCyQzyiLaq4IsT5q89QbYH0Mq6rh9WYH47
9D18dQ56S+W94wcwL0gkxfJ9R+tb9KUHEMwL+qmtW27jeY/sY13XoSCqO/dh
FHpMi1kfokSBadjD0DZ0PW36xSFxCvhWPbNRS8HvL3unv4iXAlo9Q+scuid1
7HjmGBc2SDc2L05lEHllx81Gb7kwXtH1wA79aW3F4r2PuFBkP3CpCL1Eu9xw
VQoXlAunNHamMcjNaZlec3cucMzmzbmFLrI5+jh9LxfSJkSaetEV1zhJr9Zy
QdxwRUhI+v/zvLh66C8OHFzcNsZGN4m27LvA5kBKX6zdqjvYHw6kNak94sCy
6DnARIeNT62rcuWAZjdnRimTQd7o8XLvXuuG7Zcyzr/NxjzXeii4pqQDwg9Y
D8nn4P2UKx99Y9EB71eJHj6DTtLOPBWC84s5M0hfNhfnnUTtrG+67Tg/H/vr
kccgDc0SUZMVrZDxW/I4De3Z6KEnb98KVF19i3g+1rvpysbj81rB3cfw2Uu0
/EtZtub+FvB5o+Anchfr5StRcUn+Zii/ze53RBf0WkeElDfBpGfUwXJ0/iNB
C/kTTRAiNb3e/h7mhwMdjvqtjfB68HHeE/T4zlHrgfhG4KedkJxfiOdhTGOF
rEUjRLm1/3iEXrHrj4MJiw0fN8c7899nELqkx3KHZDaILdrNtkWfclnttNme
DQd6ebcXo6e3/9DiqrMh+dmLx3MfYP/qnNl59A/2kygvJRv05MHijc9rWbDU
QT3+Adq5PkNxJpUFefNTvA4UMUh0TszRg7tZMNBpQd1D5yStTvNRZYFm6XzL
WfSNzBmvKH4WnL7KYFg+xPnD+bPgnQEmlNoGrC1Aq6VIZBTUM+Gn9tqsKbTh
7byzeU+ZsGnu10XmxXg+Rg2qYzOZcL45MyQXreXxmOYczYTK+zbf/qC/d8z6
SgQzYU7IIvu9JQzimhkznID9efv+2o9ZaKOSAPUWdyaEq4XAL7Q0kbVocGDC
++mNxbse4Xxh4v/S5SgTFn4eW5qB9ljzQSMS84F5XkH0BNpy/orvq44wcb62
m91RivVhQnG5ph0TmvZKn0pDH098yAp0ZsL94jq9IXRyBrfsJOaTkMUh8/Qf
M8izCzyvN/hgHvBe9/ka+qZTD88bzAvqjQNpzegRtt/huZgX/m1Id1d5gvu9
zru6M5kJ7GSLdb5oQcGDNuQuE+5OzuOpRku1dARIP2fCxSMv6sSe4vN28x/a
V8cEy8pTtxzQZ159HmzqYoLKMiWnEvSTTxkmKRNM+NQTObm3jEG2PzXdGLMM
n58xqUlD93ZnJWVtYkFgwY/YIfSWn2sHHliwQPnE0VXXyzGfjd55f+4qC/5+
WPyzGb1qwVCbbDYLGrRr6CrPGGTiRFFLcCXmzXFtm2r0lfsq9i5/MX8E8IT/
e47zQOn40TPn2OB9LafX9yX2Zx/fvHVXG8F00LqkGp0jm6pddq8RFPYsuCD+
CvN+W8TyoPpGqBH1FX+Edpyn9O2TZBPI3TLZOlyJ9c/OnWf5vSaoyvua4cjA
+T6vyl2zpRkWvV59eF8NzlMfe+/9NmuDk/vjGLno3c8DRV8GtkFt3w/VSfRR
tld+Zn4bXBJ88SP3LZ7/4ua62tk2GN+7PXqylkHa2mmloSXt0Nhiw8irw+dd
fH5RlEwnzpcVqlPo9sPqx5nGnRA9tSTa/AODKFj8MFjq3QkmS3tsp9Beb34K
ltd3wjMnzx/mDThv7Xux1vtyF6SMXlKd/sQgKw9TdZf7uuFXcO8Ni8+YF3oF
158U5IDV4h0/8tHauSqNo0swX6xbwLBg4vyqse7HKVMOXAxIsi1gYT7fmjmH
L5UDbUJ/6dNoSdnOEqliDmxIO6xqyWaQXUbcbwNVHBitXPZjGq135zc/4ysH
7Pnu37BsYhD+Kp+fP3W58DJx4Y8C9O9CZ/4KYy7IqJ6xnUFzO67v17Dmwued
61XvNuP1O7NpfAFc2HqTRp9pYRAh8xedx55x4c6yFapWrThvxmxy/L/+Tz0K
u3EXzbP+wYrKRi48Ye+0tWpjENHzZeyL37mwUo49cbedQVhfxPmbsd+8kJWt
m0aL2fPwyaymwFz2WLZ5B4P4uH0M69WjIFBmwPwPul8pP+f/f4+xSEZLbU8n
g9y57i/mZU1BnrTXvwy0ZPPdNDN77G9S00U7urA/hybqnMP52lXK6Eoq+kDI
y9XP/SiYkrx6ZAxt1LBx5QnstzGSdbrbuhlkWUuydTjmExXJRcK30PNyTCoF
IyiokDhADaLF5bLmDOK8by6R8nwLh0FSBt8HroynoF+8OyYOHVr0ZPXTJArO
iyu796ONvRVa427j9YofB30ugzyeE95ZnkpBvthDqWj0oZ86x5Zg3tgsNjHC
RTuMl6m9RH9avOnNegr3d5UQKwrtuvhi2nV0oERXfjjmkalFVd6d6N7VvYxc
zCMxiwR2r+3BfpYyy9+BeURl0Z4VV9DqjIJNKxP+//ul2L8taHmTt7/8blJg
Idr0SbOXQfZfZn+qw/zVLyJ/NwRN7d+7VyYU84uIfTAbXXw0d3L/eQoWi+Qd
VOvDn5c9ey7AC69/4aDWBbTEz+vhF90pMFi4et4ntHG/pPyhoxR8XuDTodSP
+Y1/2pPPAq9/wfPHfmjrBVozftsomBaejahDKyxNrnqwjoJY4W2Oil8Y5H6o
mXCaMl6/8DU9b3Tm2UtNgPnjpVD9ordo650PouJ48PqFxAbkBvA86k9cuDnM
hQvz05Kq0I/vrHLzp3NBbD7XU+org3RMeHw+dpcLBYIqxh5o+vxfkb3RXGAK
lEwsHsTn1fnrej3ubzeBn+9d0IqBG/J09bkwza+f/Rzdvk94ZIs8F1T5q80d
hhiET+uFnk0rB17Om6/2FH342LI47zIOWM4z+yc4jP1XcyrRLI4DF/haikrQ
uk36HE8TDjB5h4V4RrGeK8z4JGzrhov/xN/c+cYgjKNOqV3HOyA36sCfYfTf
bo+1JYs74IPsLY3N37H+FJxe6/y8HeTWycU1o2PejsSIzm+HMvdldosmGOSl
qfX2W0Wt0PnTIe4Yuj2gYTID5ye+0Jw3D9BSfF1PHvK1glW6iubOH9i/l+/c
csi+Bb591vx76SfuH7+mc8NqzSBtd0rzE1pUJ5hHr7sJtgwX2y39hf183roE
21tNcINft+YF+pKgRrT7wiZ4Eu/zV/A39pc6HZpfXSN0LCvTtEZ/NBUsyops
BPXNevET6GtHD9YFiTWCRW1gjdEfnJ+KzIT3tLLB/8DLvzfRN4siVN2z2fD2
NNhr/sV6paTxvmwzG0anQ+ID0fK6Wb1TwmyQiqiqqUX/3b1L+mkXC5xzjbVc
JhmkxVjt7J1IFkSuDbd/jK7TGvRudWFBaWVt/JwpPC+Zc3jubGVB226ht/vQ
d553PRpdzoI5rbsn09FDQh1vP8xlgZrrDa1hdIvGVo1NmEfMJxrs9acZJP3q
sN/qj0zwC1mUcA39rij7XvEzJtxZaPm2Cf1ts5XLk1wmvEmJn1SewX7j/vzJ
xngmDKs2anmjpRq+L9IJY4LEUykHBrq0VC4qxY8Jm7faJIjOYp5wOp3p6skE
x4+33x5F66htdohwYULEkfbJ++ikozVRfzBfPPqqoD2JVvhpfycb80fLuWMO
pv8Y5Krgi/7//3/sv7mZCUloC6OQcg98XSWW+7YXfVxiyVVXfL/ZUqUpHZ4q
sio4doEt5hPf+87al9B3ir+f1cF8krYp3+Ej2kvZy7fDmwnVb74kLJlTRTKF
vyZsx3wyZLmq9gT69rS3tnUEE8Q4HlPP0QJ7HAt4MJ/oeT7QFuStIhlvM69r
FTDBfnLE4SBaiF2d876cCcUSZ2vH0b5hqnlCnZiXskqnyNwq8rFNzfz6dybM
av/QvonelE+6VguwYM9Ov0QNviryla+hqnQ9CybnuTmFoH9V2N+MNWfBvaqD
axvRglFHTl06yQJ+gw31QfOqiBjdnG9fAQsY2j/5mPxVZGX0UPI3FTZskPD2
8Z9fRXqvnjmfsK0R+j45bq1HXysdlVt7vBESblguWiFURaKC47+r3WyE7/w6
D+rQQk0xhuIdjfDg77eepQuqSPOdmFumAU2wvPuU1RuRKqKSI+K2uLIZPqUe
Wy4nWkW8437e9vrSDEE2ZmOn0B97X5VPLmqBjs9akTKLqkj2VxmL884tkFQ9
XHVicRU5H6PlqrqwFRYUeuiISeDrNvZfap3b4JeP62I72SpSE5PPFVfvhA00
y80P0a/M2gRF9neC33xwmUGr7K4dFA7qhD/p0s9T5aqIbJbLWX5mJ0zW1Nq3
yFcR5lBcSUJAF8zKaJRYLK0iL33E3vu+7oYtTtJtmehz4llDrUPdEFw0l+8b
Oq5G/+PsfA7wbO2wjlbE531x6nP5Wg7wnrjx7/2yKrK3QtpNL5gD/K/GzLYr
VZE808e1rou4YCLQ4R+PfrCt0tp3ORfCLWqzKfSCFrIUdLgg2J/5K0S5ihjF
FrCmLbkgJGp559VKfP8mBc5oDBd2HdpSu0ClirxNS2fkZnAhMkd9/DB6y5bs
FoGHXFiwaa7JJNohq3nBx3dcEHF4MrJBrYpYBdyK15nhgtn9TOmraOsRrpDS
fApu/owyakTHWhxvKZXA/hvhkui9qorwNv49d1cd+zfbglaFliwenCu0HvvP
0i1fF6tXkerjM3a8QIHYYynDEvTKVHpMEfYvyxlet3/o2gdHFx+2pSB+x1iM
mUYVuWw1mp7gSAE7tv1FOvpgea2MtQfO2x1ve4fR313vb8o4S8EBlSciBppV
5MqDV0eP+1OQdCZzUyS66ubvpkeYP5peRDm2ocMuSqX6YP6QnhcQtUoL39/h
61yE/Tnm1Q5VP7RLnV+BEeYPoXNSVdVo55j8BNM4CsK0+46IaVeR8Y+O518l
UjDb//i3HXpgo+6Z1GQK/DMuxxWh4ffZvZ2YF75bW2hNoZe2PH9yEfOEx6Jl
taarq4jJ9aFFfpg3emtHHZPQA1H7b///+5Fjl17N9KBzZvssj6Kb9aKS166p
IgZxH6S34PvNx211g9HSTxen2OHnvy9c1fAB3XHurlsF5pHtTn/c5dZWkQPP
AiZ2YR55Jf92rjv60a3YFIEYCjawE+88RUe+Gy8cxLxVEuWsN1enirxI0PIc
wfVQN9Zlm6P3a/lqzMf1ypmZc/oO+mjzl80bz1GgUPZp/jA6Ivmq0FlPXN9T
Gbl6ulVkfqvS8hInfP6qpyAcfbZcdf2oDQUR3QZtbHSFpa/Oyr0UXDRvEz2z
rop0/ubrdtWh4JfgvcJX6OiysDZXzKdnGH7Gwuvx+drqeOzCPDIYYMKxQS87
t0Z/IS8FzjqS5/PR7i3ZvvfHuNA12CP5A739VH3d8g4uWOeUlhht+P/zy5M9
MR/vkjDv70BP0PUFglK4UP1h6SX1jXj/d28xyGUuGF4ZkfdHpz520G1058Ka
XxEW4ptw/3XFHPTH81T48NCwPfrcu1+jkZJcUHJTC3+I3vtp2b/A3xyQannz
cqdeFVGaNyPF84wDMTEJ1rfQbx3bONlJHJi/02m8Fz1n7PkvfR8OTD/nUQvR
ryKD6fx9pzU50JO6Ob5scxVx4tU/Y6vcDUf2C2nzGVSRYG1PeSdWFzQtaK21
QFsEdjcrXuqC9xfPzQ6jv54sszRo7YQSu0fHlbZUkbFn7YdGgzvggpIqiSFY
7zJUQqC2FS4K5/r2ov3FLRX+q+DO46FqoziAFxKhVKhos8ueJNvrXCGytVDW
ypaybxUJUQiFkrVCSclSREm2mFshKu7Y15lJSiRLpFLe05/fj2nceZ7nnvM7
ZqZgzx4Im9laqK6L9U6G1dm3ugfCSWEhJjry4R/3Yswrkc4rx7frYX8KYlU5
r+mCKJPLotFoS8W2tyVkJ0Tv4LLqRVv9/HxMKrATYtjZaBf0sV6Ob54fGe6A
2LGwH53oscQ7/XbZHRBH/y0vZ4D9bcWRdWb2HXDl7mwaHb3zm+nezwPtEH/Z
/630HhrxkUeJVoL5JCHgG1sI+vpywWwV93ZItPNUb0Ur2sQrBKu2w1W9US8J
Q9z/gGOKSUvb4Zqc690g9IX1K4Ii2+iQtPZDdws63VRB1SaXDskf+vVOG9GI
DycG2l4epENKs83ZJrRO7ojUcUU6pJZ1Ptq0l0bI7tC884uXDmk3LYb90BvT
/GeiJihIv9i64TXaZ/x6zjI6BRkeZvuEjfHxabeCz1RScMPiTaQ3+u66VAk6
5pObWoaVNHRB96e9AknY78VffhMyoRHPTVcmK1+gIJNHV9ID/TrfO2zjacw3
MzW2L9AzUbOZb9wpyO7TvLrWFOt7SHyhnDMFt8lnr06g40aXBCn+e7+kUPV3
FdqIYW9Sh3kk5/pjZX4zGvHGbOmPFvTdc4quLug+sRs/dPDxuc6FNyvQwPJs
XXSi4J6JTBuvOY2wHmLfNu9Gwf0d9zgd0Z1dB1bwYx7JExHTforWsokSU8I8
8oA92497H97P3u4T2pcpyB8TyTuCfmNxdG7rDQoK6On9j9EEM+I7rYCCwirB
NZz7acQrmTXLeGooKLqbZGiLLgwOe8tspeDh5VWhj9DPuz/HKY9Q8CjgSinb
ARphZ9ity1ygoEQvelMhWnushCaA+/NYjt1iEZ0RrtnhY4R5c214jMVB7J/p
vbEDznR48uHszG802/q+vMJMOjxtnpPZb0EjkledZo5V0aG8LOBoLpq9a7nO
3146VFz0ajK1pBFX3/+ccBJphypxx+zMQzSit5lNrv9uO5hn9CqPo4uqpmen
X7YDY6UlTfMw3p83H9EDRtqB89eej13ohvQXoxmyHXCwVV5ujTXe3+6pNT3l
HfA5ZL482pZGeIgeELDv6wShzsR3Pscwz/Qf27ZTrwfyTbgdatGZPoyJKvce
0K6/MMXrgP31QpHcsaQecCo6LVCANizztfvF7IGHF+xshx1pxOS5tRvOX+gF
fSXpEWsXfD3N4hoXG/vAP6b2j64bjXA6W2057zAIVxRGtqWhiZ9FzE/xg3Cf
4js8jp7Z2PWhqnIQ+jYeeZTqTiNq9+lJ/147BPqPfx8d88B+XFbPvePlEAj1
qtcle9OI+td++wUuM0D5vMP4KPrgf2nMvdkMMJaIWQ8+NCI31j5Vt4wB5727
fEfRFqM5Kp69DPjMdkZUx49G/NZ4mOYsyQS2B5lm19GctvVKx3YxYZPZq7Of
0dJh3/dz7WXCwTQBKskf6893e1lbDyZUyZVd+BSA+Yk/uetFIRM6W3sfaZ+i
EUuchNu+VDJh8jRb3zW08aom41LMJxJ1B3Zon6YRE1MJ7itHmKBz/Oyxa+i3
P23fZ80wwWbFncsj6Di3eRkS59kEy8kPV8/g+T3FDKjdwIIHP9fxj6CD2RrC
rkqygJYF2lqBNKJbcmXeuDILfnxOSP6Ifqy1enzXHswrCeV1mkF4XuQZzK37
WSC/Y3A8ER3huOzGJRsWOIQqGGiepRG+uWIpLzCfBIsd8ktE8+xSbY3BeT65
ISRzGC35cK70xVkWPPLMbdIIxvqq7H7xWDgLmla3zCagOdW0VZyjMR+Uz4gO
oyfcDO1fXca8YSdirnGORgh7Nu0Px36+fqlecAK6YsbmTzz2e5X77vc/oDuk
S7k+Yx4wNUmi1EOwvzm9eXoJ84Lr5PO/8ehVfkVLXDFPhKcwZT+gWw2OJpzD
vHFTk9tKPRT7r2P68zp0+ZDyxXh0t++PdIV/fy+JtC5moZvo0ksrb2J/3hbe
tysMz6udR8KRDBZwvM9bHo8WYmx5tCoV88XSlsR+NFumtvR6zE/2qpPr5M/T
CNOWTYchngVcJwRun0NzHL+7NOwSC55kqMs0ow9Mj0+04Ho4tNiXCIfTiL+h
BWMSuF68i+Hq7ujHpbHdYb4sqNh+r+45Wu3rlXK6KwuOuzQZcUfQiMCGoKKN
9rhfaV9brdGt22o2W+B+1TattnmALt4tXuarh3lsYSfzB3o1fecRH8ynQkq2
boYX8PmMnU7vlcLz4Bg2lYq+Vjz64qcgC7yTc86OoD/d1Qk8x8GC1z+/xEZd
xHnswa051gAT/OVXrelAy7+GbbRGJmw+tuOGRCTWj4Yi2vFSJpx5ea6ARNfl
P1g3G8EEsR/ZKmujaDh/8nsxTjDh3baXlU7ovzbRPommTJBO5G1eGo37t3zV
zt1rmNBer2xxAH334Cl3sxkGhH+37LuN3sshayRHZ0C3TeYYXKIRebVC2sGJ
DIiRUOQNi8F811hk2zQ3BKpWB5Pfog3PKFz+mTcEjNgzGzfF0gilsgStIKsh
UP9WK1+Nrt4Vc3/o8SCMPt9n9isO571E5zlF6wEw3ueXcCaeRtjwtT9Qi8f5
KSJF6DXaPsnuaqVqL+Q8eZ4lmEAjnnLXDMz098DvDWzFT9DOz+w81in3QNFw
0vvpRBphYs6ZRw53gfW6Z1a7r2J+DepzyEzpAg7jvqFraPrprnxJoy6wLxaf
VL6G+2MvUJRd2gl8wU/4fZKwvnAXvgzCfDEtXMVdg84ceylh7NgB3VX1bDzX
sb+ZzzYZS3ZAzp933++j5bmMeXiftMOlrI6v39FekXbGH8LawRP6R3Yn04jv
y20V15ni/Box2j2INje4d7jiKx1ExCbb5FNoBIvzzJQqjQ5LyLk3wWgDxc4J
+Qw6jDj/IRvRowrcJ+/506GZg6NGKJVG3F++NiXHnA4l91aUu6C9TMtMpBUw
b+xZXVyKFjWts965kg7nPq17sCQN807r/Pq3OJ87xGy+Y47u5+7N+NpFgcE2
yRu30CNlaZeS6yiQfSN3/Qt6nU/mdE0hBfweKlfU02mESLvwPZcMCmZ5NKKi
0dfvW2VGxFLQWwRh7ejmZ19v8oZQUGe2J1AsA+tdy8ba376YByZMfX3RR5of
PNU7SUFcooVbLfqUcOBglyMFPsq2Trw38Lw6njEtOEKBZZuDnS1a7t3PgULM
Gxr+JywfoLdlFrv9yx+b13qbzaETeMyGfuHj2Z+c2qN/E+cf92pnScwfny3P
QRL6laFniAb+vnezEeoM9D5yt6YEXk9Zasx2xVt4/30/bUedxfy1K1E2BM3l
JOWnHEVBWHeK+Bv0z74dnHKYr5zP3tq4PhPP5/bf1Y9uU2AkfFfQFR02NOr9
oIQChar8lU/QjZyte5fRKFhjX7KcLYtGuK9V/1DaTkF/Zs3PTDSx2lby+R8K
6nVeTo+h1fWTHn5bS4f7Q2/GNLJxfz9trFeRo4OfaPdAB7pX6bn3HXs6cN6b
rue7g+tXZph+s4kOYwY/K+3Q2/vXOxWN0KF1ZLEsHz2q9dTAkaMdbsrw3TfI
wfN5bl9yom47KBdJx4XepRFzV7sfLqe1g02Z/cGv97CfW1SqmXV0wOuLq0d0
72O/q+cq41voABXL12dT0dFL2D4JiHcC76zSHcjD56PH1I/4dUKtGvvktQe4
PrZSqmqY38Uq8+PVCnH+emeWZm/XDeN1c43nS/D8LKsz2sbVB9bXCu3b0ZtX
mPdyqPbBK0eHSZnHNMJbj6r7c6wPstjerKMe/5vf2L7rVfTBAf1MV4kyrDdD
Kwv/uvVDeYMeR9NTzNP1k3C4dQDC312FNVU4jx0jwk7sYUCY/G4lR3R3TkD3
OxsGhMbNbC5Bjy54FnB7MSB4z+G/ZtW437QCickkBpyqFamJrcH6Fij1HPoZ
4L/xbVE3+qia18elEwzwCw67JV37bz2YV6IWGeCtxjz3Ch2q/Ey/SZQJJx/d
11xah/WaffkCrzMTXHmtZfejIwZtte/5M+G4O7dwNppz+2bpSay/TlKeP7Xr
MU96FJqkZTPBPmt7RRAN19PyDG2hkwm2C6y8BvQztdalCx8wT9gmpwmR2H9/
9+fcnmTCYaEfZ56gD0vE/KS4WLAvoXrn5EsakbVjsvi+KgvMx70k4RWNOPv+
7eebOtiPjbcIJqBVY7l3ShmxwIjzwne517jfodO3vmF+2OOyYzgYrWOwZN02
JxYY0IbpTWi79cZ2424s2B1mWHaiAe+fAaWPbEEsIPrnc8rR9ov8k+Y4r4Nm
QdKyRjTXyn1COM/rpNtdsEQr1US/t4xlgfYcr/9d9N1CNQ7OBBZoWtY6TqOj
JK7qSmJ/1ij1OaDbhPnXRy71YQoL1PlFda+iZR6x92eks0DNm1IeQsfY6eYO
Y55Qbbm4VfENrneqr0kM5okdsjv5Q9EqARu+hf37fGjMyGIzmsZ36fS/77cq
j6R9E26mEfkBgcmmaEX9vUNuaNFesRYh/PcKOb/eVaBnIPLsv8+Hyi8pql3e
gnk7KuvdfswzskePPDqMPvKyb7j0Ogtkqldm3UNHLbGq1khkgbRwXfx3tIh7
tdEgvl6pIL9Qvbc04sav4MCMiyyQ6BTzSkKf39qt5RLCAjHVdnsmetfqG8m7
TrFANCnKVPkdXt/CYiavBwu2Tqppn0d3Nggl9zuwYLP5Z7l36HuH3EduH2JB
bp9hufh7GrH49P5WwP2UdcvDvcZ6NcE+eV0D888cZ/M7tLKWj3T6Nly/SNdD
Eq14XpssNhisZ0H16tdDZ9EcjV/J5GW4v9mS7u/RRz9LtUdMMcGscjgsuA2f
v0Xyt9grJlCG+tyt6E0SXGRrEROsO+5el6RohETvsrBV15ngMun0oBVd5Vez
qGPHhC+hNBUpOo1QSJs9pfIfE3x5xGrOoUcWoo9Vb2JCiBSzTaqdRuQI+i7m
YX5ne0LYh6BXvVt5a90zzA+6t0fa0PMp3Dc18P5Mtj/2O6SDRvD7iOfW6zOg
MGlAgt6J+UJ07syI+hD0/u0JPN9DI36EVZj3mPeDwxUNtg600onaCYuJPhjZ
kHFFthfnIQf97zXxfTCtan2nAy3d7Bci97YXuD0638j104j1HXLspEUPJMzv
PBSBdix+3cs/3w0C0SlDneiz4u2jtMxu2HrH8nvEAJ7P8PLjY1+7QL2L2tQ9
iOfNhnF8PhfroYvKA4UhGrHF+ANdzLoT9KevqVxE60ZMf3/A1wn7+Q4YKjJo
xMDn6WVbwjug80ZJ20V0eP5vKbX/OsBeht++B33qqFTNj4V2OKn33jeSSSM+
XpKgVUS2w0Sr4u8edIkr3+52zA+njiZEKbGwPoDOdmpdO/wa+7oqCp3sbWpX
85EO4WfNbvSiQza7CmaXY/9Y/lBC+QPmo3wXvfNxdLiSzFschWY2tjq5ONJh
jZinRh8693WLmIUWHdKKm0nlYRpxzErwtvl6Ohwu5HsRib7hd33XyDwFAnn7
KrvRZy1uv/bup4Cec+2p/Eca8UBTpP8j9r+kLHpJOHog79z7PUUUHLghWNSO
nncNFb+cjnki1SpPZoRGfGjIIQouUfD+WkZOCJpzs2dUBvbjhPi+zFZ0W4iM
lak3BWaxmzIkPmE+/b5X9clxCnijjiUHob8IWL2sO0ZBc/idxBa0u9XPpQ72
mC9CPsRt/YzzN9dnt3/fT9kbJBl9Cn2T55T0cswLXKdORDSi77X82T3sQEGD
T37IxlEa4VPd1//XlYJoj7FAX/TeVls38MF8dEIh4CXa72TDx3i8Pg5nH+/1
X2iEhkI1H4V5gTz62M0T3Wtjem3mOgUXbGdc6tBZeSoGvXcp0D2800FgjEaI
CVw38X5KwZKDgXYn0Vu+GmmlN2Le2Pv7AP84jeB+dNrAYoaC/wz+M3NBP33Y
OFixgg4LxHmjCvSE44GMI+J0CFZnB4evWI+cskghazqcluaRL5nAeb3t2bD9
WzqoiptJc3zD/nfbsahpnA7TmxPFrNFOzZJW07zt4Cu0dsOSScy/5wY99+zD
fLpMhHP/FK7Pwyint73t4PJBlvFtBs/7dSu2VZydYJFtnKz0E+fvE17rtS53
Q65M7Fgo2v5WV79IaTd8f9ywuwXtbd1jKtzz7/0Q/amTv3C+cqzI95bugd5R
HfOc33g9yyd6vF71gIPqDi7Bv5jvXCKSb3H2gVeTSMgvNpKwvr9duz1jAGoP
2tKN2Eki85FrjSM5ACv702XT0GF2UbFfxgegZEKwZwcHSWiayP0cgkH4vpZf
zWsZSWi8M940MTwIwUc5JoeWk0T0j8B41loGNH/abajIRRL6ixuYcdIM2OgX
kRWC3u4wFc+nxYCai39NN3CTxNU/WgfTHRmwJH8+/+AKkpBhP5YcUcSASzPj
zq94SaKu4635011McCjqOSTMRxLSzLmP+/cyQf34a0MftGxsuXy6LRM+d2bL
bVhJEidfXOMVDWGCUeXBGc9VJOG3mtOQWcmErQHwsR79N8WfK7uJCfNy8l1C
/CTxK0vt5Y+uf/9f6bKqOnRXmPhrvxkmrIiouCCwhiTsyM0P90qygKVx75Qb
+tcWJ/47/74PMn3NtRbNTz8VHK7FAg8XD+OTa0lCfSjPvXkfC/Q3WWvXoGXb
bnsrY//f2KmvuEaAJAyPTPvxY/9vMdy8phrNc6rq3XZ/7DdLeDhWC5JEKOfG
Anech0Oe/5g9jr5U7RnMh/Oypf/wp0r0FHeznmA09lO5tp5VQiTRHx5VHHKZ
BZzDNc0u6KfW50R0rrJg8FZBzXN0znmteItknPcPpRWvXEcSgtd7Ssux3yas
jLzjjJafUp1w+Pf3gwbf6xXoZkaegQn2a53wI1F860niXqfcGe9/n/fUMA50
Qgva3Z361++/Tam5PUOfCn49SKAbC8TteDeQBEO1V5ZxkwW3nfnNHNFlEa7R
6RksCNr4R6ccXVNtFOCYyoL9HaPKPMIkobD21D4VzCcyCZ1iDmgxc0s7tngW
LDEkBZ6idS3b3zTi6+1eLOZcIUIStF+0dyHnWfC44tb8UfSmg5fuCwayIM4v
9ksZ+vzTqPw4LxY4yZ7p59pIEqvcghzpuN6aH5zeHUEPHKZf/nSYBWtu7asr
RXsFzmm/2MuCL5bapcs3kcROk1LWQdxPGt+2XHt0UYS54005Ftx4LZj6GL2g
wCaVJMyCgPNsMZyb8XpF2ZW2Yz40Vf921g4dNvlIK+A7EySm+jxK0OIs01KL
IZzvnZ7us91CEkPZmgqsEiYUieToFqNjq1MfXU5jQmR7wg6OrSRxS1Ms/w2e
X9U9J9c9Qu9eeBPFq8cE3kVLbnZRvF+7hVYISDBh+Jnubys072B0fiU7E1K2
iQwtFcPz063e9qcW7ydfDoUDaKWMltFNmQxwL/8afBudZbKqTDKYATp6dUIg
ThKpSoTT2u0MGLE/bh4iQRJXbCpGfaWHQO1qcc2cFEkQbM8YCwH9cLsznWeP
NEmMZ2m5pgj3w4pNF2xS0M33Rt156vtgMN9ydocMSaw+0PVVZWUfXCJ/yvtt
w8d76y/WP+yBae4PwXXoI6/jvqVb9YD9/pbGVbIkwa7dURnK1gPKA1kuj9BJ
50X4p3Ce6Z7TuzUmh+fj6qqqvK1dsPs/hS+a8iQxfdpsamtnJxRdFFKPQ08t
vS9/Pr4TwvlH6TIKJAHn5a+rs3XCl8OUaBBaUXNL8bMXHWCZWeXTgP7FcbTQ
+XwHbJNN4HFVxPrzV4AKWdYByb6BNk/RLxjh9Rwt7fC33CGPQ4kkDrZXcH1L
bgdKb4feXXRa/htnQcV20I7beG0a7eHjccjlL86TrcuGdJVJYsVXgxNabdgv
jnQHM9DWHH/v3gqjw/Dd+kal7XhebsVabLehg/mXAqHz6PmhneLOanSoUE52
eYcOm/uqoypEB7HA0NJNKlgvv2f738P+f6XGdYkXui+NXbZ8gII59v3m1Wg/
t2caLq8ocDDWuMWzgyRY9lbjhcUUvLkq9sUWndhOrYi5RYFqF496AZpXLSBx
6jIFWZtmo36iRTdt52aEYn92GaQbqZJEY4605V5/CvwLGkTT0bBF4oWoG87T
kyU+n9CtQ8VS9jjv79l1o0ZtJ0kcom/k/oL9vST0Ik80+vOa3LR/3wcReelp
04FOaS5gvkDXBqmvF1cjCXfGDH8HPt5JgaPLF124/srOYUcKlrHep9SiT3Dm
svedoOBB6k1L3l0kcb+GVnkf84CJyYm1tujgJRZGqpgHJhZVqDy07AoXd99I
Cq49+Xt1Fq3x2LbT8Bq+Xrc3+/TUsR6JKlnnZVPQtSl15TW0gU79xDlcn2DK
8e0gmitPfay0joJ6rZ/GwRok4eJs4b44QmHefsndiDb7GN899RvX597VRkFN
kqg8vjpvyRrcv5Uyex6jb6WrdO3QpcMUbYZjEb003kdW05YOyYEvSFMt7A9e
ak+3nqJDL+Ow7mf0c3OlIZsCOpwoi9Le8h9J1DrVum7f0g7h1h9U4oEkXq2T
SRcW6wBxvuKpXnTYh0a6rn4HvK4PLpEhsB4buc1WunYAr9waxZfoOPaxvMSi
Dsj4Q2z7rUsSbGu208y0OqE0J2uLmz5JCAi16Fo7dcHwuA2vwV6S2FAzfrn+
TQ+sbKMfz0BX1u4tyZjtAY2nZi++ou2lKv5c29oLCaG6/qnGeP6dU9VZZ3pB
feW27k8mJNFp2uE1L9EH8Urzd+PM8fFt9W320f1Qsdb/zyBaI9hs6dfSfmD9
GDu8Yx9JLHkTEH5lqB/U64a4+9EL0sthQn0AWPsbfBQOkES59lDi0NgAqPmn
arVakITqQh/53HwIHA7zp0hYksTcs6MxJ4OH4LJm3EQQ+ueyi7MD94aAwRZ2
R/QQSSzj6XnFsTAEcdePLw84TBKLFQHmpgcZ8CRwyKEBbbGY3jHqyoAhO5tK
ESvsp2YC9w6eY4CqhJnXSzS76I2rwXfx509U6YI2JFElabfQMcmAFRmP5N3R
LhrLO89jfVUNlYmuRV+UzAgcEmRCnMFGjRO2uL75GbfKNfDnnezZFXYkEcGr
mRUVyoSjlaHzvPb4+v9+PJ4Vz4TYrB8HHNGSiWUhdplMGHQd41hxhCR66b5J
lVVMiPlBudsdxf7T17a6HfOHvtverQXo8m82x34vMmFp34uOeXRZwa5rL3lY
EFxbRKQeI4n0xVCenWI4fyqLzw2j+2RPmnXLs2DmTkbhDgeSOGuW5iS4iwWe
UdFCbejNcTzlFsbYb38sNG9xxPVyok3us2DBx5MBEd7os468s312LMjpHVXD
IEjQHQOp784sOGrqMM7jRBI/4gX903B+Fq7tvGOLTioQiajD/NKpZGaVj87h
Kw31xPySdIfknUcnuPXdT8N+vW+tJm2PM9aTCXZunSgWzhMlgSloluEVD7s4
zA9zUgrDaMP+MMexBBZEnsxkqbiQRNPjJWqjmA+I3rXpEejjRSGL+zA/LJjE
mbWiZRRXXRHGfPG8Zgn7luMkYXL+4Rk9zB9nlAIrvNAsyVCBV5hnVO589apG
2ywlLmdgXplY4yLO44r5qaa8rhJdGNnbbYNe2WPmJ4Y+Obc/4QG6ifZM7A0+
n8TJBr0f6A9sDRqF+PsYPf/9NDiBecsuYaoWryfT5MmjZPSdMX2fv3i9tjWy
Lh/Q1/9I1Dgl/Hv/4c4GlZP4fIcLB4djWEDdXvc+HO3O97Yt9AILEtckRL5H
f06/kSZ1DvNEJIfmZjeS2DseZNCN68s1F/zNE03jWsFzxY0FL09M5VahvaZV
VbWOsSC854TtCnc8n2w8h4ZwP7VNBlfZoEMuN2z0N2TBz2rLV3nojMZlD79q
YB5UbA6eQ5+SNrA3xXzjf1tX2cADX0+kxVyMCAsU11R8vI6ObfhNZq3AfHRR
8SYL7e2g5xQ7z4T7s7n7t3uShHDLrL7BRyY4nxDhDEc/3Tcu/r6VCf3GXH6b
vDB/pUmr6ucyIb06TMoTfaNyR678FSYcUpztq0RXPNkwMeDPhHerWXusvbGf
fFjOma2N99dF64X7aGpkr2zZFiYYzr57PIv2LQkeT1/KhLruqo3XfXC9Cjdp
fq1nQIixCsVET1kFBJ68zQCN6geXlH3xPFkLV7wLZUBpdsr0W/RwfcvWCzsZ
cNfVp5HLH+vv0n6RlB1DcGaf0T0HdGJNRqBI9yAYq4teqEBPXk3cOhc8iPmF
rnUyAPNEalawR/UA7H6oVtxwiiRm9L88FVDtB6HUVVe2nCaJB3uW6Y209sGX
sM8nA9HCi8fJcq8+SNp/Q0z6DEl07znCUnrQC8yZPynRgXi/93hHakv1wJP+
Tv9BdNCemxK0xm6IeVW8Ty2IJKzcY762e3aDcpoj9wg6OI72VLeyCzjCNUf+
O0sSpm2vhD86d0E3Dh8p6AIHjpIHq7ogXPNViEEw1uv14ce5vTvBUjzLJhPN
x3fJcWBrJ8jwBqrNoh+drKiBzg5oHZCZzD2H/Ud87PXyvR2Q+3rp2wV08NEZ
jxTODggq7s23DCGJai6jE0sb2mFLxBVnjlDsJ4Smbdn+dph2O07Yow03iIsI
CrfD64M6m56g56UH3l8ZocMNrXW/eMIwDyvcfixRTgdviclOZ3TxpLvJxxg6
7OZrKqtC187ZR3YcpYPQ3J2ra8+ThNPU9vBfu+jwZTDYywM9ZRJsbSVAh9oG
C2MSXWipI/kV5/ekEnlpkfB//UCUVdlJgWvGMo4ANFujvmhNNQWaFwYZb9CG
Z9+LTdyjYKXHsxqxCMw77kdbDZIoYFlcvRGMrqgYDH0eQUG5tlsghY4tZshr
n6IgTnK3pewFksjO+RJSi3noyEqR7RfQL6G/TRHzkPKPGb5e9Cndl6fPYr7h
YLR82X4R52W6TlMM5p/uxnsNsejkvxvDDewpKHoclstEOzucY6QeoyD8hlWE
RiRJOKx+vMz5OAWWF5WPXkNHrnkqmehFgYwnt9Yo+vSO7K7FQAoWLFnrdKPw
frNNt83A/NP6X9X3dPQlXqMuuE5BrlRy2yT6uFHiza67FASt8npkFI31p7Ng
v0E5BabzBpdvo3uPOst7v6FgK3PzyXm0yFr7DeoMCr43/dDffwnXb8/oYOwP
ChpLW0UfoB8q8Mua8NPh5s38v4vo0jHaExdZOvwP8eMG8w==
          "]]}, Annotation[#, "Charting`Private`Tag$56143#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {8000.000040816327, 0.1769765830438085}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Resource1\"", "\"Resource2\"", "\"Consumer\"", "\"Predator\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7807304591304054`*^9, 3.780730521375218*^9}, 
   3.7807318111396437`*^9, 3.7807318663062916`*^9, 3.7807319293934493`*^9, {
   3.780732035207592*^9, 3.780732081503318*^9}, 3.7807321646552353`*^9, {
   3.7807322062324066`*^9, 3.7807322285310783`*^9}, {3.7807323910729556`*^9, 
   3.7807324459042826`*^9}, {3.780732501143795*^9, 3.7807325578915873`*^9}, 
   3.7807327602465377`*^9, 3.7807327960311136`*^9, {3.780733035825862*^9, 
   3.780733051731101*^9}, 3.7807331047299166`*^9, {3.780733140485342*^9, 
   3.7807332135334682`*^9}, 3.7807332953960857`*^9, {3.7807333917351885`*^9, 
   3.780733421324669*^9}, {3.780733526198552*^9, 3.7807335739189568`*^9}, {
   3.780733735615959*^9, 3.7807337925113573`*^9}, {3.780733848877001*^9, 
   3.7807339451694055`*^9}, {3.7807341995754657`*^9, 
   3.7807342252267923`*^9}, {3.780734274774673*^9, 3.7807342944593163`*^9}, 
   3.7836914440981884`*^9, 3.7836915203893223`*^9, 3.783691556630418*^9, 
   3.783691615117107*^9, {3.783691646900268*^9, 3.783691701788824*^9}, 
   3.783692111515506*^9, 3.7836921482490063`*^9},
 CellLabel->
  "Out[1378]=",ExpressionUUID->"f9754fb4-6b2a-47d3-ad2d-6e16c4f70c2d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "3.5018842891330033`", "}"}], ",", 
   RowBox[{"{", "1.2183127347653209`", "}"}], ",", 
   RowBox[{"{", "0.20106781648185582`", "}"}], ",", 
   RowBox[{"{", "0.4376078701510712`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7807304591304054`*^9, 3.780730521375218*^9}, 
   3.7807318111396437`*^9, 3.7807318663062916`*^9, 3.7807319293934493`*^9, {
   3.780732035207592*^9, 3.780732081503318*^9}, 3.7807321646552353`*^9, {
   3.7807322062324066`*^9, 3.7807322285310783`*^9}, {3.7807323910729556`*^9, 
   3.7807324459042826`*^9}, {3.780732501143795*^9, 3.7807325578915873`*^9}, 
   3.7807327602465377`*^9, 3.7807327960311136`*^9, {3.780733035825862*^9, 
   3.780733051731101*^9}, 3.7807331047299166`*^9, {3.780733140485342*^9, 
   3.7807332135334682`*^9}, 3.7807332953960857`*^9, {3.7807333917351885`*^9, 
   3.780733421324669*^9}, {3.780733526198552*^9, 3.7807335739189568`*^9}, {
   3.780733735615959*^9, 3.7807337925113573`*^9}, {3.780733848877001*^9, 
   3.7807339451694055`*^9}, {3.7807341995754657`*^9, 
   3.7807342252267923`*^9}, {3.780734274774673*^9, 3.7807342944593163`*^9}, 
   3.7836914440981884`*^9, 3.7836915203893223`*^9, 3.783691556630418*^9, 
   3.783691615117107*^9, {3.783691646900268*^9, 3.783691701788824*^9}, 
   3.783692111515506*^9, 3.783692148326818*^9},
 CellLabel->
  "Out[1379]=",ExpressionUUID->"177f8c3f-6765-4af5-acc3-75fd8068d1b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<D:\\\\Research\\\\IGP_LabExp_Public\\\\check\\\\TS_R_a10.csv\>\"", ",",
    "\[IndentingNewLine]", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Res1", "[", "t", "]"}], ",", " ", 
              RowBox[{"Res2", "[", "t", "]"}], ",", " ", 
              RowBox[{"Con", "[", "t", "]"}], ",", " ", 
              RowBox[{"Pred", "[", "t", "]"}]}], "}"}], "/.", "s"}], "]"}]}], 
         "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "1000"}], "}"}]}], "]"}], ",", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Res1", "[", "t", "]"}], ",", " ", 
              RowBox[{"Res2", "[", "t", "]"}], ",", " ", 
              RowBox[{"Con", "[", "t", "]"}], ",", " ", 
              RowBox[{"Pred", "[", "t", "]"}]}], "}"}], "/.", "s"}], "]"}]}], 
         "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "9000", ",", "10000"}], "}"}]}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.780725370040784*^9, 3.780725371165764*^9}, {
   3.7807254366201663`*^9, 3.7807254887434254`*^9}, 3.780725544950336*^9, {
   3.7807255905747395`*^9, 3.780725606523695*^9}, {3.7807263640705333`*^9, 
   3.780726364550336*^9}, {3.7807264169538918`*^9, 3.780726419313915*^9}, {
   3.7807264730236955`*^9, 3.780726494875037*^9}, 3.7807266531827407`*^9, {
   3.78072668625953*^9, 3.7807267340843163`*^9}, {3.780726786491974*^9, 
   3.7807267883001456`*^9}, {3.780728204356254*^9, 3.780728205086302*^9}, {
   3.7807284470418987`*^9, 3.780728455847006*^9}, {3.7807286863385553`*^9, 
   3.780728698886126*^9}, {3.780729078072295*^9, 3.780729143351508*^9}, {
   3.780729346732864*^9, 3.780729347670555*^9}, {3.7807304704615936`*^9, 
   3.7807305242427015`*^9}, {3.7807338514476624`*^9, 
   3.7807339345212097`*^9}, {3.783691569083344*^9, 3.783691574086394*^9}, {
   3.7836916565952163`*^9, 3.7836917132179775`*^9}},
 CellLabel->
  "In[1333]:=",ExpressionUUID->"fb35a829-1ad5-4976-94cc-ec890df9d0c2"],

Cell[BoxData["\<\"D:\\\\Research\\\\IGP_LabExp_Public\\\\check\\\\TS_R_a10.\
csv\"\>"], "Output",
 CellChangeTimes->{
  3.7807264207320156`*^9, 3.780726495815157*^9, 3.7807266555539827`*^9, 
   3.780726740747821*^9, 3.7807267900997133`*^9, 3.780728206435052*^9, 
   3.780728701887652*^9, {3.7807290866318417`*^9, 3.7807291444963636`*^9}, 
   3.780729349262697*^9, 3.7807303735069895`*^9, {3.7807304752806196`*^9, 
   3.7807305255398293`*^9}, {3.780733855758272*^9, 3.7807339371394477`*^9}, {
   3.7836916355729275`*^9, 3.7836917145245447`*^9}},
 CellLabel->
  "Out[1333]=",ExpressionUUID->"07a9d37f-c7ba-4731-aae6-a95cd834a2ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["This second section is to plot model results with ", "Subsection"],
 StyleBox["fixed e2 and p", "Subsection",
  FontWeight->"Bold"],
 StyleBox[" values but ", "Subsection"],
 StyleBox["\[Alpha] varying from 0 to 1", "Subsection",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{{3.718532617046636*^9, 3.7185326244958086`*^9}, {
  3.7225792987038383`*^9, 3.7225793179025564`*^9}, {3.722579356507042*^9, 
  3.7225793617340794`*^9}, {3.722579423687665*^9, 3.7225794632613792`*^9}, {
  3.722579493701161*^9, 3.7225795607114515`*^9}, {3.7225796314104743`*^9, 
  3.722579692705368*^9}, {3.722579813783048*^9, 
  3.722579815425516*^9}},ExpressionUUID->"fd2de86f-83e4-4de5-9b66-\
ae7c6dc0bbea"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "1.71641"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K1", "=", "8.13829"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "1.71641"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K2", "=", "8.13829"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e1", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", "0.38580"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", "=", "0.35959"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e2", "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "0.04"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "2000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqs", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Res1", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"r1", "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Res1", "[", "t", "]"}], "K1"]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"H", "*", "A", "*", "p", "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"H", "*", "A", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"S1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "h1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"S1", "*", "h1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Res2", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"r2", "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Res2", "[", "t", "]"}], "K2"]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"H", "*", "A", "*", "p", "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"H", "*", "A", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"S1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "h1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"S1", "*", "h1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"B", "*", "A", "*", "p", "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"B", "*", "A", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res2", "[", "t", "]"}]}]}], 
           RowBox[{"1", "+", 
            RowBox[{"H", "*", "A", "*", "p", "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"H", "*", "A", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"M", "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"S2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "h1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"S1", "*", "h1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"e1", "*", "S1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"e1", "*", "S1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"e2", "*", "S2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "h1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"S1", "*", "h1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}], "-", 
        RowBox[{"d", "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Res1", "[", "0", "]"}], "\[Equal]", "8"}], ",", " ", 
      RowBox[{
       RowBox[{"Res2", "[", "0", "]"}], "\[Equal]", "8"}], ",", " ", 
      RowBox[{
       RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "0.1"}], ",", " ", 
      RowBox[{
       RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "0.1"}]}], "}"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aa", " ", "=", " ", 
   RowBox[{
    RowBox[{"Reap", "[", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{"NDSolve", "[", 
          RowBox[{"eqs", ",", " ", 
           RowBox[{"{", 
            RowBox[{"Res1", ",", " ", "Res2", ",", "Con", ",", " ", "Pred"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Sow", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Res1", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Res2", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",",
               " ", 
              RowBox[{"{", 
               RowBox[{
               "t", ",", " ", "1000", ",", " ", "2000", ",", " ", "1"}], 
               "}"}]}], "]"}], "//", "Mean"}]}], "}"}], "\[IndentingNewLine]",
          "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", "1", ",", " ", "0.1"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "11"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "11"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "11"}], "}"}]}], "]"}]}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Total Resources\>\"", ",", " ", "\"\<Consumer\>\"", ",", " ", 
      "\"\<Predator\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"aa", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", " ", "21"}], "}"}]}], "]"}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7171850823883705`*^9, 3.7171851443603168`*^9}, {
   3.7171855037507534`*^9, 3.717185504005747*^9}, {3.7171855624006505`*^9, 
   3.7171855628363514`*^9}, {3.7171856423772593`*^9, 
   3.7171856426125917`*^9}, {3.7171862161699696`*^9, 
   3.7171862649928026`*^9}, {3.7171889759919477`*^9, 
   3.7171889767310867`*^9}, {3.717190187939597*^9, 3.717190188306387*^9}, 
   3.71719033976348*^9, {3.7171904340989237`*^9, 3.71719043468218*^9}, {
   3.7171905165569887`*^9, 3.7171905175954957`*^9}, 3.7171906297054615`*^9, {
   3.7171907180597086`*^9, 3.717190718691328*^9}, {3.717190792372143*^9, 
   3.717190792794281*^9}, {3.717190839258257*^9, 3.7171908401466026`*^9}, {
   3.7171909578032155`*^9, 3.7171909672260895`*^9}, 3.71719102746842*^9, {
   3.7171910730519257`*^9, 3.717191075418869*^9}, {3.717191139995598*^9, 
   3.717191152439045*^9}, {3.717191200555944*^9, 3.717191202571689*^9}, {
   3.7171912829035845`*^9, 3.717191283409565*^9}, {3.7171913381613646`*^9, 
   3.717191338752761*^9}, {3.717191395188902*^9, 3.717191395722227*^9}, {
   3.7171915049744816`*^9, 3.7171915096151257`*^9}, {3.7171915616029053`*^9, 
   3.7171915620194006`*^9}, {3.717191620251911*^9, 3.7171916250005093`*^9}, {
   3.7171918007733316`*^9, 3.7171918016071863`*^9}, {3.7171918478678594`*^9, 
   3.71719185097678*^9}, 3.717191937681549*^9, {3.7171925564085565`*^9, 
   3.717192578367292*^9}, {3.717192710139017*^9, 3.717192721234208*^9}, {
   3.7171927886171722`*^9, 3.717192790002717*^9}, {3.71719303013867*^9, 
   3.7171930322183332`*^9}, {3.717193080816657*^9, 3.7171931285940657`*^9}, {
   3.717193182881154*^9, 3.7171931838764367`*^9}, {3.717193229922507*^9, 
   3.7171932303621325`*^9}, {3.717193296579914*^9, 3.717193297345705*^9}, {
   3.717193354147759*^9, 3.7171933621137323`*^9}, {3.717193408087184*^9, 
   3.717193410991564*^9}, {3.7171935240557175`*^9, 3.7171935248735676`*^9}, {
   3.71719359179428*^9, 3.717193592706175*^9}, {3.7171936471540747`*^9, 
   3.7171936491299543`*^9}, {3.7171936972079525`*^9, 
   3.7171937279844165`*^9}, {3.717193832705904*^9, 3.717193854177884*^9}, {
   3.7171939457143583`*^9, 3.7171939496578064`*^9}, {3.7171940097762556`*^9, 
   3.717194022377844*^9}, {3.717194076816846*^9, 3.7171940777213917`*^9}, {
   3.717194300160469*^9, 3.7171943027928805`*^9}, {3.71719436214762*^9, 
   3.717194368416517*^9}, {3.7171944524916353`*^9, 3.7171944535461197`*^9}, 
   3.71719454183185*^9, {3.717194598396923*^9, 3.717194606706704*^9}, {
   3.717194732739648*^9, 3.7171947375874376`*^9}, {3.717194788956518*^9, 
   3.7171947924186797`*^9}, {3.7171949283438926`*^9, 3.717194929371859*^9}, {
   3.71719499487516*^9, 3.717195001593797*^9}, {3.7171950523914757`*^9, 
   3.717195056022874*^9}, {3.717195144232401*^9, 3.717195145002062*^9}, {
   3.717195208849593*^9, 3.7171952109868746`*^9}, {3.7171952666677494`*^9, 
   3.7171952678237085`*^9}, {3.7171953289332848`*^9, 3.717195329855966*^9}, {
   3.717195392144329*^9, 3.7171953930831327`*^9}, {3.7171954447150354`*^9, 
   3.7171954456961474`*^9}, {3.717195493290973*^9, 3.7171954939878445`*^9}, {
   3.7171955477890234`*^9, 3.7171955486663246`*^9}, {3.7171956185487013`*^9, 
   3.7171956190176*^9}, {3.7171956611497855`*^9, 3.717195661688156*^9}, {
   3.717195807142214*^9, 3.7171958114175577`*^9}, {3.717195881389179*^9, 
   3.717195883466364*^9}, 3.717195996467184*^9, {3.717196051303999*^9, 
   3.7171960568047433`*^9}, {3.7171961299800124`*^9, 3.717196138360855*^9}, {
   3.7171962266816254`*^9, 3.717196228466385*^9}, {3.718106603472761*^9, 
   3.71810660931647*^9}, {3.7181067563062043`*^9, 3.7181067572486057`*^9}, {
   3.7181068064992285`*^9, 3.7181068114186273`*^9}, {3.7181068694929533`*^9, 
   3.718106872164318*^9}, {3.7181069224471893`*^9, 3.718106923044841*^9}, 
   3.718106976584052*^9, {3.7181070540568314`*^9, 3.7181070546920633`*^9}, {
   3.7181071095770197`*^9, 3.7181071125603576`*^9}, {3.718107201633151*^9, 
   3.7181072020647774`*^9}, {3.7181072612826066`*^9, 3.718107262584319*^9}, {
   3.7181073162652173`*^9, 3.718107321520424*^9}, 3.718107386875635*^9, {
   3.71810744207658*^9, 3.718107448803049*^9}, {3.718107511788564*^9, 
   3.7181075127719493`*^9}, {3.718107562781556*^9, 3.718107568174104*^9}, {
   3.7181076200723214`*^9, 3.718107620678274*^9}, {3.718107685984831*^9, 
   3.718107686304657*^9}, 3.7181077341583557`*^9, {3.718107901190503*^9, 
   3.7181079021664915`*^9}, {3.7181079755170746`*^9, 3.718107976135725*^9}, {
   3.718108059971588*^9, 3.7181080640828967`*^9}, {3.71810814795718*^9, 
   3.71810814902738*^9}, 3.718108235122902*^9, {3.718108283848231*^9, 
   3.7181082862327185`*^9}, 3.718108338788663*^9, {3.7181084037626004`*^9, 
   3.718108405857791*^9}, {3.7181084554357615`*^9, 3.7181084622056923`*^9}, {
   3.7181085162933717`*^9, 3.7181085170043*^9}, {3.7181085771128993`*^9, 
   3.718108577663183*^9}, {3.7181086367752104`*^9, 3.718108640414325*^9}, {
   3.7181087200013123`*^9, 3.718108720680499*^9}, {3.7181088831162767`*^9, 
   3.718108883954152*^9}, {3.7181089374526176`*^9, 3.718108938338826*^9}, {
   3.718109000213338*^9, 3.718109000997059*^9}, {3.718109052533946*^9, 
   3.718109053461182*^9}, {3.718109100959752*^9, 3.7181091014602423`*^9}, 
   3.7181091513764067`*^9, {3.7181093259982834`*^9, 3.718109328900608*^9}, {
   3.718109402968789*^9, 3.7181094088070927`*^9}, {3.71810946264821*^9, 
   3.7181094641437817`*^9}, {3.718110107182345*^9, 3.718110107981164*^9}, {
   3.7181101788057113`*^9, 3.718110180572734*^9}, {3.7181104327247066`*^9, 
   3.718110434243223*^9}, {3.7181105075362663`*^9, 3.7181105123471503`*^9}, {
   3.7181106962680197`*^9, 3.718110697599037*^9}, {3.7181107760378027`*^9, 
   3.7181107766530266`*^9}, {3.7181108508224945`*^9, 
   3.7181108541202607`*^9}, {3.7181109106539803`*^9, 3.718110913045005*^9}, {
   3.7181109632863874`*^9, 3.7181109642453403`*^9}, {3.718111025570491*^9, 
   3.7181110265577774`*^9}, {3.7181110929036407`*^9, 
   3.7181110947351465`*^9}, {3.7181111521310654`*^9, 3.718111153633035*^9}, {
   3.718111212051442*^9, 3.718111221967453*^9}, {3.718111276109049*^9, 
   3.7181112766607895`*^9}, {3.718111327326782*^9, 3.718111330254032*^9}, {
   3.7181113810420895`*^9, 3.7181113858721657`*^9}, 3.718111998599498*^9, {
   3.7181120580176907`*^9, 3.718112058680752*^9}, {3.718112134938572*^9, 
   3.7181121354029055`*^9}, {3.718112199315426*^9, 3.7181122005111694`*^9}, {
   3.7181122516670656`*^9, 3.718112265822691*^9}, {3.718112324786824*^9, 
   3.718112325336625*^9}, {3.718112375488648*^9, 3.7181123760794415`*^9}, {
   3.7181124423440304`*^9, 3.7181124432644043`*^9}, {3.7181124930072236`*^9, 
   3.7181124940335374`*^9}, {3.7181125443293*^9, 3.7181125729987674`*^9}, {
   3.7181126218805094`*^9, 3.718112650825391*^9}, {3.718112726983088*^9, 
   3.718112729207138*^9}, {3.718112924279523*^9, 3.718112925722845*^9}, {
   3.7181130673314915`*^9, 3.718113070026251*^9}, {3.7181131207539377`*^9, 
   3.7181131265853305`*^9}, {3.718113201148241*^9, 3.718113201443714*^9}, 
   3.718113335926778*^9, {3.7181133933518124`*^9, 3.718113422383663*^9}, {
   3.718113493578085*^9, 3.718113494665473*^9}, {3.71811355378726*^9, 
   3.7181135606582417`*^9}, {3.718113639159672*^9, 3.718113644596609*^9}, {
   3.718113698502163*^9, 3.718113699300493*^9}, {3.7181137827837887`*^9, 
   3.718113783878504*^9}, {3.718113841912426*^9, 3.718113842495922*^9}, {
   3.718113901776885*^9, 3.718113902689954*^9}, {3.7181139614348025`*^9, 
   3.718113965185796*^9}, {3.718114023477474*^9, 3.7181140254676666`*^9}, 
   3.7181255188862715`*^9, 3.718125605609725*^9, {3.71812567781317*^9, 
   3.718125680003186*^9}, {3.7181257372149534`*^9, 3.7181257586721773`*^9}, {
   3.7181258098445263`*^9, 3.718125844318099*^9}, {3.718125887676549*^9, 
   3.7181258881296787`*^9}, {3.7181259423906116`*^9, 3.718125947126021*^9}, {
   3.718125996465506*^9, 3.718125997474309*^9}, {3.718126052466696*^9, 
   3.718126053000883*^9}, {3.718126108315011*^9, 3.7181261085645123`*^9}, {
   3.71812617594042*^9, 3.718126178027347*^9}, {3.718126238629777*^9, 
   3.7181262392655272`*^9}, {3.718126288464071*^9, 3.718126289422575*^9}, {
   3.718126338761264*^9, 3.718126339968322*^9}, {3.7181264791790943`*^9, 
   3.718126479657609*^9}, {3.7181265373547983`*^9, 3.718126546842218*^9}, {
   3.7181265970990615`*^9, 3.7181266073140345`*^9}, {3.718126721342776*^9, 
   3.7181267222621794`*^9}, {3.7181267748304567`*^9, 3.718126775798683*^9}, {
   3.718126882916027*^9, 3.718126883779776*^9}, {3.7181269590981245`*^9, 
   3.718126959114726*^9}, {3.718127008348154*^9, 3.7181270098359036`*^9}, {
   3.7181271219797707`*^9, 3.7181271226272254`*^9}, {3.7181271776914654`*^9, 
   3.718127202770722*^9}, {3.718127294165536*^9, 3.718127299899836*^9}, {
   3.718127359676894*^9, 3.7181273632759686`*^9}, {3.7181274138177967`*^9, 
   3.718127417332405*^9}, {3.7181274825815573`*^9, 3.71812748350147*^9}, {
   3.71812753511213*^9, 3.7181275413698587`*^9}, {3.718127594998289*^9, 
   3.7181275955729785`*^9}, {3.7181276590806246`*^9, 
   3.7181276632882137`*^9}, {3.718127709177456*^9, 3.7181277200008087`*^9}, {
   3.718127782132445*^9, 3.718127782639307*^9}, {3.718127829320531*^9, 
   3.7181278298434877`*^9}, {3.718127905538423*^9, 3.7181279059095073`*^9}, {
   3.7183074150998783`*^9, 3.7183074158146863`*^9}, {3.7183075804502487`*^9, 
   3.7183075812916927`*^9}, {3.7183078009706855`*^9, 
   3.7183078013684273`*^9}, {3.7183079466990333`*^9, 
   3.7183079475396605`*^9}, {3.718307996460336*^9, 3.718307998419724*^9}, {
   3.7183080498436456`*^9, 3.718308050747766*^9}, {3.718308094154909*^9, 
   3.71830809942799*^9}, {3.718308154788558*^9, 3.718308155137972*^9}, {
   3.7183114839766426`*^9, 3.7183115107952385`*^9}, {3.7183116842540503`*^9, 
   3.7183116873704915`*^9}, {3.718465717915806*^9, 3.7184657527777147`*^9}, {
   3.71846581085695*^9, 3.7184658225189915`*^9}, {3.718465868201785*^9, 
   3.7184658684761925`*^9}, {3.7184659165642524`*^9, 
   3.7184659188283978`*^9}, {3.718465979116088*^9, 3.7184659954387255`*^9}, {
   3.7184660635622993`*^9, 3.7184660640725436`*^9}, {3.7184661099689393`*^9, 
   3.7184661191050625`*^9}, {3.7184661760735893`*^9, 
   3.7184662044208536`*^9}, {3.7184662825638885`*^9, 
   3.7184662837152343`*^9}, {3.718466341767213*^9, 3.718466343276473*^9}, {
   3.7184666767123933`*^9, 3.718466685230833*^9}, {3.7184667910175557`*^9, 
   3.718466794134696*^9}, {3.718467101486752*^9, 3.7184671166455326`*^9}, {
   3.7184671582944946`*^9, 3.7184671856736937`*^9}, {3.718467242946745*^9, 
   3.7184672441454716`*^9}, {3.718467298404379*^9, 3.718467301658263*^9}, {
   3.7184673409954023`*^9, 3.7184673799892817`*^9}, {3.7184674274396462`*^9, 
   3.718467428269721*^9}, {3.7184674868376884`*^9, 3.7184674923352118`*^9}, 
   3.7184675459554205`*^9, {3.718467592118187*^9, 3.718467598972686*^9}, {
   3.7184676519801865`*^9, 3.7184676540596266`*^9}, {3.7184677081798773`*^9, 
   3.718467716040614*^9}, {3.718467803741958*^9, 3.7184678059019613`*^9}, {
   3.7184678646313143`*^9, 3.718467880094392*^9}, {3.7184679382333927`*^9, 
   3.718467940167429*^9}, {3.7184679989065275`*^9, 3.718468004815586*^9}, {
   3.7184680661005087`*^9, 3.7184680735998907`*^9}, {3.7184681138334613`*^9, 
   3.71846816605155*^9}, 3.718468214283815*^9, {3.7184682985009975`*^9, 
   3.7184683207326345`*^9}, {3.718468369455149*^9, 3.7184683734297085`*^9}, {
   3.718468418790451*^9, 3.71846842371082*^9}, {3.71846849533243*^9, 
   3.718468498888534*^9}, {3.718468546003031*^9, 3.718468546464924*^9}, 
   3.718468595493745*^9, {3.718468648043507*^9, 3.7184686500268545`*^9}, {
   3.718468711310807*^9, 3.718468711763928*^9}, {3.718468759446125*^9, 
   3.7184687601643667`*^9}, {3.718468817596815*^9, 3.718468848093459*^9}, {
   3.718468912167852*^9, 3.7184689253356085`*^9}, {3.718468970050361*^9, 
   3.718468977586881*^9}, {3.7184690268748236`*^9, 3.718469085066457*^9}, {
   3.7184691413161173`*^9, 3.7184691437081614`*^9}, {3.718469199469284*^9, 
   3.7184692083333488`*^9}, {3.7184692691456275`*^9, 
   3.7184692782899766`*^9}, {3.718469392304347*^9, 3.718469395328211*^9}, {
   3.718469515130185*^9, 3.718469515761523*^9}, {3.7184696339807*^9, 
   3.718469645875003*^9}, {3.718469708613516*^9, 3.718469718419969*^9}, {
   3.718470030451933*^9, 3.718470039001573*^9}, {3.7184701236029415`*^9, 
   3.718470155802992*^9}, {3.718470217028361*^9, 3.718470231500252*^9}, 
   3.718470277053051*^9, {3.7184703292805557`*^9, 3.7184703301003785`*^9}, {
   3.718470406489481*^9, 3.7184704083205147`*^9}, {3.718470457718457*^9, 
   3.718470482006547*^9}, {3.718470515694368*^9, 3.71847051839158*^9}, {
   3.718470576768402*^9, 3.7184705844156003`*^9}, {3.718470664875435*^9, 
   3.718470665586844*^9}, {3.7184707448416295`*^9, 3.7184707453377104`*^9}, {
   3.7184709041002073`*^9, 3.71847090554939*^9}, {3.7184710354542556`*^9, 
   3.7184710436429977`*^9}, {3.718471104181461*^9, 3.7184711055154114`*^9}, 
   3.7184711701597376`*^9, {3.718471231823064*^9, 3.718471232436339*^9}, {
   3.718471285551015*^9, 3.7184712867658362`*^9}, {3.7184713410416346`*^9, 
   3.718471343559642*^9}, 3.718471394879924*^9, {3.718471482313266*^9, 
   3.7184714845759153`*^9}, {3.7184715447778845`*^9, 3.718471565112917*^9}, {
   3.7184716582437286`*^9, 3.7184716889894276`*^9}, {3.7184717675391903`*^9, 
   3.718471769838977*^9}, {3.7184718618905087`*^9, 3.718471864663912*^9}, 
   3.7184718998568172`*^9, {3.7184719341369963`*^9, 3.7184719519872217`*^9}, {
   3.7184720155699587`*^9, 3.718472021499782*^9}, {3.718472085955778*^9, 
   3.718472092722737*^9}, {3.718472157270297*^9, 3.7184721577341824`*^9}, {
   3.718472320065235*^9, 3.7184723205935416`*^9}, {3.7184724807647915`*^9, 
   3.7184724900166173`*^9}, {3.7184729351833963`*^9, 
   3.7184729405577593`*^9}, {3.7184739219158516`*^9, 
   3.7184739576896563`*^9}, {3.7184744194018764`*^9, 3.718474425035525*^9}, 
   3.7184755143009043`*^9, {3.718475549667655*^9, 3.7184755532681704`*^9}, {
   3.718475713966797*^9, 3.7184757360768433`*^9}, {3.718486799278085*^9, 
   3.718486818001199*^9}, {3.718486937487671*^9, 3.7184869457385178`*^9}, {
   3.7195792580153785`*^9, 3.7195792584475307`*^9}, {3.719579296415726*^9, 
   3.7195793343819156`*^9}, {3.719579498961565*^9, 3.7195795061447105`*^9}, {
   3.7195796279874535`*^9, 3.7195796437304134`*^9}, {3.7195809216636915`*^9, 
   3.719580946209027*^9}, {3.719581017912757*^9, 3.719581018631835*^9}, {
   3.7195812786226115`*^9, 3.719581299580862*^9}, 3.719581645511384*^9, {
   3.719581770696701*^9, 3.719581772221609*^9}, 3.7195818362169805`*^9, 
   3.7195822970682*^9, {3.7195827300533705`*^9, 3.719582732690276*^9}, {
   3.7195829152452836`*^9, 3.7195829352113333`*^9}, {3.719582991552219*^9, 
   3.7195829941927795`*^9}, {3.719583094568735*^9, 3.7195831076162663`*^9}, {
   3.719583177852125*^9, 3.7195831893652363`*^9}, {3.719583313869602*^9, 
   3.719583314932021*^9}, {3.7195837839559245`*^9, 3.719583787003111*^9}, {
   3.7195838540449657`*^9, 3.7195838543416557`*^9}, {3.719583913807062*^9, 
   3.719583915968214*^9}, {3.7195839730806*^9, 3.7195839739069657`*^9}, {
   3.7195840419802685`*^9, 3.7195840429647007`*^9}, {3.719584108564244*^9, 
   3.7195841090520353`*^9}, {3.719584164656478*^9, 3.719584166202141*^9}, {
   3.719584223451945*^9, 3.719584228606949*^9}, {3.7195843092988005`*^9, 
   3.7195843105956297`*^9}, {3.7195843825034037`*^9, 
   3.7195843834718094`*^9}, {3.7195844432152605`*^9, 
   3.7195844519880867`*^9}, {3.7195845173115563`*^9, 3.719584517906841*^9}, {
   3.719584582770274*^9, 3.719584585923309*^9}, 3.719584657660193*^9, {
   3.7195847878832283`*^9, 3.7195847887284513`*^9}, {3.7195848495004253`*^9, 
   3.7195848597707987`*^9}, {3.71958498064999*^9, 3.7195849816255875`*^9}, {
   3.7195850710775824`*^9, 3.719585072619693*^9}, {3.7195851357395773`*^9, 
   3.719585136746234*^9}, {3.719585985934868*^9, 3.7195859873897758`*^9}, {
   3.7195860487681923`*^9, 3.7195860495973997`*^9}, {3.719586128129712*^9, 
   3.7195861293258977`*^9}, {3.719586238769597*^9, 3.7195862413444605`*^9}, {
   3.719586313315282*^9, 3.7195863167995663`*^9}, {3.719586396049791*^9, 
   3.719586399408743*^9}, {3.719586477714718*^9, 3.7195864780024204`*^9}, {
   3.7195865339597855`*^9, 3.719586536390226*^9}, {3.7195865687024927`*^9, 
   3.7195865772777967`*^9}, {3.7195873064937644`*^9, 
   3.7195873080728407`*^9}, {3.719587463353217*^9, 3.7195874851918736`*^9}, {
   3.7195875621407843`*^9, 3.7195875627196646`*^9}, {3.7195876784000697`*^9, 
   3.719587678728096*^9}, {3.7195877314909687`*^9, 3.7195877326920676`*^9}, {
   3.719587790227979*^9, 3.719587791385828*^9}, {3.719587965935734*^9, 
   3.7195879662324257`*^9}, {3.719588021282386*^9, 3.719588024374019*^9}, {
   3.719588128905106*^9, 3.719588166421815*^9}, 3.7195882474044256`*^9, {
   3.7195883771489105`*^9, 3.7195884155682673`*^9}, {3.7195885013909674`*^9, 
   3.7195885021544614`*^9}, {3.719588626616554*^9, 3.7195886269765778`*^9}, {
   3.719588698154498*^9, 3.7195887172506742`*^9}, {3.719588786610024*^9, 
   3.7195887869381886`*^9}, {3.719588842557537*^9, 3.7195888769172983`*^9}, {
   3.719588975048947*^9, 3.7195889866220493`*^9}, {3.7195890427969165`*^9, 
   3.719589046105387*^9}, {3.7195891036867456`*^9, 3.7195891340311103`*^9}, {
   3.719589230261958*^9, 3.7195892317465*^9}, {3.7195893545073905`*^9, 
   3.719589358537743*^9}, {3.7195894299177094`*^9, 3.719589440369649*^9}, {
   3.71958950560632*^9, 3.719589511436285*^9}, {3.719589570494855*^9, 
   3.719589573792076*^9}, {3.719589664197217*^9, 3.7195896653540506`*^9}, {
   3.719589796939926*^9, 3.7195897986296034`*^9}, {3.719589889663597*^9, 
   3.7195898903661423`*^9}, {3.719589944948238*^9, 3.7195899604621887`*^9}, {
   3.71959001346682*^9, 3.7195900277708*^9}, 3.719590086593302*^9, {
   3.719590164006979*^9, 3.7195901684546375`*^9}, {3.7195903345995827`*^9, 
   3.71959033492774*^9}, 3.7195904032917795`*^9, {3.7195908902216787`*^9, 
   3.719590890614133*^9}, {3.719590949998256*^9, 3.7195909515570126`*^9}, {
   3.7195910439975624`*^9, 3.7195910443880143`*^9}, {3.719591119298934*^9, 
   3.719591148532943*^9}, {3.719591208930297*^9, 3.7195912092584586`*^9}, {
   3.7195912683853383`*^9, 3.7195912797519846`*^9}, {3.7195913508049436`*^9, 
   3.7195913513526373`*^9}, {3.719591862667823*^9, 3.7195918788246503`*^9}, {
   3.719591945432677*^9, 3.719591947287784*^9}, 3.719592023864645*^9, {
   3.719592084745936*^9, 3.719592087454048*^9}, {3.719592319639939*^9, 
   3.719592320011924*^9}, {3.7195924008493147`*^9, 3.7195924011772747`*^9}, {
   3.719592483962159*^9, 3.719592501679543*^9}, {3.719676263866779*^9, 
   3.719676264394186*^9}, {3.7196770059957647`*^9, 3.7196770068279805`*^9}, 
   3.7196772640149117`*^9, {3.7196773372937803`*^9, 3.7196773388940353`*^9}, {
   3.7196774315353937`*^9, 3.7196774327486196`*^9}, {3.7196775141093082`*^9, 
   3.7196775143811307`*^9}, {3.7196775921118183`*^9, 3.71967759594811*^9}, 
   3.719677673660042*^9, {3.719677751343948*^9, 3.719677752285832*^9}, {
   3.7196778375046015`*^9, 3.719677844815587*^9}, {3.71967802218888*^9, 
   3.719678022847017*^9}, {3.719678137232113*^9, 3.7196781376304703`*^9}, {
   3.719678274244687*^9, 3.7196782750245266`*^9}, {3.719678351329441*^9, 
   3.7196783527361927`*^9}, {3.7196784233097067`*^9, 3.719678424109135*^9}, {
   3.719678876540676*^9, 3.7196788772751355`*^9}, 3.719678928127678*^9, 
   3.7196790810659394`*^9, {3.7196792900792446`*^9, 3.719679290661189*^9}, {
   3.719679372578826*^9, 3.719679372946965*^9}, {3.719679536577202*^9, 
   3.7196795450776253`*^9}, {3.71967963966039*^9, 3.719679641177313*^9}, {
   3.7196797022566156`*^9, 3.719679703640903*^9}, {3.719679783663164*^9, 
   3.7196797851264277`*^9}, {3.7196798472180166`*^9, 3.719679848752884*^9}, {
   3.7196799002129016`*^9, 3.719679902638918*^9}, {3.719679965763715*^9, 
   3.719679972957015*^9}, {3.719680042602886*^9, 3.719680044411475*^9}, {
   3.7196801062806473`*^9, 3.719680107641728*^9}, {3.719680163131956*^9, 
   3.719680165670753*^9}, {3.7196802575279803`*^9, 3.719680260583584*^9}, {
   3.719680341350227*^9, 3.719680342014638*^9}, {3.719680725628562*^9, 
   3.719680726663065*^9}, {3.7196808151269884`*^9, 3.7196808163776913`*^9}, {
   3.7196809326321993`*^9, 3.719680933142199*^9}, 3.7196810614348474`*^9, {
   3.7196812199210477`*^9, 3.7196812209839616`*^9}, {3.719681280601135*^9, 
   3.7196812846808357`*^9}, 3.7196813613387847`*^9, 3.7196814300320096`*^9, {
   3.719681517304864*^9, 3.7196815182105255`*^9}, {3.71968163034978*^9, 
   3.719681638665908*^9}, {3.7196817228593507`*^9, 3.7196817238567276`*^9}, {
   3.719681778424108*^9, 3.719681779313679*^9}, 3.719682017617007*^9, 
   3.719682083727356*^9, {3.719682307027517*^9, 3.7196823122169185`*^9}, {
   3.7196823681997347`*^9, 3.719682370528077*^9}, {3.7196824605106497`*^9, 
   3.719682460907647*^9}, 3.7196825156156654`*^9, {3.719682594433069*^9, 
   3.7196825996216836`*^9}, 3.7196826963887634`*^9, {3.7196828020928574`*^9, 
   3.7196828094959764`*^9}, {3.7196829000537815`*^9, 
   3.7196829084951944`*^9}, {3.7196829687812605`*^9, 
   3.7196829750143385`*^9}, {3.7196830388546925`*^9, 3.719683039465969*^9}, 
   3.719683211256321*^9, {3.719683273378443*^9, 3.719683274159999*^9}, 
   3.7196833334924917`*^9, {3.719683391486043*^9, 3.7196833929422493`*^9}, 
   3.7196834670189195`*^9, {3.7196835385344715`*^9, 3.7196835403481426`*^9}, 
   3.719683598403265*^9, 3.7196836664992456`*^9, {3.719683741728691*^9, 
   3.7196837428055773`*^9}, {3.7196839935941353`*^9, 3.719684002598155*^9}, {
   3.7196840648711543`*^9, 3.71968406520605*^9}, {3.719684145717125*^9, 
   3.7196841551582575`*^9}, {3.7196842168072*^9, 3.719684221205902*^9}, {
   3.7196842775758057`*^9, 3.7196842778144407`*^9}, {3.7196843679732075`*^9, 
   3.71968436839032*^9}, {3.7196845286004167`*^9, 3.71968453007135*^9}, {
   3.719689293898493*^9, 3.7196893014014916`*^9}, {3.7197507450440273`*^9, 
   3.71975075568039*^9}, {3.7197508336823072`*^9, 3.7197508340172253`*^9}, {
   3.7197509710435195`*^9, 3.7197509722747774`*^9}, {3.7197510846749516`*^9, 
   3.719751093075292*^9}, {3.7197536073115587`*^9, 3.7197536103346014`*^9}, {
   3.719763415746185*^9, 3.719763416482315*^9}, {3.719763557668811*^9, 
   3.7197635584130354`*^9}, {3.7197636579034786`*^9, 
   3.7197636694870186`*^9}, {3.719763737088541*^9, 3.7197637377334304`*^9}, {
   3.719763815827739*^9, 3.7197638162025733`*^9}, {3.719763952518857*^9, 
   3.7197639533464885`*^9}, {3.71976420751054*^9, 3.719764212326335*^9}, {
   3.719764291216848*^9, 3.719764293596089*^9}, 3.719764393553385*^9, {
   3.7197644480886765`*^9, 3.7197644510453014`*^9}, {3.7197645874704466`*^9, 
   3.719764587909299*^9}, {3.7197646515314465`*^9, 3.719764680015334*^9}, {
   3.719764858911066*^9, 3.719764860031741*^9}, 3.719845253286975*^9, {
   3.719845496296767*^9, 3.719845543528284*^9}, {3.71984723584814*^9, 
   3.7198472528989277`*^9}, {3.719847804986738*^9, 3.7198478080547004`*^9}, {
   3.7198485461679935`*^9, 3.719848549539918*^9}, {3.7198497339342823`*^9, 
   3.719849736966198*^9}, {3.719849809878644*^9, 3.719849840779941*^9}, {
   3.7198498722551785`*^9, 3.7198498740211687`*^9}, {3.7198501927849817`*^9, 
   3.7198502039647017`*^9}, {3.719850309858729*^9, 3.719850310561886*^9}, {
   3.7198503413941016`*^9, 3.7198503502482944`*^9}, {3.7198503845238523`*^9, 
   3.719850386086343*^9}, {3.7198504570924387`*^9, 3.719850463953076*^9}, {
   3.719850518538866*^9, 3.7198505200234027`*^9}, {3.719850578614622*^9, 
   3.719850579318037*^9}, {3.7198506528866715`*^9, 3.7198506537617836`*^9}, {
   3.719850726014327*^9, 3.71985072673316*^9}, {3.719850784620494*^9, 
   3.7198507855424623`*^9}, {3.7198509631235247`*^9, 
   3.7198509634985676`*^9}, {3.7198510380367146`*^9, 
   3.7198510389748554`*^9}, {3.7198511113369184`*^9, 3.719851111633992*^9}, {
   3.7198511863732967`*^9, 3.719851188732923*^9}, {3.7198512453460426`*^9, 
   3.7198512459554815`*^9}, 3.719852198261549*^9, 3.719855004027569*^9, {
   3.7198574584754305`*^9, 3.7198574669351053`*^9}, 3.7198576755538645`*^9, {
   3.719857807741104*^9, 3.7198578082257347`*^9}, {3.7198584353167396`*^9, 
   3.719858435738824*^9}, {3.719858511026016*^9, 3.719858512608221*^9}, {
   3.7198586146883774`*^9, 3.7198586240481944`*^9}, {3.7198586992154827`*^9, 
   3.7198587051833043`*^9}, {3.719858773232716*^9, 3.719858775598981*^9}, {
   3.7198588475226383`*^9, 3.7198588538223658`*^9}, {3.7198589228573923`*^9, 
   3.719858925002078*^9}, {3.7198590247485304`*^9, 3.7198590250924425`*^9}, 
   3.7198599987960644`*^9, {3.7198601397396226`*^9, 3.7198601471994514`*^9}, {
   3.7198602068238935`*^9, 3.719860208556498*^9}, 3.7198619992516403`*^9, {
   3.7198622463692904`*^9, 3.719862252840296*^9}, {3.7198623779987698`*^9, 
   3.719862385297601*^9}, {3.719862451206191*^9, 3.7198624520811863`*^9}, {
   3.719862513453104*^9, 3.7198625139842467`*^9}, {3.7198625715206017`*^9, 
   3.719862572186927*^9}, {3.7198631628518696`*^9, 3.7198631643107204`*^9}, {
   3.719863250483753*^9, 3.7198632513620934`*^9}, 3.7199443017625475`*^9, {
   3.719944566004468*^9, 3.7199445662791977`*^9}, {3.7199446404410534`*^9, 
   3.719944646670618*^9}, {3.719944711120508*^9, 3.7199447258771977`*^9}, {
   3.7199448431594534`*^9, 3.719944843475684*^9}, {3.7225783183939705`*^9, 
   3.7225783235155497`*^9}, {3.7225798589847345`*^9, 3.722579893684168*^9}, {
   3.7239051317249317`*^9, 3.7239051330213013`*^9}, {3.7239052313383913`*^9, 
   3.723905232933097*^9}, {3.7239058822442336`*^9, 3.723905882695431*^9}, {
   3.723906099077862*^9, 3.723906099857636*^9}, {3.7239062504797096`*^9, 
   3.723906250815158*^9}, {3.723906517945977*^9, 3.7239065195089474`*^9}, {
   3.7239066536975174`*^9, 3.723906655185789*^9}, {3.7239068062712092`*^9, 
   3.7239068071349683`*^9}, {3.723907541335802*^9, 3.7239075486521063`*^9}, {
   3.7239077408127117`*^9, 3.7239077458345995`*^9}, {3.723907863865996*^9, 
   3.723907864337206*^9}, {3.7239082889186783`*^9, 3.7239082893478675`*^9}, {
   3.7239084696021433`*^9, 3.723908470326251*^9}, {3.723908606864607*^9, 
   3.72390860723815*^9}, {3.7239088254110823`*^9, 3.7239088256625495`*^9}, {
   3.7239093444127874`*^9, 3.7239093447452965`*^9}, {3.7239096980825267`*^9, 
   3.7239096983076496`*^9}, {3.723910136514007*^9, 3.7239101371140914`*^9}, {
   3.723910371371704*^9, 3.7239103720201297`*^9}, {3.7239105058867226`*^9, 
   3.723910506182049*^9}, {3.723910892673862*^9, 3.723910892830597*^9}, {
   3.7239110774532146`*^9, 3.723911077769127*^9}, {3.7239112161921463`*^9, 
   3.723911216566649*^9}, {3.723911382036188*^9, 3.7239113823403835`*^9}, {
   3.7239117556455345`*^9, 3.723911755906763*^9}, {3.723911870211233*^9, 
   3.7239118707566347`*^9}, {3.723911943949043*^9, 3.723911944242978*^9}, {
   3.723912084847165*^9, 3.7239120860946918`*^9}, 3.7239122194314795`*^9, {
   3.723912673860669*^9, 3.7239126740916204`*^9}, {3.72391283880873*^9, 
   3.723912845081128*^9}, {3.7239129343260727`*^9, 3.7239129394915075`*^9}, 
   3.723913061241887*^9, 3.723914649898758*^9, {3.7277026271478615`*^9, 
   3.7277026493434834`*^9}, {3.727703354533304*^9, 3.7277033603423405`*^9}, {
   3.7277034684462833`*^9, 3.7277034742868433`*^9}, {3.727703931558593*^9, 
   3.7277039381008053`*^9}, {3.7277055434388876`*^9, 
   3.7277055648557773`*^9}, {3.7277125377036824`*^9, 
   3.7277125422508445`*^9}, {3.734868586189165*^9, 3.734868602335432*^9}, {
   3.734868781332365*^9, 3.7348687972084894`*^9}, {3.73486948559657*^9, 
   3.734869486265407*^9}, {3.734872323295432*^9, 3.7348723331446114`*^9}, {
   3.73487399117463*^9, 3.73487401388793*^9}, 3.73487463382098*^9, 
   3.7348752155708976`*^9, {3.73487524844972*^9, 3.734875257175599*^9}, {
   3.7349689716862183`*^9, 3.734968984435136*^9}, {3.780722638918116*^9, 
   3.7807227144353666`*^9}, {3.780722769751727*^9, 3.780722773128957*^9}, {
   3.780724902395007*^9, 3.7807249407429695`*^9}, {3.7807249910661683`*^9, 
   3.7807251429695206`*^9}, {3.7807252604870043`*^9, 3.780725271983713*^9}, 
   3.7807320150046225`*^9, 3.780732095516895*^9, {3.7807321427915792`*^9, 
   3.780732143581259*^9}, {3.7807325688381414`*^9, 3.780732569296898*^9}, {
   3.7807326115750737`*^9, 3.780732734877493*^9}, {3.7807332205720177`*^9, 
   3.7807332291974764`*^9}, {3.7807334272453136`*^9, 
   3.7807334597077355`*^9}, {3.780733830124441*^9, 3.78073383088546*^9}, {
   3.780734232053276*^9, 3.780734233181323*^9}, {3.780734315580619*^9, 
   3.7807343382595215`*^9}},ExpressionUUID->"3eb7cfc1-46e5-41c0-96d2-\
2284fc17e180"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0., 4.784313725734453}, {0.1, 6.190243961628776}, {0.2, 
         6.142894413328621}, {0.30000000000000004`, 5.905708510983807}, {0.4, 
         5.7916977103646525`}, {0.5, 5.818367101529415}, {0.6000000000000001, 
         6.165453841506734}, {0.7000000000000001, 6.763303709361873}, {0.8, 
         7.384515273522988}, {0.9, 7.821538599690157}, {1., 
         8.172601894533798}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0., 1.391204477814127}, {0.1, 1.4007586696422485`}, {0.2, 
         1.3813009021968399`}, {0.30000000000000004`, 1.3306353394563444`}, {
         0.4, 1.2627036920786507`}, {0.5, 1.154038658620511}, {
         0.6000000000000001, 1.0705093736139024`}, {0.7000000000000001, 
         0.9762997339367498}, {0.8, 0.9630317731426461}, {0.9, 
         0.9491637678287811}, {1., 0.8726949746148444}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0., 3.569497934644182}, {0.1, 2.0870591662798517`}, {0.2, 
         1.7491489956017168`}, {0.30000000000000004`, 1.9533783401797395`}, {
         0.4, 2.0196511419728544`}, {0.5, 2.2075436560701007`}, {
         0.6000000000000001, 2.2288922427506628`}, {0.7000000000000001, 
         2.2457607871476464`}, {0.8, 2.1182678539843227`}, {0.9, 
         2.00171100053819}, {1., 1.992079545630928}}]}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 8.172601894533798}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Total Resources\"", "\"Consumer\"", "\"Predator\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7807249468569384`*^9, {3.7807249929496613`*^9, 3.78072509433034*^9}, {
   3.780725126252092*^9, 3.7807251438572173`*^9}, 3.7807252739695845`*^9, 
   3.7807263785657187`*^9, 3.7807320174833035`*^9, {3.780732137308881*^9, 
   3.7807321450131636`*^9}, 3.7807325702666645`*^9, {3.780732613506837*^9, 
   3.7807326488915763`*^9}, 3.780733285706661*^9, 3.7807334325480084`*^9, 
   3.780734234315138*^9, 3.780734319616521*^9},
 CellLabel->
  "Out[3079]=",ExpressionUUID->"8955875c-0406-4430-9278-44d76be15d3f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "This section is to save the results ",
 StyleBox["with ", "Subsection"],
 StyleBox["fixed e2 and p", "Subsection",
  FontWeight->"Bold"],
 StyleBox[" values but ", "Subsection"],
 StyleBox["\[Alpha] varying from 0 to 1", "Subsection",
  FontWeight->"Bold"]
}], "Subsection",
 CellChangeTimes->{{3.722579918705484*^9, 
  3.722579950439159*^9}},ExpressionUUID->"51acba99-e8c7-42cc-9391-\
148add21744b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", " ", "=", " ", 
   RowBox[{
    RowBox[{"Reap", "[", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{"NDSolve", "[", 
          RowBox[{"eqs", ",", " ", 
           RowBox[{"{", 
            RowBox[{"Res1", ",", " ", "Res2", ",", "Con", ",", " ", "Pred"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Sow", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Res1", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Res2", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",",
               " ", 
              RowBox[{"{", 
               RowBox[{
               "t", ",", " ", "8000", ",", " ", "10000", ",", " ", "0.01"}], 
               "}"}]}], "]"}], "//", "Mean"}]}], "}"}], "\[IndentingNewLine]",
          "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", "1", ",", " ", "0.2"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<K:\\\\IGP exp_in lab\\\\ProgressReport_20171115\\\\Type2.csv\>\"", 
    ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"aa", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.718471959583766*^9, 3.7184719790760336`*^9}, {
   3.718472099816351*^9, 3.718472138107117*^9}, {3.718472230043913*^9, 
   3.7184722694540415`*^9}, {3.718472980476659*^9, 3.71847298100642*^9}, {
   3.7184757560472913`*^9, 3.718475757306547*^9}, {3.718487806923459*^9, 
   3.7184878100619802`*^9}, 3.719684562555911*^9, {3.722579959963993*^9, 
   3.722579968316969*^9}, 
   3.780725313518814*^9},ExpressionUUID->"2a975dd8-20e0-4e04-baa1-\
67d9b38ce3e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
This section is to save results with e2 varying from 0 to 0.5, p varying from \
0 to 0.15 and \[Alpha] varying from 0 to 1\
\>", "Subsection",
 CellChangeTimes->{{3.7225799862709484`*^9, 3.722580101277014*^9}, {
  3.7239146871612854`*^9, 
  3.723914692975872*^9}},ExpressionUUID->"f03b609c-e30c-428b-978d-\
6c98029ff8a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "1.71641"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K1", "=", 
   RowBox[{"8.13829", "*", "1.3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "1.71641"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K2", "=", 
   RowBox[{"8.13829", "*", "1.3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e1", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", "0.38580"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h2", "=", "0.35959"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Res1", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"r1", "*", 
        RowBox[{"Res1", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Res1", "[", "t", "]"}], "K1"]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"A", "*", "p", "*", 
           RowBox[{"Res1", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S1", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "*", 
           RowBox[{"Res1", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Res2", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"r2", "*", 
        RowBox[{"Res2", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Res2", "[", "t", "]"}], "K2"]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"A", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "*", 
           RowBox[{"Res2", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S1", "*", "p", "*", 
           RowBox[{"Res2", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"B", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"B", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{"M", "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S2", "*", "\[Alpha]", "*", 
           RowBox[{"Con", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"e1", "*", "S1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"e1", "*", "S1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"e2", "*", "S2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}], "-", 
       RowBox[{"d", "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Res1", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Res2", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.722580956639426*^9, 3.7225810295920343`*^9}, 
   3.7239146994325933`*^9, {3.7239151731379385`*^9, 3.7239151865356827`*^9}, {
   3.7239159934099417`*^9, 3.7239160011440673`*^9}, {3.723916118893922*^9, 
   3.7239161226549425`*^9}, {3.7239161687227097`*^9, 
   3.7239162618944707`*^9}, {3.723916328383267*^9, 3.7239163655246058`*^9}, {
   3.7277026139957204`*^9, 3.727702614419919*^9}, {3.734872020183792*^9, 
   3.734872027145296*^9}, {3.7348753144438705`*^9, 3.7348753150073404`*^9}, {
   3.7349341598734374`*^9, 3.734934164809789*^9}, {3.7349531970369377`*^9, 
   3.734953212262684*^9}},ExpressionUUID->"8eff09f7-de33-43f4-8799-\
a4685bfd7f1b"],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"aa", " ", "=", " ", 
     RowBox[{
      RowBox[{"Reap", "[", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
          RowBox[{"sol", "=", 
           RowBox[{"NDSolve", "[", 
            RowBox[{"eqs", ",", " ", 
             RowBox[{"{", 
              RowBox[{
              "Res1", ",", " ", "Res2", ",", "Con", ",", " ", "Pred"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"tab", " ", "=", "  ", 
           RowBox[{
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Res1", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Res2", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",",
               " ", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "t", ",", " ", "8000", ",", " ", "10000", ",", " ", "0.01"}], 
               "}"}]}], "\[IndentingNewLine]", "]"}], "//", "Mean"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Sow", "[", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "tab"}], "}"}], "\[IndentingNewLine]", 
           "]"}], ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "0", ",", "1", ",", " ", "0.2"}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "\"\<E:\\\\Research_MonthBackup\\\\IGP_LabExp\\\\Analysis\\\\\
Type2ModResults_K_up\\\\Type2_e2_\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"e2", "*", "10"}], "]"}], "<>", "\"\<_p_\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"p", "*", "100"}], "]"}], "<>", "\"\<.csv\>\""}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "4", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "6"}], "}"}]}], "]"}]}], "]"}], ";"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"e2", ",", " ", "0", ",", " ", "0.5", ",", " ", "0.01"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"p", ",", " ", "0", ",", " ", "0.2", ",", " ", "0.01"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.723916379310976*^9, 3.7239163846541204`*^9}, {
   3.7239164422738476`*^9, 3.7239165338735423`*^9}, {3.7239170117568884`*^9, 
   3.723917012276288*^9}, {3.723917401451458*^9, 3.723917440154925*^9}, {
   3.7239182429961*^9, 3.723918260763708*^9}, 3.7348722757520638`*^9, {
   3.73487546480079*^9, 3.7348754847201595`*^9}, {3.7348758192887955`*^9, 
   3.7348758275276203`*^9}, {3.734875961585166*^9, 3.7348759625341873`*^9}, 
   3.734876005784177*^9, {3.734876145486144*^9, 3.73487614773487*^9}, {
   3.73493418266281*^9, 3.734934183872004*^9}, {3.7349532193797503`*^9, 
   3.734953225246961*^9}},ExpressionUUID->"1eab802c-47b8-4a74-8cad-\
f1b446760edd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "21"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "21"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "21"}], "}"}]}], "]"}]}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Total Resources\>\"", ",", " ", "\"\<Consumer\>\"", ",", " ", 
      "\"\<Predator\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",ExpressionUUID->"b792a8ae-b31d-4cdc-825d-01d37eb29370"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQOzSovO37sh4TBrJgistFe6dVmZOxLG32k/5dbJ
CFcTCQcTYxA4bH+z4VeeexRM/qR9a66XdIqyhAPEtAv2XWqHz675IQ5Vf9k+
WTlU5aeUhEN6GghcsxfbOtn+719xqP6b9lPFD3fEWkk4nD0DAnfs3QQm8Fiv
gpn3wJ7fsWOT8xOYfQ/te7bf7Fi2XhJq/mP72N8s6mu6paD6n9hHrSrucZ8p
DbXvmf0PBUOxDaUyUPNe2Icws8zRiJOFmvfSvsDezW5pkRzUvNf2KtM3PfuR
LA817439ryZvu8PKClDz3tm3vAmXt65RgJr3wX7Gk2AViQsKDgDP7opC
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQOG1472v8j4aj9rJgistOd1KfPdEQzj77TnZbU+
mWH+1d7EGAQO2/tum3bAQBQmf9JeU1NjjvmTL/YQ0y7YJ7D5cC+e/wWq/rK9
yry9vqsSvtinp4HANfv1MbuSSt9/huq/aa8kdpSluPyz/dkzIHDH3ikrp+zs
609Q8x7YZ6tULbnu8wmq/qF9d+qplc/OfISa/9h+6QN9092KH6H6n9ibC8nW
71z6AWrfM/v7eVt7uAw/QM17YR+Qcs66lu091LyX9onrzz113PsOat5re8t3
L8/lfngLNe+N/bfs9dxbP7+FmvfOfuP6K4fqNd9Czftg3962c2L5sjf2AKtq
njw=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMb1/03Fy/8aT9rJgistL/++PznzAwYf6f94xtn
VF3W/7Q3MQaBw/brdnZZBkXD5E/aSx7kPbts8k97iGkX7Hs2ujH/lP4FVX/Z
/s8r+Sz9/p/26WkgcM3+XUOGv0XiL6j+m/ZhFVt2Wcr9tj97BgTu2B8SufHC
6eBvqHkP7J1U5Rss9/2Gqn9oz3Q+TWjfv99Q8x/b83w2yX1t/Aeq/4l9YNqv
/Te+/4ba98xeaxnvtRltMPNe2Jtwps+ZoQMz76U9X/rnqjVuMPe+tnc587X0
g/FPqHlv7LdbT177LPQH1Lx39gnBH+K3L/sONe+D/VtV1+3uFt/tAVeAoWI=

         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {0, 8.40643418811878}}, PlotRangeClipping -> True,
      ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 8.40643418811878}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Total Resources\"", "\"Consumer\"", "\"Predator\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.722581107507036*^9},ExpressionUUID->"e4498880-5b30-428c-92d3-\
3cfc6b2f0916"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Model results with type I functional response", \
"Section"]], "Subsection",
 CellChangeTimes->{{3.7185325963578334`*^9, 3.718532604238615*^9}, {
  3.7225801527800884`*^9, 
  3.722580162601801*^9}},ExpressionUUID->"942d5e99-2d11-4cbe-a38a-\
ba37faaaf212"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "2.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K1", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "2.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"K2", "=", "50"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", "0.3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "0.7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e1", "=", "0.3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e2", "=", "1.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "2.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "0.75"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqs", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Res1", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"r1", "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Res1", "[", "t", "]"}], "K1"]}], ")"}]}], "-", 
        RowBox[{"A", "*", "p", "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"S1", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}], "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Res2", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"r2", "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Res2", "[", "t", "]"}], "K2"]}], ")"}]}], "-", 
        RowBox[{"A", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}], "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"S1", "*", "p", "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"B", "*", "A", "*", "p", "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "+", 
        RowBox[{"B", "*", "A", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}], "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"M", "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"\[Alpha]", "*", 
         RowBox[{"Con", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"e1", "*", "S1", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}], "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}], "+", 
        RowBox[{"e1", "*", "S1", "*", "p", "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}], "+", 
        RowBox[{"e2", "*", "\[Alpha]", "*", 
         RowBox[{"Con", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}], "-", 
        RowBox[{"d", "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Res1", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Res2", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aa", " ", "=", " ", 
   RowBox[{
    RowBox[{"Reap", "[", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{"NDSolve", "[", 
          RowBox[{"eqs", ",", " ", 
           RowBox[{"{", 
            RowBox[{"Res1", ",", " ", "Res2", ",", "Con", ",", " ", "Pred"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Sow", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Res1", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Res2", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",",
               " ", 
              RowBox[{"{", 
               RowBox[{
               "t", ",", " ", "8000", ",", " ", "10000", ",", " ", "0.01"}], 
               "}"}]}], "]"}], "//", "Mean"}]}], "}"}], "\[IndentingNewLine]",
          "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", "1", ",", " ", "0.01"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Total Resources\>\"", ",", " ", "\"\<Consumer\>\"", ",", " ", 
      "\"\<Predator\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7185317057375917`*^9, 3.7185317113785973`*^9}, {
   3.718531741651435*^9, 3.7185318424595175`*^9}, {3.7185321309933896`*^9, 
   3.718532165472278*^9}, {3.718532291026865*^9, 3.718532350097881*^9}, {
   3.7185324744141426`*^9, 3.7185324799257917`*^9}, 3.7185327100850754`*^9, {
   3.7185329806648417`*^9, 3.7185329860553975`*^9}, {3.718533184681371*^9, 
   3.7185331907828116`*^9}, {3.7185332347111635`*^9, 
   3.7185332510535345`*^9}, {3.718533377998*^9, 3.718533380708382*^9}, {
   3.718533664589226*^9, 3.7185336658050184`*^9}, {3.7185338259180627`*^9, 
   3.718533835847007*^9}, {3.718533867625845*^9, 3.718533892919956*^9}, {
   3.718534129234771*^9, 3.7185341627600584`*^9}, {3.718534322964924*^9, 
   3.7185343959268727`*^9}, {3.71975199693289*^9, 3.719752054116332*^9}, {
   3.7197520894304748`*^9, 3.719752124053776*^9}, {3.719752655913686*^9, 
   3.7197526656906853`*^9}, {3.7197526966349745`*^9, 3.719752697385972*^9}, 
   3.7197539110392523`*^9, {3.719754034416345*^9, 
   3.7197540346860657`*^9}},ExpressionUUID->"3a05458d-e6c5-43b8-b723-\
11ce0d644293"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw1kglMk2cYxxnoFjC6iLqJTHAy5fvaQi/ackz+r4hHMNGBQ7YFdeo8kCA6
YYugQiImKhpF0InbIBuILpM6nUE3xSHHtCKHF4WChYIthR4MFKOAc7R7+iRf
vnzH+xy/3/PhhtS4Te5ubm6bxi/H3RXFN66mtFfwLHO6eqkhIwfdKVVv1IWu
5wLUFfccPrSPZ9f8DlhirxVBd2qiKXmT63sp0qbW1qxewbMzhY74BS+9tlyO
CXP9r0b3Kq3vsvk8s8Y63lxCRMkPi1fOcJ2/AkVD5ydfvs0zL23JjgVeV5F7
Pj088xVH+f5A6l92XbGdY3ziseph7gYW55WbGowc5b+JKwkT7BM6OVY6flpb
UoWXt+PXROs4qncLPjexN1fLMbkzaqAwa75ua+Gofi2U7mcQ1MqxmmFuvEId
uB5x9YF2jvq5jY7YeRWGLo7FOQvegW9v2hWYXf1pcDn/b3nRIMcMGY6Ed1E5
uerg6Jir33sQiNaa4r14ttPR3o4G7LGsWPurj4tPI2Zy8YZXAp79b6MZI9+V
A5E8zdMMvXAPv3sVz5Y5C9xH5NoI8dltLp73kfqRrLpqP88c1RKPPcDCCmuI
poineR+iu/b6ePDMOY72IfJKFSkndS7+j9CcVRm1apRn/o52/B5jaO5kn6HZ
AuLxGB+0Vv+2PUrAtmx2RAu2KZ+p67YKiI8WltrKH58dFzBHtulqLbgjRuvz
PwXEqxWzspKH6kwC9sKRbrgVpW5Blg3ThcSvDd7GnNHbi4Qs0plQh/PpNvFg
mpB46nC3/9xe3Tkhc7Z3oB3bAzfUZHUIiW8H8psMmg5vEWu454gO6JvU0bYY
EfF+Aum6Ww8u5IjYDGeDeqx/LX7zXpWI+OuReVG/MPC1iDnTJXaiMVnq1hYR
RD66EG6/fjRwTxDN04WNvcOiKTeDyE8XopNt7x58K5jm64JeNfLZ8SXB5MuA
nxft9J17NJjmNWDo988TQx8Hkz8Dnjf5TWv0E9P83Wh5Hi3QJ4nJZzdiCn2z
N1aIiUc3Pg27tkvkLiG/PZi3YE5BBy8hPj3QXA3JRpyEfPegzDvoRFymhHg9
hbq203/aWQn5f4qshFmZ+5okxO8p6sNfDOaNSGgfjNg1SdwUM19KPI1YXvzN
F2VxUtoPI16dvdP6U5aU+JoQsKbySHi5lPbFBOOa9oqUdinxNsEz13wy1EtG
+9OLgNehW06HyYh/L4r9/918OElG+9QL/cr85klnZOTDjEOe9Xqfehn5MGNw
X+i9S2My8mFG1uSMh83BcvJhxu6KbHHaejn56MOFEq1vYYGcfPQhKqDv0cd3
5OSjDzeiFp1OHJOTj3541LSVDktC2HGnj37kFCyNmLg5hHz0o1M6pejg9yHk
w4KVzx5N3Xs/hHxYcGp/yZPOdxTkw4J1Ef7L1ZEK8mFF9vs1ZcZ0Bfmw4quW
mWx/uYJ8WFGSZE/KMSrIhw0JytwM02wl+bBhSkpPfdlqJfmwobdfc736mJJ8
2OHZ6H9BpVGSDzuEA+4eHh4q8mFHUeuoYO4CFfkYALYG5p/4VkU+BmAZWX8x
9rKKfAwgQpX6MtGmIh//oCxgjvUSF8r+A+Jf9nc=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw1kglQlHUYxvcUtLYU0HGqhcGK0EwTtNEKn88jpUwJRB0TywtQ81gcwRVx
lYYzC0xRwTMGR0ZTVHBERsEDyDsVtUVR2MNl74NjAXfZ3dj9Xt+Zb775jv/7
Ps/ze0NXbIxL5HE4nMSBy3t/U9ujokbmLB/EbAuqmK1Mz8K0J8dqjVPePBch
SFrGDA0YxFwKzjbGXjqKHSPVfna9kL4fR6kqXXboupA5WOKtkzhwuChQWCKk
/ytQoJr/ZaREyJhivW/OQ6YoX/PJ7DfnL8DlCflALRYyQ+Rlkqgh1fi4uO5B
creA+tXg+tE7wuo7AmZ0QuENe/gVeFyl05v+ElD/Otzy+010OU3AHB84LS+7
Brcn07bpewHNu44F/gFSZ6iAifRVPdZxxJELe/k0vwHirWcrs+7xmXp7+MCE
Rgzxf5ifV8onPTfxZ1vM3JVpfCbON/AW+luL946Ywyd9tzHhV1l3WQifUaZ7
G95B8RbRYFE3j/TeQ4jfj7/Mv8VjUrzyJPdRmBd7UXqYR/r/RRM3P1sm4TEs
jYc4kidKTZrJIz8PMU81MTRiJI+J9g14hCkfrg9TG7nk7xHGqN8J3XaVy3in
JRQ2oaZl7BnnHi75fQxzWtJAcRmfHfljTJLWaK9M4ZL/J9Auj7/LEXGZEK+c
4KeoSFtzKlLBoTye4pCLK15UxWGSvW2S/oMus6lmXQ6H8pGjKvfdEWmLOYy3
W1CFHHdzpzduHsuhvJoxlmEqn7g96PG2szfjQEztjXPHPWDze4as+PflO7/z
YKqv4XMsG/5CGG1zg83zOd7m7l82eL8bPnnZLQiJLu+6+ZUbbL4v8LvQ1Jij
dOH+PW+9wKYTm5ujc11g836JGcOmhg37zIXhPoGtmMuxlKma+sHm34q48j9w
TdoPX7uENozWRStOB/eD5aHAhoBxSX83OMH6UWDq0o6TdWudYPkowFtxNkM/
1En+FDh26EL5uGoHWF5KSBJnmnYvdZBfJZRBifxAgQMsPyUWnjt1pPrUa/Kv
gvS1cGVm7GuwPFWoOlPUuamvj/JQQeXYrCo41geWrxol7uKr8ll9lI8a6WuP
in6w9ILFo0ble+WzHPt6Ka9XeJAysaU5qhcs/1dYcIIfYdH0UH6v0O4xl39d
0AN2HzRoEN8u/OeLHspTg0XpcyIK2uxg90ODJam2+/vy7JRvO+wHFfvbJtjB
7ks72ra2XFzf0k15t2NeW+jc6dndYPdHC4Pfqg0/j++m/LVYXnr+o5vPusDu
kxZx7jUbt2V1EQ8d+naMnyEb30U8dIiXvcx/9LyTeOhQv102aktOJ/HQ4bH4
G6UkopN46PFTcG7htdYO4qFHMafGmLyrg3jocV667uTqyR3EwwBrb0xKg8aG
3T4eBmQEf67M2GsjHgYYXI5de6fZiIcRfFNuV6DCSjyM0MQXxdRHWYmHESsF
3GGTD1uIhwkRiz/1S3WaiYcJG5xuY8YSM/Ewwap7a1XcFRPxMENTVeruFZuI
hxmtS0yTJDuNxMMMkTBwY63aQDwsMHgWO5SzDcTDgjGrZwUqTuuJhwV7YhsV
NQF64mFFsyMuNWWrjnhYcXlE2AN/pZZ4WLEjJaE581st8bBBLA5Pbq1sx/+A
chdm
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw1kwtMU3cUxktLKW1pe69SFl3AucQIbvGZ4APl+09xoLIhCDhmo0AEROdr
8QVsAR/NYCYiUB847SAQgcw122Q+qhtOZMKkRnlYcCAtIIUCZVuCQwh0tDue
5Obmvs75vu937tzk/TEpQoFAkDJ9uM5vyrQ7vvhWkwfL8jWEWzNPIeWMtrF0
ppCuddDnBtRtiRWyWwHawehbeqx6O3J9o+7N83JoS5NmSluF7FKxq6ow1rF0
XKIW0fsGRHZubPg9VsSGol13fkRL5/tx63Qi+r4aXx8tPJrVLGIyc9mBNbKb
EOZUqfbO8KR+t/G9V7TQL9qTBWny748G3sXpkthVh/I9qf+vCA+oqNSaPFn5
9NfmsnvIz/kmLEIupnm/4biHv48xQsyWuasWswV9onatmOY/wBZb9fKy+2JW
Oxo4PaEOaWPZRj+nmPQ8RN9YxdUlIV4sxj2wHgUDgQH/HPEifQ2o2tGwMf4n
L2bNdDX8A2H+Eds1w16ktxHlztxCYaCEHXTJO2DClPOXoPBkCel/DGNZwb7A
yxL2P40naIr9qLq8VUJ+niC4dyreqPRmEe4BT7FAfflOWrg3+XuKFxfnbf4u
25u5pmnym/BFUd3pkze9yW8zRsYd0+XN3HbMzfhEnCkamicl/y3gxTWaDI2U
zXHJCWjFpN1w4VyhlPJoRctM+6eol7K0VFc9w/3xZ/GHJ6WUjxl3Ll1fH7xU
xlzdfA1mHN1ZOZiTKqO82hA2YfaLvSRjr1ztRtvgGNrzrcEko/zaYX1dmpYv
kLNQd8PnuFPdum10qZzyfI6sxLzPu3bKmVue9k8c0nx2LfK8nPLtgIcg0Xf1
QzkzNbqqAysHMmuu/SunvDuR5SEzXZnvw9RugS/gTChIVW71ofxfIGqivmZS
68Pc7TRd6N9U7Len2od4WLDX863rcd0+5MeCcWem7a5KQXwssITN5kpWK8if
BetnaIqmdimIlxVdRoPVrFOQXytmVWQcfu+egvhZkV6hah6zK8h/N7qm9LlQ
K4lnN0y+7yx0hiopj248Uq9LWb5LSXx7sN2+rd12Vkn59CCViwR3W0m8e5A4
si/uB4uS8urFZnV2z0OJivj3QmXMMcYvVFF+vdDZy6s1sSrah5cwOBb/3J6h
ojxfIupeUqVJr6L9eInVUVEnV9SqKN8+hAw+XjfbpqJ96cOatqBjK8Uc5d2H
WYn9m0r9ONofGwomH1U+mM9R/rbp//+yvmwFR/tkg1q4+IPQDRzx6MeS3IRK
XQJHPPpxPs88cjWdIx79SNm6dvnhDI549EN45HWpM5cjHgPQBMzY+uFFjngM
4OCxsOMbKjjiMYCvdrR9LL3BEQ87PKYK/9Y+4NhZNw87zueU6WuaOOJhh0hw
9swNC0c8BpHwfO7kbgdHPAZxYl5MUOcERzwGoX8VHKeQ8sRjCH1zHHUTap54
DKE4+XRt5bs88RjChUlhse8inngMQ2Px0yGEJx7DKM5ZK14QzhOPYZzIrkBL
DE88HDjj//pi6HaeeDiw7Fj6dPHEw4Fgq04ed4gnHiNokOzv8MjmiccITmUv
CjmQxxOPEdR+uSavpIgnHn/hSpL/gqIrPPsPYGrXxQ==
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {0, 24.158964879843232`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 24.158964879843232`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Total Resources\"", "\"Consumer\"", "\"Predator\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7197527495007734`*^9, 3.719754021228301*^9, 
  3.7197542767297225`*^9},ExpressionUUID->"4e5a7a54-2f92-4068-9e41-\
67f397bdc036"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"aa", " ", "=", " ", 
  RowBox[{
   RowBox[{"Reap", "[", "\[IndentingNewLine]", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
       RowBox[{"sol", "=", 
        RowBox[{"NDSolve", "[", 
         RowBox[{"eqs", ",", " ", 
          RowBox[{"{", 
           RowBox[{"Res1", ",", " ", "Res2", ",", "Con", ",", " ", "Pred"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Sow", "[", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Res1", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
               RowBox[{
                RowBox[{"Res2", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
               RowBox[{
                RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
               RowBox[{
                RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",", 
             " ", 
             RowBox[{"{", 
              RowBox[{
              "t", ",", " ", "8000", ",", " ", "10000", ",", " ", "0.01"}], 
              "}"}]}], "]"}], "//", "Mean"}]}], "}"}], "\[IndentingNewLine]", 
        "]"}], ";"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "0", ",", "1", ",", " ", "0.01"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<K:\\\\IGP exp_in lab\\\\ProgressReport_20171115\\\\Type1.csv\>\"", ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"aa", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7185344288700747`*^9, 3.718534437508086*^9}, 
   3.719753967822258*^9},ExpressionUUID->"f5a008f8-0e2e-4d6f-b04c-\
b5be452ec4b4"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 198, 3, 67, "Section",ExpressionUUID->"390b4f92-903e-4439-9b5a-4fa961261121"],
Cell[CellGroupData[{
Cell[803, 29, 219, 5, 53, "Subsection",ExpressionUUID->"745e81c9-16fd-4c0b-9b8d-0cfba270575d"],
Cell[CellGroupData[{
Cell[1047, 38, 15685, 338, 822, "Input",ExpressionUUID->"e689e6cf-5d68-4ebf-b321-3c8dd48ea804"],
Cell[16735, 378, 189754, 3196, 402, "Output",ExpressionUUID->"f9754fb4-6b2a-47d3-ad2d-6e16c4f70c2d"],
Cell[206492, 3576, 1422, 23, 32, "Output",ExpressionUUID->"177f8c3f-6765-4af5-acc3-75fd8068d1b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207951, 3604, 2447, 54, 48, "Input",ExpressionUUID->"fb35a829-1ad5-4976-94cc-ec890df9d0c2"],
Cell[210401, 3660, 628, 10, 32, "Output",ExpressionUUID->"07a9d37f-c7ba-4731-aae6-a95cd834a2ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211066, 3675, 727, 14, 45, "Subsubsection",ExpressionUUID->"fd2de86f-83e4-4de5-9b66-ae7c6dc0bbea"],
Cell[CellGroupData[{
Cell[211818, 3693, 42240, 753, 993, "Input",ExpressionUUID->"3eb7cfc1-46e5-41c0-96d2-2284fc17e180"],
Cell[254061, 4448, 18464, 381, 399, "Output",ExpressionUUID->"8955875c-0406-4430-9278-44d76be15d3f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[272586, 4836, 418, 11, 53, "Subsection",ExpressionUUID->"51acba99-e8c7-42cc-9391-148add21744b"],
Cell[273007, 4849, 3903, 100, 238, "Input",ExpressionUUID->"2a975dd8-20e0-4e04-baa1-67d9b38ce3e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276947, 4954, 331, 7, 53, "Subsection",ExpressionUUID->"f03b609c-e30c-428b-978d-6c98029ff8a9"],
Cell[277281, 4963, 8218, 209, 574, "Input",ExpressionUUID->"8eff09f7-de33-43f4-8799-a4685bfd7f1b"],
Cell[285502, 5174, 4988, 117, 390, "Input",ExpressionUUID->"1eab802c-47b8-4a74-8cad-f1b446760edd"],
Cell[CellGroupData[{
Cell[290515, 5295, 2821, 78, 162, "Input",ExpressionUUID->"b792a8ae-b31d-4cdc-825d-01d37eb29370"],
Cell[293339, 5375, 16895, 357, 399, "Output",ExpressionUUID->"e4498880-5b30-428c-92d3-3cfc6b2f0916"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[310283, 5738, 279, 5, 64, "Subsection",ExpressionUUID->"942d5e99-2d11-4cbe-a38a-ba37faaaf212"],
Cell[CellGroupData[{
Cell[310587, 5747, 10234, 264, 942, "Input",ExpressionUUID->"3a05458d-e6c5-43b8-b723-11ce0d644293"],
Cell[320824, 6013, 20762, 420, 397, "Output",ExpressionUUID->"4e5a7a54-2f92-4068-9e41-67f397bdc036"]
}, Open  ]],
Cell[341601, 6436, 3454, 92, 238, "Input",ExpressionUUID->"f5a008f8-0e2e-4d6f-b04c-b5be452ec4b4"]
}, Open  ]]
}, Open  ]]
}
]
*)

