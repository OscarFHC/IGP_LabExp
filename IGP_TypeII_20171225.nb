(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    345722,       6524]
NotebookOptionsPosition[    343854,       6462]
NotebookOutlinePosition[    344198,       6477]
CellTagsIndexPosition[    344155,       6474]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Results of model with type II functional response", "Section",
 CellChangeTimes->{{3.7225792073874717`*^9, 
  3.7225792513205547`*^9}},ExpressionUUID->"390b4f92-903e-4439-9b5a-\
4fa961261121"],

Cell[CellGroupData[{

Cell["\<\
This first section is to try single parameter combination set\
\>", "Subsection",
 CellChangeTimes->{{3.7225792573478956`*^9, 
  3.722579279597886*^9}},ExpressionUUID->"745e81c9-16fd-4c0b-9b8d-\
0cfba270575d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "1.71641"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K1", "=", 
   RowBox[{"8.13829", "*", "1.3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "1.71641"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K2", "=", 
   RowBox[{"8.13829", "*", "1.3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", "0.78"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e1", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", "0.38580"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", "=", "0.35959"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e2", "=", "0.13"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "0.9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "0.12"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Res1", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"r1", "*", 
        RowBox[{"Res1", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Res1", "[", "t", "]"}], "K1"]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"A", "*", "p", "*", 
           RowBox[{"Res1", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S1", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "*", 
           RowBox[{"Res1", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Res2", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"r2", "*", 
        RowBox[{"Res2", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Res2", "[", "t", "]"}], "K2"]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"A", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "*", 
           RowBox[{"Res2", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S1", "*", "p", "*", 
           RowBox[{"Res2", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"B", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"B", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{"M", "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S2", "*", "\[Alpha]", "*", 
           RowBox[{"Con", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"e1", "*", "S1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"e1", "*", "S1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"e2", "*", "S2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}], "-", 
       RowBox[{"d", "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Res1", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Res2", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"eqs", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "Res1", ",", "Res2", ",", " ", "Con", ",", " ", "Pred", ",", " ", "q"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Res1", "[", "t", "]"}], "/.", "s"}], ",", " ", 
      RowBox[{
       RowBox[{"Res2", "[", "t", "]"}], "/.", "s"}], ",", " ", 
      RowBox[{
       RowBox[{"Con", "[", "t", "]"}], "/.", "s"}], ",", " ", 
      RowBox[{
       RowBox[{"Pred", "[", "t", "]"}], "/.", "s"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "8000", ",", " ", "10000", ",", " ", "0.01"}], 
     "}"}]}], "]"}], "//", "Mean"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Res1", "[", "t", "]"}], ",", " ", 
       RowBox[{"Res2", "[", "t", "]"}], ",", " ", 
       RowBox[{"Con", "[", "t", "]"}], ",", 
       RowBox[{"Pred", "[", "t", "]"}]}], "}"}], "/.", "s"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "9000", ",", "Tf"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Resource1\>\"", ",", " ", "\"\<Resource2\>\"", ",", " ", 
      "\"\<Consumer\>\"", ",", " ", "\"\<Predator\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.717181025284259*^9, 3.717181118138817*^9}, {
   3.717181218215954*^9, 3.7171813167622886`*^9}, {3.717181398378661*^9, 
   3.7171816691056705`*^9}, {3.7171817107115126`*^9, 3.717181745161034*^9}, {
   3.7171817777236567`*^9, 3.717181866874895*^9}, {3.7171819189167013`*^9, 
   3.717182013787071*^9}, {3.7171820674667664`*^9, 3.7171821752267895`*^9}, {
   3.717182237714019*^9, 3.717182264066127*^9}, {3.71718230960942*^9, 
   3.717182521218413*^9}, {3.7171825935076094`*^9, 3.717182709665344*^9}, {
   3.717182945826183*^9, 3.7171829764909487`*^9}, {3.71718304079659*^9, 
   3.717183072993797*^9}, {3.71718316538284*^9, 3.717183184394414*^9}, {
   3.717183217057561*^9, 3.7171832337472625`*^9}, 3.717183274064032*^9, {
   3.717183335379603*^9, 3.717183404066572*^9}, {3.717183536185794*^9, 
   3.717183649987437*^9}, {3.7171837026276875`*^9, 3.7171838362104993`*^9}, {
   3.717183890057135*^9, 3.7171840843241606`*^9}, {3.7171841388274283`*^9, 
   3.717184236749412*^9}, {3.7171842806755676`*^9, 3.7171842826094103`*^9}, {
   3.717184344502861*^9, 3.7171843450927725`*^9}, {3.7171844215076466`*^9, 
   3.7171844218012342`*^9}, {3.717184532929681*^9, 3.7171845943656483`*^9}, {
   3.717184640145952*^9, 3.7171846404653845`*^9}, {3.717184675414962*^9, 
   3.7171849510142393`*^9}, {3.717184988417399*^9, 3.7171850255297832`*^9}, {
   3.717185570627535*^9, 3.717185570756548*^9}, {3.717185617512802*^9, 
   3.7171856177998915`*^9}, {3.7171860845366015`*^9, 
   3.7171861638330145`*^9}, {3.7171862240546284`*^9, 
   3.7171862309005747`*^9}, {3.717188947410328*^9, 3.717188962564954*^9}, {
   3.717189118576405*^9, 3.7171891189083223`*^9}, {3.717189160144075*^9, 
   3.7171891704592695`*^9}, {3.7171900922421846`*^9, 3.717190172690037*^9}, {
   3.7171902725919538`*^9, 3.7171903319802895`*^9}, {3.717190416020916*^9, 
   3.7171904237669*^9}, {3.717190494972172*^9, 3.7171905047866983`*^9}, {
   3.717190580472206*^9, 3.7171906130400753`*^9}, {3.7171906922771473`*^9, 
   3.717190710090454*^9}, {3.7171907969575777`*^9, 3.7171908470027623`*^9}, {
   3.7171909032909727`*^9, 3.717190945355277*^9}, {3.717192074929902*^9, 
   3.7171921775761228`*^9}, {3.7171922104799557`*^9, 
   3.7171922538239202`*^9}, {3.7171922989122257`*^9, 3.717192308540033*^9}, {
   3.7171923410868044`*^9, 3.717192538226968*^9}, {3.7171926374107046`*^9, 
   3.7171926756244726`*^9}, {3.718126411234793*^9, 3.718126462593651*^9}, 
   3.718467825658448*^9, 3.719752451527778*^9, {3.7197526209537144`*^9, 
   3.7197526216565866`*^9}, 3.719845244391306*^9, {3.719944507583151*^9, 
   3.7199445285177975`*^9}, {3.7225780476620426`*^9, 3.72257805834408*^9}, {
   3.722578230712858*^9, 3.722578282186466*^9}, {3.722578559906558*^9, 
   3.722578588631407*^9}, {3.7225789133433013`*^9, 3.7225789416033735`*^9}, {
   3.7225791194268847`*^9, 3.722579127732984*^9}, {3.7225791838108215`*^9, 
   3.722579184579377*^9}, {3.7225792872282567`*^9, 3.72257928767552*^9}, {
   3.723905085658146*^9, 3.723905089947155*^9}, {3.727702525373803*^9, 
   3.7277025333800373`*^9}, {3.734872592908353*^9, 3.7348725938719378`*^9}, {
   3.7348726937491837`*^9, 3.7348727408689437`*^9}, 3.7348731571962395`*^9, {
   3.7348733256685495`*^9, 3.7348733261067915`*^9}, {3.7348735816550145`*^9, 
   3.7348735827061377`*^9}, {3.7348738455086126`*^9, 
   3.7348738474579945`*^9}, {3.734873882196656*^9, 3.7348738863481116`*^9}, {
   3.7348739622587547`*^9, 3.7348739663709283`*^9}, {3.734875427283546*^9, 
   3.734875444255822*^9}, {3.734968927528287*^9, 3.7349689523009214`*^9}},
 ExpressionUUID -> "e689e6cf-5d68-4ebf-b321-3c8dd48ea804"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "3.0029384868679725`", "}"}], ",", 
   RowBox[{"{", "5.90850437948433`", "}"}], ",", 
   RowBox[{"{", "0.7072227429213112`", "}"}], ",", 
   RowBox[{"{", "3.321496233294242`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.734873898719717*^9, 3.7348739722033224`*^9, {3.7348754329163322`*^9, 
   3.7348754487368975`*^9}, 3.7349689620094976`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwU13c8lV8cwHEJycge917jWpnJXsk5IYSsEMoso2RmpCQNs2HPlBGSJCsi
yr1ZibIrJGWPipJKxu/7+8vr/brX47rPOc/5fkTc/KzcaWloaB4w09D8/1NJ
6SENTSoFfz3hzbJHXgdxmMbqSoKPmOSOXriM0ZK7+zUzcHU25yFRYV309pJu
WzCY/ezeSe4/eqg8S5jxDvhA7OqVNzwG6Gb1+qEWcOcrSvvlq0boTPeH6wtg
pdlJTl8zE2Q8U9vNmUbBdkXyjYbRZkh6WyqbFtjrWajosJAlYiQFWLqCpT2y
ioMPHkHTKmYpsWCR8W/fd7fYoFYz2cHH4NfR64nvS+1QoRcj3zuwlfPejmMs
x9HVK1N2m2BOuQW6yC1n5JZDzZZIp2BbVHz7nbkbOlCbO2oK7hA2Ve5gcEfk
nnChILCOTkZEuoYX2pqzd7kNlkzqCzuy4Y3GtqsXUME3PrNp02r6oyZB7sk5
MI2S2E2hj4EoR31ZgiMDPv+gxNIdmhB0wfKNpwZ4hMvxyGhTGHLwfvjAGZyQ
ZpvBphqBNKNiF6LBUd8tGL61XUb8ue57ysESpTvjz65fQ7+f6voNggtGMj35
P8SioT7hynUwF2FW9dvlm+jJ4voPsUwKjv04tBGUnIRSGYZVTMDFnTKWNzdS
0VlyXUgguJo//cOgRBay0kp9mgU+KSos3Kl+FylYB6w1g7OKsx7mqhYgNl8z
7VnwbrnGg/rbi9G3GNkItiy4PnWHt3FlKerKZ2xWAzeG5kTxaFegh8+mtjmB
q4nmFnQ91Sh+kKoXBZZrINZX6z5Fp77nRpWBhenHFMfeNiGjnRfb+8G7nx2i
S3SjIkkxh53//v/977UWf162IYb96iai2fD5J3zt18y60JQt981DYHL1MRve
8l7U4r/8xh8cey2MY0RhCN2Lf8OeCe5k93ec2xxBVwofWr0AM2TH54pRPiPX
57Gp0+CQ2eoB4cJphN+7D7HepmDD9AB5dvqvSPiHLr8q+IJ42YWGsh9ok5ns
cBycsdaScoP3D/oosXH7KliqeSm8eOcWakTDH0vBBTF8wYPj2/Ft+zrhPvCL
uSZnCcmd+PzZVNe/YK3tPAZ6GmzY/mbAPXIOBSvHSHgufObEGvfNpgzB74ke
VeHSvJiXIivpBz7leET5oTIB/xpmPJUOlm9TTC94S8IDK1OlTeArbLXnpacE
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
Bh/JDo0WXNyLhjUv2KyCtexiz138qoCOjrySELGD8z3wGPEukxIaCOdfNQGb
S3Y+PGWljKyEPNtCwFpXz3xZ71RBPS+epOeDz/w8Yux4QQ2ZudJ5doFdI9Ij
uc9ooC7aI+q/wcsxe7eY7msh48L8HaL2VHw9sUpMXmM/6ji49M4UvG3hTvob
XowOzuiUhIIjUwrTebsOIGrszXMF4IuFptS1Vj2E/+PgvuOp+v84gMue2ePe
a5W9hcr+fGQLWVnJTkJCRlmVnYqyslJJpew9knSJhEooszJSRkJFhH7v7+/P
5+O8D/ec+znvz/v1cC/pcaM+sNV9zfRoNgPU2iNN+AN+11XvwNBshDRPn5/b
6wjPm98Z028Dh1Hz7pdNZuAh57/3l4OOINVKnuRz4Ppax+eCw5ao3vKE4z2w
NE3lacWjNkj5Z430a/AWu1LyxiE7VJlB+fcPWEbjj+lWgyOSP2DZI3IM5gNx
ddKdN86o9MPtPHNwn9SezswhNyR9fsn3PNiuXpRc2+SJiolamkVghde1L9zk
vJF4yxXmN+BxhSili0f8UNHx0fENsNCbkPM09wLQnn+SZaJOMG+r/Mjfe+cs
KrgTFnUEnPm40dpJMwzxH+o0Cwdvt60848+PQLnTXIL3wc5jlA6nQi8ivniP
pTdg2U+nOPJqYlGWeHXrJriitvib2aNExPWSIlXsODyf89MxDnFXUdqpIy4W
YBx8UrxS+wZiZSpQiADnUa9RMy5loKuli//ugyXnh/PeRuUgRnONt2/BmaFi
o5KSt1HSj8t3/oJVTLsT3pHuIdobwwHizmR8qnH5Ak/CQxSnJKFjCS7+8kxz
ka0MUQ6GsEeCPWLVJ2Noq9HFkI7JB2CRGzzHtwLr0TYPZ3U/WKeHyd6PrQWF
N7rFbIGnhiIqGG8/R38cKq0kXGC/4XnpIaPRiUL/7uy1At8MPv+6XaEX/co3
+xkJthRFJ3+s9aMg7fz2h+CKzJtjJPoPaPnTfPo78GOFY8966yaQ/yU1z21w
X9Hl31LG02hhb5KKpCv0i/hF5WtKc2j3lqGWFXjk0r2wvHPLSHGIziASPE3l
sBN+6zeyLu8yfwC++lBI+6nbFgpNTLR7C+YnDtBIXqXEOa6GrpvggRZ+n5e/
6HCLGt0pUTdYb6OqxRctd2PKxYTwc+CJZ6Zl45I8WOyFQWwh+Gn/m4N+XgRs
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

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
MnxWP6E1f0/v+NNfRVifi7rC8AvrhfO6p0yFaoh8kcwhOfQmt8igB121BEtH
uZEp+twnGfo1+QbCIry7+hba7K5M67BWE5GtNbM3G/1M/3fiQVIbsb7G8OIj
Okl+LOlJdgdhVLRJjP435omy3iiY7iaeuihE7EBPprDJbmf7Qixu11k3QQ9X
BnDwawwSR0fPuPqjLW8UnPGYGCGSk91Hs9AqNh7C1vSTxE+TcJNudPSt71q3
N80Qmjzpdevo/e/U1Kk7fhGx9e9UZedwfy1qEz++zxOTt1pfGqNtb5iwyVss
E2r7JyRuonvULXqy7f8Rd+dX779Aa8admFz8Sw+DrwQYutDnmeL2TUwxwW57
Wfd/aH+7C+a/PrJAIOnghMw8npcCotJjcezw6bOp2Ul0l7xYwdwyJ8jGXGn0
Q3vMaKvO9HODr16QeiZ62Uid64kgL7RuSM7pQK/6RhxfceAFSkUuaQ2d7FKk
nOrEC+5eDdHb/uD9E8xU4LKdF+oUh5iM0Am75O6X6POA6PSCpy/aIfmdV/8Y
F1x+yjWVgXa94RGyU4kTKs5sPt2Onjq5OyzuJDvYtJ0gti5QgaKruKPViRmK
7ji8NUQ/7bquGBrFBOyHbkpfR2/Jj3qT9JkBLFfj4p6hX4hfaIs2pIfXBdks
bei9Lb1XWpbXCQbnKu8VdJPKdnvnqjXCWObL9OZFPC+sLiaeXP9LPB+ePXMc
/S3OJ73w5QqxksjS5o127uNjdKxZJvSMJTWfohndu7W3H1kmUrn25LegX5cY
PbmqvEz8rj22dRkd5F8oJRC8TGj5WydIL+H6zajs3KuxQjxQ9WY3WPr/910i
19TO/iW+/b7v64V2PnDbQ/jrKqGenfEjHb05IG/Zr/8fcd+2zKoZXeI8qnk8
lQ5GJLs6FtGtl1T4TjExgHLPNy3KMq7HDwV7tyYyQkgUfZEeerCWr1DKYgN8
OSqy/RpaheVlhrYaC8gx7UpKQ991naiw3MkGN8u0uZrQ4RunvVKkOaDD0/Lm
Alqo+4MAAycXbFa4+ou0gvmWzzR0vJsb5HeHRumi910r3uQtxwv7lB8puqB9
/25qrunmBc29ue0P0Gusp0T6LvCB3r461wq02I4iRYduPjil1sc3iS4fe26R
JssPVuq/3nL/pQIHectdDlt+uKTBbLQXfbs/97psCD+4g9jvM2iDo1+UlGL5
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
e1WzW1CTAv8DE0rpuA==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
TetApGNZoiJ0LidFpKP1Vllc+N2oCN6ZQm7t6LkXSt38tFQEeaOsp2v/xvtT
wLLHgZKQ31ksf9mHSHhx+n2C3G0KQmB+0+ww+uenrTtGYpugbKrWu8sX53dT
zmmWYwMoeTtrxND5zb/yjx5YB/OgX2GO6E23jxNL7KsgcPW+SxK6mdqw65bY
CgxSjT9pRgeWeBVQqS7DdQvyRTY/IkEol1IrIXURaIWsT8qh52rG/rT/XoDK
oXUWYzRNxJWo5pMLYB3+isrP79/36+PrX5zmQUSdZqYAveIW5HJsgAxjO992
/0Q35e03V7lChuiqvURqf3w/x/4qTnwigaZNYIaQ/7//Jzg703CJBPRiLO/U
0YFMCZ0z6XNQ+yfytQ3a+k2fls3cLLyM5TKNRV9v2qum8N8snL6ZpFWH1ipN
WRsbnIHJfUJyM2iaFjue26EzkFCXeeJAAO4vl10iR21nQMdR/NAFdOfXU9tf
/WaA6VwxhQE6y/vUKPvPGWickZ7yQDdz5YUcN5gFp6Tqzix0KU2UsAjvHEjc
VazqQhu+efjZdT8JSAeaPmyhRyOffx/NJEFq8/UQ3kC8P1JObK0xGfRcO15d
RQsn7JNIlp4HFulbjy3Q7i7GUet8mJ/SDaDq3/mmDPmuJ5ag0kb2xSQ6JqDa
xEVtGVYU2LIOBBEJ494jLZ0WKyDGvDwmiz5FPNFg64F5brCN8xHaTYBtRdF9
DeI+ftQKQneaLV8KNlyHXru3vhXoqbyUnzNsG8CkZFj3By00e0ClOg7z5kG5
7f3BWI8ykweG5zfAeZj9nDR6kr9Kqx3zaVnW6hMj9Ih3g2Eu5tNF+44kf3TH
JUaDrewNEFbO7i9FlxB2+FPJbsADFu+Dv9Gvl1heqCevQ/ToQxWGEOwHaUlc
vOQ16Mq55CaJtumN0Rw8vgb7Xh2tuI/O5ZBoKLi6CorXNhZ90PsWHFtvP1qB
V4e7hYvRFBe3qSddl6F4LPfBMDo/4AVT3fslIOX5RtGHEgmqdnSfYr8sgsDr
xx3n0LuKw5esthZAX1WRXh/t937hQwwsQMQRHnkv9GrlIaq2oHloH996WYB+
/42JeGKTDLsLe/MG0FlTGj8l7chwyaVgatc7XH+SizuW9pHBXi3g2Bk0E/3Q
bG0pCfI5nty+h84z+rH8yoEE05NKQR5o/7UbG0+0SMBbzNuUi3YxcnRQkSfB
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
yNDSrLe5idaf9v5zbHMG/ge1HR2V
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
/ranx34CmDa8v9uKtn5VdLcP52vhmfEtM2inO1onqqUIwL+R1SW9jPtDiRPD
nI0AfiNkL0s0nxLrcOFbFq3n5rqVU+gWVtqp6Pssmu4ug9Ts/z/+JFz8AvYZ
9p2qreisisENp7GvrDxzqf+DVrOiJ/RYs2iuvqf3Sa/g7xH1tTF8K4vWqHBl
wgKdSIzoytdn0ZT7Ms+fQoe/UGjTNWbR4pPKxLPRfg0Lmncxb6ZMG0pa0Nu6
l16XnWLR9i6+N/2D1jx9+oNvFotWVTreJ8XC+/lPgtPpThZN4ijLzwJ9Qv2g
RSIHASIkKFyn0F+jpry/KeL16ViXlYXmqXGTzMZ+WGiws3UaPanSenHzNQLo
CmetzSIwYZGev+qWDhFuNZY9aUY/+rr5xqQLEVbONuyYRp9addnPMJEITaPj
Z8yJTJC/l9PS9J0IdjUG3b/Rm5SymRcekMDPo/e8GRsTbh26d2MTjR3i3H+Y
+aD/fqx1/Iz7TYHrEm8aeu/Z4F7nTHYYOCx7bRTNz1ax6esCO1js97pzkZ0J
PynTJVVlHCBjscBkcDBBIVjvzx9ZLjAw4435gT5Z4PQmZBcX2JlK2pA5mTC4
laW+PoILYgF6XNBLtbs+agxwwZxezAiBiwlBgyLOORnc0K4izkHjZoKmQuyc
tzYvfFdSbfVAU+ee8nw9xgvs6wwTEtGeHM7aNnm8YCDnLDqIFn4Qq9ZL5oO7
EoWK4TxMGOBf3nyYwA9hfHpmNbxM6ByLUU2aFYD1P/df1hVgwvPogLmzr4Rh
Qq7/wmG02iEvLq6vwlB84HDkJXR76Q3HbKIIqDW4n3mDDo02clfRRWf4e/sK
MsGR7K00lI+2jNt1T4gJTxVjfEriyDARIWjTjvafbk2fL8Q+U5lsMYs2iZ+n
KzaRQU023XibMBMUc0p7Blj4fPs1RsfR4cEuIzqSFCiOyzZIRpNkFgTE9Siw
YT5f+xM68M+pnMWTFJhUU9bgFGECNxjJ1VzGvuP6QG0DuudZhHFkLgV80tVV
7NA6W8M81z6lgHr7I8VQdLS5WJF/O76ebbPcbbRMlcNPo2F8vf5T6Va0/q/V
XbY43318t6yZQj8byDrqyUUF9bvPxcTITHji8LFWfxUVJvuMqUboHwU6DoFy
VCgRbhQ+ir5y6tDYE+wrPmYWAvFo0p6SiHRNfH3YS54KdKQeZ9d//7/q5KOd
nH3ohbfGkjb4eMnXLhKRwoTaNW268tiXfKTsWUpoA7nKtU+lqLBxb++/nei7
IwXfGvmoMBVzaOE0uvVTdabZDPa154Mzmf/56mP1i5hHfjMuv5noLpjgFq+i
gIbq6M8faJ+L27++vUqBqSNeP0SoTHinHJpz3wtff318TA/N47U247QRPp84
/SkavWi0zuj9GBmmdE4PPERPHNd+HFxNhrITC709/z0/oIW0AfcHjd6VLjlR
JqRZ9Kik6ZBBs5Sv4Tl6nDPz/qUEEdByUiycW8WEP5u+PeS2F4ZThazfsmL4
ezwbl+TbIAyVfz5ssUanTt0uTOEQBp3YxI4cdJ3vnQ0WfkJg8GR+zkKcCRoq
5k8IZoJgLNK2PWM13k9J/Fnya/jhvGN+UiP6lr6vidsHPmDci/jwC23Cfz/I
PZ0PTI20T5pKMOG2ov2nbHE+sPDOTP2J7lQYaM5Zywu2jT7DNEkm2MSUqvrt
5YZkYcsNx9ETeY2qpyW5ofuQfHAqWoB99KTIGN7P0+95v6OVPgjpcYVywQEZ
Y60UKSaYZgi9K3nACUfOUKJGpJlg6y3/yXodB+Q2/GwTlGGC07fx7I/z7DAk
1ELVR9/RrOz83soOrgVhhQloMfv5RW9fdvB4M9qhI8uEIxv+ff/zgg18NjyV
vrIW7w++mLe0IBJ40K+mlaGVngscu7mbBIftjwn2oi+LpwjabyDBrnCJlXVy
eP3F5L3mR4mg8TrsYwPats9eWtkR883F3n4CXQ3Lc50GRFg7u+E1RZ4JubmQ
N7+aCGSpT7Wu6H1vKTbDHwjw54RxJkEB77fk0MhXLgSYIEhQldEK4Q3khe0E
GEmdjtuFPq/AuGW+ngADyi/ZgtEmOp1VP0QI0FN7JzQbnbYkIag7w6K9sg37
04je5xE/hCFGaxyx8/6J1nA65JORi/0qZMMwVZEJRraT7AIRmCf8nIcM0WoC
zTxnXFi0ktzBbje0kNIdpz7Ms4JNT6zi0AlFMj83G7Fo2S1JjHJ0ZwHp/XnM
sxuOXgZ96Ps/dKcv4+NXp6CcuI4JMa2GvRU7WLSYi6tVVdDbm9gK/3mwaJHi
03m26N1J2mMdV1i0kOK21SHoq+9Gbmk8ZtH84E5yDjo/+y1bP/ZBr55Qnmb0
ltyvwTRhAhxcUvsrqoTnwdj9fuIuAuy5yuG/Fd2m94u92J8AVgqD39zRI2/d
1nPhfmBgk9RbgQ5kej19OUgArSFP23709N2qnZwcRFANhBaSMhM4rg9Fi6sR
YU3m7ye70Y8qG/prw4iwNL73xi/0nvy+Ck5lEsycUxMSU2GC8Wm2zg47EkxQ
OC4boc3ppHnj8yT4uKUqKAG92mutQvkgCZ7Hie9br8qEtRdU2RxusUHU+o9U
z/VMuL4u/JSgAAcs9vD3JaML/twbTzDigMAIw5xa9GJqyppZXw7w6MpQIasx
gT1e3TKzmwOsgh2M6tDft51qVk3nBArzvSdFnQnH9qe32Klyw12H7uoXGkwo
3HGAzF/DB9LspMgf6H7ejgmZJT5If6i5XVSTCZbH/HLZjfghlpDccRy9c7H9
XheTH3wKdo2IajHhVwjXY/83AqA7/UrghDYTRPeL9JGHhKD1SrOzuA4TXoT+
LJ96LQLfjnsdNkEvvtnslj8hApw2PI4n0PuvHt6cw0cGE0Hr/fVoJyKtaqsV
GWpT2nd46TKB3JLjuquFDH2nfK1T0N5K7y+c/0qGBTthy1p0gPMhHWdOCmwW
22MqrIf3b07UvUwTCtgtTBsboOtWJroqj1Ag4MM1mjvaMzG66Xso5k3GW4On
aNZmzT8zZRR4FRak9wXd8MfLzr2VAj+cxHT49fG8SG5qlB2iADftqbYOumtP
he8oznsl2YOazmieMpF0N8wnM+Kieiw6rm42HsSo4P7llloluvfyTABFgQrn
mVtUB9ER5OH9bhuwT+UPKHEb4L4wsTuhAPvQ80vhilro1qKT300xnwY8pOUd
0TduiTnkYJ9aNH8hG42e5c2Tk8X3W63iLF2G3r2gGmtPoYIeL1Gy77/XvzvK
RV2iwL7xvNXsW3A/oK4cSh3EPvfKREwd3afYVxlWQ4GUh8PUA2hNM953rdcw
fxIvks+jn9ybcMrFPGr3VRQuRrct7n+wZgsF+LQ8+QiGTFiOmp2NHyDDxaof
xEL0ngNaV7bKkCH4xe/J+a1MILimPD1ZLwxpuSkTa41wHggJDFnfwHyJ0v5h
jWYdNOJ+gn1patvp0Ry0Xl8ISVFGGI63LPSb05hA05hdx84vBI5drJYbgPtE
+zP7/m5+0PqXPfMcnVIeoPLnGj9wKRrJjqFd/2hrP7Pnh/KQsOBNxrgvmfwb
N+3nAx7Zv4pd6IZdFtvIk7xQ5TN9nncbEz5eeBESqMED8enJJZroFWrUGct/
3ODK0Og7gN4jbc9R2MQNAqt8Ne+hD8b/3bl4mBvc68Y/bTNlwof3Vp3061wg
wj9qGL4d94n42zXeEpwwtvmiVz76G0n8o8BPDqg9Ip/6Et2r2/xHpp4DvCpc
xlebMaElK7kx0ZMDnjsM3qxC9/d/Nw2sYYcT99/P/TJngnNu7sKxIDYweRMk
J2aB+9zDLX/P72IDsWXRnUboUZHdbEvKbMCwtbsbjw7ppt3j/0iC1Qude1Us
8f6ozecvsCRBk1lbmasV5sUqVdaNzUSQjK5XSUDPRu9Z70AmwqnGqttP0Hmz
uT3Vvwgga3onld+aCRe0g++nFhMg6MJNAV30g5y3JTrxBHjNSIp2QWvVdrG9
PEGAs8ZhIVXoOB/rq26aBOiMDPg9hLb/vof7tSgBlOq9jvPZYJ6XUFJ/zbNo
EazDw5vR9QmK+05h3vQY2Ts6ozdbaH2axb6iGmH9vwrsPB6qPQwD+MwYy1jG
jEGaS1oUiYlQKjmvMmWnImtUFN0kIclSiibLNdxKqCxRbrZIljZLjspNsqSV
RmgR7UXllnPf/vz+M5/5nN+c3/M88yAFXe1un7prH0UcbLByqkV7Ln8vpLwp
4vHPJbcH0LIWi4WDqylCYCEAeUfMgxeTPzyWU0RijM4VU3SefExEyjKK6LvK
X+SH5nZ7/LAWUsSiSU5ZMto+63tIO35e0lJZnRp0vG/BnOo4ipBE/TotQevo
0cdf454zu/xFjeVEwnszm7K3Etxf396ITdBldsJQsRINhhY/l/VFf1Gu+rlP
QAPzyIfxSeheq2z1nLU0SK+9+6P6t5/+TA2PpIGF6ZUxWWe833zdluu10uCE
8dHOi2ifb2WG04Lp8DY0yaYffYs9Nj8+mw6rqvbfkHHB/hAcnzJ0kw4fBTsu
eaMlU888E+YwwM7AOkt6LQkzlkq36I4wYGrehK/nOhJWO2qaZUYzYaum13ua
G+b5rdt0rXRZCDvrlKmHbqsaSPraIAvxBqssXNAybIOtcu9k4bSFQUo+erCy
6bm0gxz0+kzNtdyAfWtReE0amwUrcws3xrjj+9vxXURVY1+bm8UsQvudsZwK
HZMH34rUsjtovbRZM+/oKEB0Q8SP6R4kmCzTUuGfVICLz1ZnXkY3RxS6d6Yp
wswZY3fHPUkQx7MmqxLYICgeCNfyImFAjlix7gYbLAS9fCH6qjPN2HWKDR6W
DUHH0QGXSgVLIpUh3TedaeKNzyeh6/pOAQem8kwsQn0wH7VpRf/KcUFRV284
C705y3b4xxwu8Cs1U5rQ5TcSZdwJLpg1ST9mb8T357irOxnJheCBR+EV6Ppd
zx0/jXChTzu2bNSXBP+Awj9ePVAB8cBgCtcP759TQfPKP2Ne5a/50xxtfKyn
VluZB+dn8OaL0NcDtlieX80Db0mUXAXaMO2ZceJmHrDzJK/vo1s/hQtOYf5E
aJUWz9pEQgWn56/RcsyTZ8oim98uJ2b3kDx4enrP1l3oZpFu+9onPEjz6bM+
gWamSu6ZvuMBaFrpNKA/s5SLCIoHX/qKpV6gmxjqYoGyKhSfUhyW30zCBe0a
gxpNVfD0DmsxRnddi/qwV1cVFP94fMYD/aOtWFttoSo0PV1x8AB6sbD5NR/z
J+xk0aZitIvSkqNs9FwvFnSgld+wWnZjHj2evkv7K/rPG43r72EepT7pneJv
wfs+592vNjVVsMxZJrFC6zczGs3pqvDJo6AhCC2eaA+xeM2Dsxoyuelop/4X
K63beOD+eEdsHTqQfzBY9hwP5LO7vZ+h/edqZgbuxz01LZe/wJ+EV0dlLqXp
88BC3TT7FtrnYkLgpmgV+PAgZ+87dIjtsf5yJxUozKQ2qAbg/memq4XMUQE5
tXa1LWil/EK7xHtc6OVtOfYLHRLaaO6yAM+fmyE23UaC3X/Rxm6TyqDdPb7T
Gy3PuenWX60MPRnejofQ0zVmjpsHK4M5R1exC62kZ8HePMgGpnJj8o5A/H6E
1tCvXiU4rfg2sTAI80iKWxglUYCuwfMX76I1J3aHZuUqALN+q2QCvf3Xnkfh
GxUgePPAEvvt2C+7zxl5DsjD8rqe0S/o47Eb+hLHWPDU74qLcAcJsf0nb3Hm
yAHbLDJuFzr1IVvQ/FYWVsqblOags2fZ6TPrZaGkplzqPdpGh59p5SgLUayC
uhPB2Id7o1q94mVg2iWR5shO3Gu246xQigl2SatsVUJIiFRs6TjSzYT9G2mR
FuhtJsuMNM4y4ZVsdGcGuq1MGJdrx4Q6n52Hlu4ioWPnJrFGrhS4yriOpITi
79GM1cdzZ0BSH0etFr1YzTl/tREDrld1WA2gHYq/JoyyGKDjveaUyW7sl+wm
Mq2RDl8qlzn1o792vhSVGtJh3uFv0TJhJEBgXnyHPB28vGr+MULXJvxMSh+h
QQtTQD+MNmtpPbKwmAYTT0YNK9FJqbO2LRHRQL/yH68naCO+n7VpIA2Oes6q
MQwnQUs7TbHEgAZxe/vZbuijt89y7Hk0CMrM2h6LzpFMf/tmgiJcL61rLUKH
BX5Pf3SHIohuJe12tPFQXSCzCPPqQ9u+z+gdKTn6JvEUoa6U2Ds9goS/gtXj
VvlTBH0BsdAKPbnCodsA981bm8nkIHTv8Ne2T7h/Hm2rfZGOdgtoik3GfdSS
GErUo5+d4SxsXEERFYULTkrQxbOyJqUdKCK7+dVX6T14fiXq7zYFUESC5Iyz
IXr5K8VGexFFhPz0KXVFZyWS/3VVUYQXX0M6Fr2hynBfzRBFCM3v+xWhfZo8
5Fwxv4w2iK/eQRdqrai+hntRM8JW7TN6UnpNDseBBp8rm+5AJN4PwdYlnL9p
kKdbbiZBf7N21LfRpUOyMDBDeu/v//ece7450SHCf/aYAZoddoaM2UsH+/zs
ghh0f8N6Jel2OnxXP6wwPQrz6WKbVkEMA4ZNYRugzX2GqnaUMODeuv+aA9EN
rzTPlz5iwDnx7sg6dGOo/HyGmRSsk/EdXL8P+1H+SJjeRykoH19cL47G/e0q
V5HnJw1+vSNbmHHY/+sn7odayoF1otdaIzQcV09NDJcDfdO7hA9auEBjD6dE
DiaOVWrWoIcMHLgSNeyD6yMf+u/H8+Du12j7zoKrPVJ25AEShre+/Fz/UQHU
u2cYHzpEgnPwzc5xdQ78jM/QvoAev/aAb7KYA0NGDPZT9BPVGUIFNw5UZLwc
NU4gIea5UV/b3xywdik/O4hu+NfucimLC2GdSzWsDmPf+KTRypdSAY8DZTI7
0bZdHY9q8L6yXKg1no0WR3sGiKxVgJVO6/mI9r9wxVIkUoECp9upBaLfeXzQ
0onFA9GUefRddOv95Cj2fB4EXygN+o4eve7fqWPDgyVssdDlCAlF/Ii4swk8
0GykTGLRAhkfpbJ8HjBCds8+j454sTIXrvJgRGuY04uOUmk+r3Mf90CHK0Wh
lfXy5rJHefA/PjspsQ==
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {9000., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Resource1\"", "\"Resource2\"", "\"Consumer\"", "\"Predator\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.734873898719717*^9, 3.7348739722033224`*^9, {3.7348754329163322`*^9, 
   3.7348754487368975`*^9}, 3.7349689623584585`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["This second section is to plot model results with ", "Subsection"],
 StyleBox["fixed e2 and p", "Subsection",
  FontWeight->"Bold"],
 StyleBox[" values but ", "Subsection"],
 StyleBox["\[Alpha] varying from 0 to 1", "Subsection",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{{3.718532617046636*^9, 3.7185326244958086`*^9}, {
  3.7225792987038383`*^9, 3.7225793179025564`*^9}, {3.722579356507042*^9, 
  3.7225793617340794`*^9}, {3.722579423687665*^9, 3.7225794632613792`*^9}, {
  3.722579493701161*^9, 3.7225795607114515`*^9}, {3.7225796314104743`*^9, 
  3.722579692705368*^9}, {3.722579813783048*^9, 
  3.722579815425516*^9}},ExpressionUUID->"fd2de86f-83e4-4de5-9b66-\
ae7c6dc0bbea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "1.71641"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K1", "=", 
   RowBox[{"8.13829", "*", "1.3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "1.71641"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K2", "=", 
   RowBox[{"8.13829", "*", "1.3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e1", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", "0.38580"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", "=", "0.35959"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e2", "=", "0.13"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "0.15"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqs", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Res1", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"r1", "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Res1", "[", "t", "]"}], "K1"]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"H", "*", "A", "*", "p", "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"H", "*", "A", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"S1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "h1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"S1", "*", "h1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Res2", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"r2", "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Res2", "[", "t", "]"}], "K2"]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"H", "*", "A", "*", "p", "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"H", "*", "A", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"S1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "h1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"S1", "*", "h1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"B", "*", "A", "*", "p", "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"B", "*", "A", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res2", "[", "t", "]"}]}]}], 
           RowBox[{"1", "+", 
            RowBox[{"H", "*", "A", "*", "p", "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"H", "*", "A", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"M", "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"S2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "h1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"S1", "*", "h1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"e1", "*", "S1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"e1", "*", "S1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"e2", "*", "S2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "h1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"S1", "*", "h1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}], "-", 
        RowBox[{"d", "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Res1", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Res2", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aa", " ", "=", " ", 
   RowBox[{
    RowBox[{"Reap", "[", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{"NDSolve", "[", 
          RowBox[{"eqs", ",", " ", 
           RowBox[{"{", 
            RowBox[{"Res1", ",", " ", "Res2", ",", "Con", ",", " ", "Pred"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Sow", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Res1", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Res2", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",",
               " ", 
              RowBox[{"{", 
               RowBox[{
               "t", ",", " ", "8000", ",", " ", "10000", ",", " ", "0.01"}], 
               "}"}]}], "]"}], "//", "Mean"}]}], "}"}], "\[IndentingNewLine]",
          "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", "1", ",", " ", "0.01"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Total Resources\>\"", ",", " ", "\"\<Consumer\>\"", ",", " ", 
      "\"\<Predator\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"aa", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", " ", "21"}], "}"}]}], "]"}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7171850823883705`*^9, 3.7171851443603168`*^9}, {
   3.7171855037507534`*^9, 3.717185504005747*^9}, {3.7171855624006505`*^9, 
   3.7171855628363514`*^9}, {3.7171856423772593`*^9, 
   3.7171856426125917`*^9}, {3.7171862161699696`*^9, 
   3.7171862649928026`*^9}, {3.7171889759919477`*^9, 
   3.7171889767310867`*^9}, {3.717190187939597*^9, 3.717190188306387*^9}, 
   3.71719033976348*^9, {3.7171904340989237`*^9, 3.71719043468218*^9}, {
   3.7171905165569887`*^9, 3.7171905175954957`*^9}, 3.7171906297054615`*^9, {
   3.7171907180597086`*^9, 3.717190718691328*^9}, {3.717190792372143*^9, 
   3.717190792794281*^9}, {3.717190839258257*^9, 3.7171908401466026`*^9}, {
   3.7171909578032155`*^9, 3.7171909672260895`*^9}, 3.71719102746842*^9, {
   3.7171910730519257`*^9, 3.717191075418869*^9}, {3.717191139995598*^9, 
   3.717191152439045*^9}, {3.717191200555944*^9, 3.717191202571689*^9}, {
   3.7171912829035845`*^9, 3.717191283409565*^9}, {3.7171913381613646`*^9, 
   3.717191338752761*^9}, {3.717191395188902*^9, 3.717191395722227*^9}, {
   3.7171915049744816`*^9, 3.7171915096151257`*^9}, {3.7171915616029053`*^9, 
   3.7171915620194006`*^9}, {3.717191620251911*^9, 3.7171916250005093`*^9}, {
   3.7171918007733316`*^9, 3.7171918016071863`*^9}, {3.7171918478678594`*^9, 
   3.71719185097678*^9}, 3.717191937681549*^9, {3.7171925564085565`*^9, 
   3.717192578367292*^9}, {3.717192710139017*^9, 3.717192721234208*^9}, {
   3.7171927886171722`*^9, 3.717192790002717*^9}, {3.71719303013867*^9, 
   3.7171930322183332`*^9}, {3.717193080816657*^9, 3.7171931285940657`*^9}, {
   3.717193182881154*^9, 3.7171931838764367`*^9}, {3.717193229922507*^9, 
   3.7171932303621325`*^9}, {3.717193296579914*^9, 3.717193297345705*^9}, {
   3.717193354147759*^9, 3.7171933621137323`*^9}, {3.717193408087184*^9, 
   3.717193410991564*^9}, {3.7171935240557175`*^9, 3.7171935248735676`*^9}, {
   3.71719359179428*^9, 3.717193592706175*^9}, {3.7171936471540747`*^9, 
   3.7171936491299543`*^9}, {3.7171936972079525`*^9, 
   3.7171937279844165`*^9}, {3.717193832705904*^9, 3.717193854177884*^9}, {
   3.7171939457143583`*^9, 3.7171939496578064`*^9}, {3.7171940097762556`*^9, 
   3.717194022377844*^9}, {3.717194076816846*^9, 3.7171940777213917`*^9}, {
   3.717194300160469*^9, 3.7171943027928805`*^9}, {3.71719436214762*^9, 
   3.717194368416517*^9}, {3.7171944524916353`*^9, 3.7171944535461197`*^9}, 
   3.71719454183185*^9, {3.717194598396923*^9, 3.717194606706704*^9}, {
   3.717194732739648*^9, 3.7171947375874376`*^9}, {3.717194788956518*^9, 
   3.7171947924186797`*^9}, {3.7171949283438926`*^9, 3.717194929371859*^9}, {
   3.71719499487516*^9, 3.717195001593797*^9}, {3.7171950523914757`*^9, 
   3.717195056022874*^9}, {3.717195144232401*^9, 3.717195145002062*^9}, {
   3.717195208849593*^9, 3.7171952109868746`*^9}, {3.7171952666677494`*^9, 
   3.7171952678237085`*^9}, {3.7171953289332848`*^9, 3.717195329855966*^9}, {
   3.717195392144329*^9, 3.7171953930831327`*^9}, {3.7171954447150354`*^9, 
   3.7171954456961474`*^9}, {3.717195493290973*^9, 3.7171954939878445`*^9}, {
   3.7171955477890234`*^9, 3.7171955486663246`*^9}, {3.7171956185487013`*^9, 
   3.7171956190176*^9}, {3.7171956611497855`*^9, 3.717195661688156*^9}, {
   3.717195807142214*^9, 3.7171958114175577`*^9}, {3.717195881389179*^9, 
   3.717195883466364*^9}, 3.717195996467184*^9, {3.717196051303999*^9, 
   3.7171960568047433`*^9}, {3.7171961299800124`*^9, 3.717196138360855*^9}, {
   3.7171962266816254`*^9, 3.717196228466385*^9}, {3.718106603472761*^9, 
   3.71810660931647*^9}, {3.7181067563062043`*^9, 3.7181067572486057`*^9}, {
   3.7181068064992285`*^9, 3.7181068114186273`*^9}, {3.7181068694929533`*^9, 
   3.718106872164318*^9}, {3.7181069224471893`*^9, 3.718106923044841*^9}, 
   3.718106976584052*^9, {3.7181070540568314`*^9, 3.7181070546920633`*^9}, {
   3.7181071095770197`*^9, 3.7181071125603576`*^9}, {3.718107201633151*^9, 
   3.7181072020647774`*^9}, {3.7181072612826066`*^9, 3.718107262584319*^9}, {
   3.7181073162652173`*^9, 3.718107321520424*^9}, 3.718107386875635*^9, {
   3.71810744207658*^9, 3.718107448803049*^9}, {3.718107511788564*^9, 
   3.7181075127719493`*^9}, {3.718107562781556*^9, 3.718107568174104*^9}, {
   3.7181076200723214`*^9, 3.718107620678274*^9}, {3.718107685984831*^9, 
   3.718107686304657*^9}, 3.7181077341583557`*^9, {3.718107901190503*^9, 
   3.7181079021664915`*^9}, {3.7181079755170746`*^9, 3.718107976135725*^9}, {
   3.718108059971588*^9, 3.7181080640828967`*^9}, {3.71810814795718*^9, 
   3.71810814902738*^9}, 3.718108235122902*^9, {3.718108283848231*^9, 
   3.7181082862327185`*^9}, 3.718108338788663*^9, {3.7181084037626004`*^9, 
   3.718108405857791*^9}, {3.7181084554357615`*^9, 3.7181084622056923`*^9}, {
   3.7181085162933717`*^9, 3.7181085170043*^9}, {3.7181085771128993`*^9, 
   3.718108577663183*^9}, {3.7181086367752104`*^9, 3.718108640414325*^9}, {
   3.7181087200013123`*^9, 3.718108720680499*^9}, {3.7181088831162767`*^9, 
   3.718108883954152*^9}, {3.7181089374526176`*^9, 3.718108938338826*^9}, {
   3.718109000213338*^9, 3.718109000997059*^9}, {3.718109052533946*^9, 
   3.718109053461182*^9}, {3.718109100959752*^9, 3.7181091014602423`*^9}, 
   3.7181091513764067`*^9, {3.7181093259982834`*^9, 3.718109328900608*^9}, {
   3.718109402968789*^9, 3.7181094088070927`*^9}, {3.71810946264821*^9, 
   3.7181094641437817`*^9}, {3.718110107182345*^9, 3.718110107981164*^9}, {
   3.7181101788057113`*^9, 3.718110180572734*^9}, {3.7181104327247066`*^9, 
   3.718110434243223*^9}, {3.7181105075362663`*^9, 3.7181105123471503`*^9}, {
   3.7181106962680197`*^9, 3.718110697599037*^9}, {3.7181107760378027`*^9, 
   3.7181107766530266`*^9}, {3.7181108508224945`*^9, 
   3.7181108541202607`*^9}, {3.7181109106539803`*^9, 3.718110913045005*^9}, {
   3.7181109632863874`*^9, 3.7181109642453403`*^9}, {3.718111025570491*^9, 
   3.7181110265577774`*^9}, {3.7181110929036407`*^9, 
   3.7181110947351465`*^9}, {3.7181111521310654`*^9, 3.718111153633035*^9}, {
   3.718111212051442*^9, 3.718111221967453*^9}, {3.718111276109049*^9, 
   3.7181112766607895`*^9}, {3.718111327326782*^9, 3.718111330254032*^9}, {
   3.7181113810420895`*^9, 3.7181113858721657`*^9}, 3.718111998599498*^9, {
   3.7181120580176907`*^9, 3.718112058680752*^9}, {3.718112134938572*^9, 
   3.7181121354029055`*^9}, {3.718112199315426*^9, 3.7181122005111694`*^9}, {
   3.7181122516670656`*^9, 3.718112265822691*^9}, {3.718112324786824*^9, 
   3.718112325336625*^9}, {3.718112375488648*^9, 3.7181123760794415`*^9}, {
   3.7181124423440304`*^9, 3.7181124432644043`*^9}, {3.7181124930072236`*^9, 
   3.7181124940335374`*^9}, {3.7181125443293*^9, 3.7181125729987674`*^9}, {
   3.7181126218805094`*^9, 3.718112650825391*^9}, {3.718112726983088*^9, 
   3.718112729207138*^9}, {3.718112924279523*^9, 3.718112925722845*^9}, {
   3.7181130673314915`*^9, 3.718113070026251*^9}, {3.7181131207539377`*^9, 
   3.7181131265853305`*^9}, {3.718113201148241*^9, 3.718113201443714*^9}, 
   3.718113335926778*^9, {3.7181133933518124`*^9, 3.718113422383663*^9}, {
   3.718113493578085*^9, 3.718113494665473*^9}, {3.71811355378726*^9, 
   3.7181135606582417`*^9}, {3.718113639159672*^9, 3.718113644596609*^9}, {
   3.718113698502163*^9, 3.718113699300493*^9}, {3.7181137827837887`*^9, 
   3.718113783878504*^9}, {3.718113841912426*^9, 3.718113842495922*^9}, {
   3.718113901776885*^9, 3.718113902689954*^9}, {3.7181139614348025`*^9, 
   3.718113965185796*^9}, {3.718114023477474*^9, 3.7181140254676666`*^9}, 
   3.7181255188862715`*^9, 3.718125605609725*^9, {3.71812567781317*^9, 
   3.718125680003186*^9}, {3.7181257372149534`*^9, 3.7181257586721773`*^9}, {
   3.7181258098445263`*^9, 3.718125844318099*^9}, {3.718125887676549*^9, 
   3.7181258881296787`*^9}, {3.7181259423906116`*^9, 3.718125947126021*^9}, {
   3.718125996465506*^9, 3.718125997474309*^9}, {3.718126052466696*^9, 
   3.718126053000883*^9}, {3.718126108315011*^9, 3.7181261085645123`*^9}, {
   3.71812617594042*^9, 3.718126178027347*^9}, {3.718126238629777*^9, 
   3.7181262392655272`*^9}, {3.718126288464071*^9, 3.718126289422575*^9}, {
   3.718126338761264*^9, 3.718126339968322*^9}, {3.7181264791790943`*^9, 
   3.718126479657609*^9}, {3.7181265373547983`*^9, 3.718126546842218*^9}, {
   3.7181265970990615`*^9, 3.7181266073140345`*^9}, {3.718126721342776*^9, 
   3.7181267222621794`*^9}, {3.7181267748304567`*^9, 3.718126775798683*^9}, {
   3.718126882916027*^9, 3.718126883779776*^9}, {3.7181269590981245`*^9, 
   3.718126959114726*^9}, {3.718127008348154*^9, 3.7181270098359036`*^9}, {
   3.7181271219797707`*^9, 3.7181271226272254`*^9}, {3.7181271776914654`*^9, 
   3.718127202770722*^9}, {3.718127294165536*^9, 3.718127299899836*^9}, {
   3.718127359676894*^9, 3.7181273632759686`*^9}, {3.7181274138177967`*^9, 
   3.718127417332405*^9}, {3.7181274825815573`*^9, 3.71812748350147*^9}, {
   3.71812753511213*^9, 3.7181275413698587`*^9}, {3.718127594998289*^9, 
   3.7181275955729785`*^9}, {3.7181276590806246`*^9, 
   3.7181276632882137`*^9}, {3.718127709177456*^9, 3.7181277200008087`*^9}, {
   3.718127782132445*^9, 3.718127782639307*^9}, {3.718127829320531*^9, 
   3.7181278298434877`*^9}, {3.718127905538423*^9, 3.7181279059095073`*^9}, {
   3.7183074150998783`*^9, 3.7183074158146863`*^9}, {3.7183075804502487`*^9, 
   3.7183075812916927`*^9}, {3.7183078009706855`*^9, 
   3.7183078013684273`*^9}, {3.7183079466990333`*^9, 
   3.7183079475396605`*^9}, {3.718307996460336*^9, 3.718307998419724*^9}, {
   3.7183080498436456`*^9, 3.718308050747766*^9}, {3.718308094154909*^9, 
   3.71830809942799*^9}, {3.718308154788558*^9, 3.718308155137972*^9}, {
   3.7183114839766426`*^9, 3.7183115107952385`*^9}, {3.7183116842540503`*^9, 
   3.7183116873704915`*^9}, {3.718465717915806*^9, 3.7184657527777147`*^9}, {
   3.71846581085695*^9, 3.7184658225189915`*^9}, {3.718465868201785*^9, 
   3.7184658684761925`*^9}, {3.7184659165642524`*^9, 
   3.7184659188283978`*^9}, {3.718465979116088*^9, 3.7184659954387255`*^9}, {
   3.7184660635622993`*^9, 3.7184660640725436`*^9}, {3.7184661099689393`*^9, 
   3.7184661191050625`*^9}, {3.7184661760735893`*^9, 
   3.7184662044208536`*^9}, {3.7184662825638885`*^9, 
   3.7184662837152343`*^9}, {3.718466341767213*^9, 3.718466343276473*^9}, {
   3.7184666767123933`*^9, 3.718466685230833*^9}, {3.7184667910175557`*^9, 
   3.718466794134696*^9}, {3.718467101486752*^9, 3.7184671166455326`*^9}, {
   3.7184671582944946`*^9, 3.7184671856736937`*^9}, {3.718467242946745*^9, 
   3.7184672441454716`*^9}, {3.718467298404379*^9, 3.718467301658263*^9}, {
   3.7184673409954023`*^9, 3.7184673799892817`*^9}, {3.7184674274396462`*^9, 
   3.718467428269721*^9}, {3.7184674868376884`*^9, 3.7184674923352118`*^9}, 
   3.7184675459554205`*^9, {3.718467592118187*^9, 3.718467598972686*^9}, {
   3.7184676519801865`*^9, 3.7184676540596266`*^9}, {3.7184677081798773`*^9, 
   3.718467716040614*^9}, {3.718467803741958*^9, 3.7184678059019613`*^9}, {
   3.7184678646313143`*^9, 3.718467880094392*^9}, {3.7184679382333927`*^9, 
   3.718467940167429*^9}, {3.7184679989065275`*^9, 3.718468004815586*^9}, {
   3.7184680661005087`*^9, 3.7184680735998907`*^9}, {3.7184681138334613`*^9, 
   3.71846816605155*^9}, 3.718468214283815*^9, {3.7184682985009975`*^9, 
   3.7184683207326345`*^9}, {3.718468369455149*^9, 3.7184683734297085`*^9}, {
   3.718468418790451*^9, 3.71846842371082*^9}, {3.71846849533243*^9, 
   3.718468498888534*^9}, {3.718468546003031*^9, 3.718468546464924*^9}, 
   3.718468595493745*^9, {3.718468648043507*^9, 3.7184686500268545`*^9}, {
   3.718468711310807*^9, 3.718468711763928*^9}, {3.718468759446125*^9, 
   3.7184687601643667`*^9}, {3.718468817596815*^9, 3.718468848093459*^9}, {
   3.718468912167852*^9, 3.7184689253356085`*^9}, {3.718468970050361*^9, 
   3.718468977586881*^9}, {3.7184690268748236`*^9, 3.718469085066457*^9}, {
   3.7184691413161173`*^9, 3.7184691437081614`*^9}, {3.718469199469284*^9, 
   3.7184692083333488`*^9}, {3.7184692691456275`*^9, 
   3.7184692782899766`*^9}, {3.718469392304347*^9, 3.718469395328211*^9}, {
   3.718469515130185*^9, 3.718469515761523*^9}, {3.7184696339807*^9, 
   3.718469645875003*^9}, {3.718469708613516*^9, 3.718469718419969*^9}, {
   3.718470030451933*^9, 3.718470039001573*^9}, {3.7184701236029415`*^9, 
   3.718470155802992*^9}, {3.718470217028361*^9, 3.718470231500252*^9}, 
   3.718470277053051*^9, {3.7184703292805557`*^9, 3.7184703301003785`*^9}, {
   3.718470406489481*^9, 3.7184704083205147`*^9}, {3.718470457718457*^9, 
   3.718470482006547*^9}, {3.718470515694368*^9, 3.71847051839158*^9}, {
   3.718470576768402*^9, 3.7184705844156003`*^9}, {3.718470664875435*^9, 
   3.718470665586844*^9}, {3.7184707448416295`*^9, 3.7184707453377104`*^9}, {
   3.7184709041002073`*^9, 3.71847090554939*^9}, {3.7184710354542556`*^9, 
   3.7184710436429977`*^9}, {3.718471104181461*^9, 3.7184711055154114`*^9}, 
   3.7184711701597376`*^9, {3.718471231823064*^9, 3.718471232436339*^9}, {
   3.718471285551015*^9, 3.7184712867658362`*^9}, {3.7184713410416346`*^9, 
   3.718471343559642*^9}, 3.718471394879924*^9, {3.718471482313266*^9, 
   3.7184714845759153`*^9}, {3.7184715447778845`*^9, 3.718471565112917*^9}, {
   3.7184716582437286`*^9, 3.7184716889894276`*^9}, {3.7184717675391903`*^9, 
   3.718471769838977*^9}, {3.7184718618905087`*^9, 3.718471864663912*^9}, 
   3.7184718998568172`*^9, {3.7184719341369963`*^9, 3.7184719519872217`*^9}, {
   3.7184720155699587`*^9, 3.718472021499782*^9}, {3.718472085955778*^9, 
   3.718472092722737*^9}, {3.718472157270297*^9, 3.7184721577341824`*^9}, {
   3.718472320065235*^9, 3.7184723205935416`*^9}, {3.7184724807647915`*^9, 
   3.7184724900166173`*^9}, {3.7184729351833963`*^9, 
   3.7184729405577593`*^9}, {3.7184739219158516`*^9, 
   3.7184739576896563`*^9}, {3.7184744194018764`*^9, 3.718474425035525*^9}, 
   3.7184755143009043`*^9, {3.718475549667655*^9, 3.7184755532681704`*^9}, {
   3.718475713966797*^9, 3.7184757360768433`*^9}, {3.718486799278085*^9, 
   3.718486818001199*^9}, {3.718486937487671*^9, 3.7184869457385178`*^9}, {
   3.7195792580153785`*^9, 3.7195792584475307`*^9}, {3.719579296415726*^9, 
   3.7195793343819156`*^9}, {3.719579498961565*^9, 3.7195795061447105`*^9}, {
   3.7195796279874535`*^9, 3.7195796437304134`*^9}, {3.7195809216636915`*^9, 
   3.719580946209027*^9}, {3.719581017912757*^9, 3.719581018631835*^9}, {
   3.7195812786226115`*^9, 3.719581299580862*^9}, 3.719581645511384*^9, {
   3.719581770696701*^9, 3.719581772221609*^9}, 3.7195818362169805`*^9, 
   3.7195822970682*^9, {3.7195827300533705`*^9, 3.719582732690276*^9}, {
   3.7195829152452836`*^9, 3.7195829352113333`*^9}, {3.719582991552219*^9, 
   3.7195829941927795`*^9}, {3.719583094568735*^9, 3.7195831076162663`*^9}, {
   3.719583177852125*^9, 3.7195831893652363`*^9}, {3.719583313869602*^9, 
   3.719583314932021*^9}, {3.7195837839559245`*^9, 3.719583787003111*^9}, {
   3.7195838540449657`*^9, 3.7195838543416557`*^9}, {3.719583913807062*^9, 
   3.719583915968214*^9}, {3.7195839730806*^9, 3.7195839739069657`*^9}, {
   3.7195840419802685`*^9, 3.7195840429647007`*^9}, {3.719584108564244*^9, 
   3.7195841090520353`*^9}, {3.719584164656478*^9, 3.719584166202141*^9}, {
   3.719584223451945*^9, 3.719584228606949*^9}, {3.7195843092988005`*^9, 
   3.7195843105956297`*^9}, {3.7195843825034037`*^9, 
   3.7195843834718094`*^9}, {3.7195844432152605`*^9, 
   3.7195844519880867`*^9}, {3.7195845173115563`*^9, 3.719584517906841*^9}, {
   3.719584582770274*^9, 3.719584585923309*^9}, 3.719584657660193*^9, {
   3.7195847878832283`*^9, 3.7195847887284513`*^9}, {3.7195848495004253`*^9, 
   3.7195848597707987`*^9}, {3.71958498064999*^9, 3.7195849816255875`*^9}, {
   3.7195850710775824`*^9, 3.719585072619693*^9}, {3.7195851357395773`*^9, 
   3.719585136746234*^9}, {3.719585985934868*^9, 3.7195859873897758`*^9}, {
   3.7195860487681923`*^9, 3.7195860495973997`*^9}, {3.719586128129712*^9, 
   3.7195861293258977`*^9}, {3.719586238769597*^9, 3.7195862413444605`*^9}, {
   3.719586313315282*^9, 3.7195863167995663`*^9}, {3.719586396049791*^9, 
   3.719586399408743*^9}, {3.719586477714718*^9, 3.7195864780024204`*^9}, {
   3.7195865339597855`*^9, 3.719586536390226*^9}, {3.7195865687024927`*^9, 
   3.7195865772777967`*^9}, {3.7195873064937644`*^9, 
   3.7195873080728407`*^9}, {3.719587463353217*^9, 3.7195874851918736`*^9}, {
   3.7195875621407843`*^9, 3.7195875627196646`*^9}, {3.7195876784000697`*^9, 
   3.719587678728096*^9}, {3.7195877314909687`*^9, 3.7195877326920676`*^9}, {
   3.719587790227979*^9, 3.719587791385828*^9}, {3.719587965935734*^9, 
   3.7195879662324257`*^9}, {3.719588021282386*^9, 3.719588024374019*^9}, {
   3.719588128905106*^9, 3.719588166421815*^9}, 3.7195882474044256`*^9, {
   3.7195883771489105`*^9, 3.7195884155682673`*^9}, {3.7195885013909674`*^9, 
   3.7195885021544614`*^9}, {3.719588626616554*^9, 3.7195886269765778`*^9}, {
   3.719588698154498*^9, 3.7195887172506742`*^9}, {3.719588786610024*^9, 
   3.7195887869381886`*^9}, {3.719588842557537*^9, 3.7195888769172983`*^9}, {
   3.719588975048947*^9, 3.7195889866220493`*^9}, {3.7195890427969165`*^9, 
   3.719589046105387*^9}, {3.7195891036867456`*^9, 3.7195891340311103`*^9}, {
   3.719589230261958*^9, 3.7195892317465*^9}, {3.7195893545073905`*^9, 
   3.719589358537743*^9}, {3.7195894299177094`*^9, 3.719589440369649*^9}, {
   3.71958950560632*^9, 3.719589511436285*^9}, {3.719589570494855*^9, 
   3.719589573792076*^9}, {3.719589664197217*^9, 3.7195896653540506`*^9}, {
   3.719589796939926*^9, 3.7195897986296034`*^9}, {3.719589889663597*^9, 
   3.7195898903661423`*^9}, {3.719589944948238*^9, 3.7195899604621887`*^9}, {
   3.71959001346682*^9, 3.7195900277708*^9}, 3.719590086593302*^9, {
   3.719590164006979*^9, 3.7195901684546375`*^9}, {3.7195903345995827`*^9, 
   3.71959033492774*^9}, 3.7195904032917795`*^9, {3.7195908902216787`*^9, 
   3.719590890614133*^9}, {3.719590949998256*^9, 3.7195909515570126`*^9}, {
   3.7195910439975624`*^9, 3.7195910443880143`*^9}, {3.719591119298934*^9, 
   3.719591148532943*^9}, {3.719591208930297*^9, 3.7195912092584586`*^9}, {
   3.7195912683853383`*^9, 3.7195912797519846`*^9}, {3.7195913508049436`*^9, 
   3.7195913513526373`*^9}, {3.719591862667823*^9, 3.7195918788246503`*^9}, {
   3.719591945432677*^9, 3.719591947287784*^9}, 3.719592023864645*^9, {
   3.719592084745936*^9, 3.719592087454048*^9}, {3.719592319639939*^9, 
   3.719592320011924*^9}, {3.7195924008493147`*^9, 3.7195924011772747`*^9}, {
   3.719592483962159*^9, 3.719592501679543*^9}, {3.719676263866779*^9, 
   3.719676264394186*^9}, {3.7196770059957647`*^9, 3.7196770068279805`*^9}, 
   3.7196772640149117`*^9, {3.7196773372937803`*^9, 3.7196773388940353`*^9}, {
   3.7196774315353937`*^9, 3.7196774327486196`*^9}, {3.7196775141093082`*^9, 
   3.7196775143811307`*^9}, {3.7196775921118183`*^9, 3.71967759594811*^9}, 
   3.719677673660042*^9, {3.719677751343948*^9, 3.719677752285832*^9}, {
   3.7196778375046015`*^9, 3.719677844815587*^9}, {3.71967802218888*^9, 
   3.719678022847017*^9}, {3.719678137232113*^9, 3.7196781376304703`*^9}, {
   3.719678274244687*^9, 3.7196782750245266`*^9}, {3.719678351329441*^9, 
   3.7196783527361927`*^9}, {3.7196784233097067`*^9, 3.719678424109135*^9}, {
   3.719678876540676*^9, 3.7196788772751355`*^9}, 3.719678928127678*^9, 
   3.7196790810659394`*^9, {3.7196792900792446`*^9, 3.719679290661189*^9}, {
   3.719679372578826*^9, 3.719679372946965*^9}, {3.719679536577202*^9, 
   3.7196795450776253`*^9}, {3.71967963966039*^9, 3.719679641177313*^9}, {
   3.7196797022566156`*^9, 3.719679703640903*^9}, {3.719679783663164*^9, 
   3.7196797851264277`*^9}, {3.7196798472180166`*^9, 3.719679848752884*^9}, {
   3.7196799002129016`*^9, 3.719679902638918*^9}, {3.719679965763715*^9, 
   3.719679972957015*^9}, {3.719680042602886*^9, 3.719680044411475*^9}, {
   3.7196801062806473`*^9, 3.719680107641728*^9}, {3.719680163131956*^9, 
   3.719680165670753*^9}, {3.7196802575279803`*^9, 3.719680260583584*^9}, {
   3.719680341350227*^9, 3.719680342014638*^9}, {3.719680725628562*^9, 
   3.719680726663065*^9}, {3.7196808151269884`*^9, 3.7196808163776913`*^9}, {
   3.7196809326321993`*^9, 3.719680933142199*^9}, 3.7196810614348474`*^9, {
   3.7196812199210477`*^9, 3.7196812209839616`*^9}, {3.719681280601135*^9, 
   3.7196812846808357`*^9}, 3.7196813613387847`*^9, 3.7196814300320096`*^9, {
   3.719681517304864*^9, 3.7196815182105255`*^9}, {3.71968163034978*^9, 
   3.719681638665908*^9}, {3.7196817228593507`*^9, 3.7196817238567276`*^9}, {
   3.719681778424108*^9, 3.719681779313679*^9}, 3.719682017617007*^9, 
   3.719682083727356*^9, {3.719682307027517*^9, 3.7196823122169185`*^9}, {
   3.7196823681997347`*^9, 3.719682370528077*^9}, {3.7196824605106497`*^9, 
   3.719682460907647*^9}, 3.7196825156156654`*^9, {3.719682594433069*^9, 
   3.7196825996216836`*^9}, 3.7196826963887634`*^9, {3.7196828020928574`*^9, 
   3.7196828094959764`*^9}, {3.7196829000537815`*^9, 
   3.7196829084951944`*^9}, {3.7196829687812605`*^9, 
   3.7196829750143385`*^9}, {3.7196830388546925`*^9, 3.719683039465969*^9}, 
   3.719683211256321*^9, {3.719683273378443*^9, 3.719683274159999*^9}, 
   3.7196833334924917`*^9, {3.719683391486043*^9, 3.7196833929422493`*^9}, 
   3.7196834670189195`*^9, {3.7196835385344715`*^9, 3.7196835403481426`*^9}, 
   3.719683598403265*^9, 3.7196836664992456`*^9, {3.719683741728691*^9, 
   3.7196837428055773`*^9}, {3.7196839935941353`*^9, 3.719684002598155*^9}, {
   3.7196840648711543`*^9, 3.71968406520605*^9}, {3.719684145717125*^9, 
   3.7196841551582575`*^9}, {3.7196842168072*^9, 3.719684221205902*^9}, {
   3.7196842775758057`*^9, 3.7196842778144407`*^9}, {3.7196843679732075`*^9, 
   3.71968436839032*^9}, {3.7196845286004167`*^9, 3.71968453007135*^9}, {
   3.719689293898493*^9, 3.7196893014014916`*^9}, {3.7197507450440273`*^9, 
   3.71975075568039*^9}, {3.7197508336823072`*^9, 3.7197508340172253`*^9}, {
   3.7197509710435195`*^9, 3.7197509722747774`*^9}, {3.7197510846749516`*^9, 
   3.719751093075292*^9}, {3.7197536073115587`*^9, 3.7197536103346014`*^9}, {
   3.719763415746185*^9, 3.719763416482315*^9}, {3.719763557668811*^9, 
   3.7197635584130354`*^9}, {3.7197636579034786`*^9, 
   3.7197636694870186`*^9}, {3.719763737088541*^9, 3.7197637377334304`*^9}, {
   3.719763815827739*^9, 3.7197638162025733`*^9}, {3.719763952518857*^9, 
   3.7197639533464885`*^9}, {3.71976420751054*^9, 3.719764212326335*^9}, {
   3.719764291216848*^9, 3.719764293596089*^9}, 3.719764393553385*^9, {
   3.7197644480886765`*^9, 3.7197644510453014`*^9}, {3.7197645874704466`*^9, 
   3.719764587909299*^9}, {3.7197646515314465`*^9, 3.719764680015334*^9}, {
   3.719764858911066*^9, 3.719764860031741*^9}, 3.719845253286975*^9, {
   3.719845496296767*^9, 3.719845543528284*^9}, {3.71984723584814*^9, 
   3.7198472528989277`*^9}, {3.719847804986738*^9, 3.7198478080547004`*^9}, {
   3.7198485461679935`*^9, 3.719848549539918*^9}, {3.7198497339342823`*^9, 
   3.719849736966198*^9}, {3.719849809878644*^9, 3.719849840779941*^9}, {
   3.7198498722551785`*^9, 3.7198498740211687`*^9}, {3.7198501927849817`*^9, 
   3.7198502039647017`*^9}, {3.719850309858729*^9, 3.719850310561886*^9}, {
   3.7198503413941016`*^9, 3.7198503502482944`*^9}, {3.7198503845238523`*^9, 
   3.719850386086343*^9}, {3.7198504570924387`*^9, 3.719850463953076*^9}, {
   3.719850518538866*^9, 3.7198505200234027`*^9}, {3.719850578614622*^9, 
   3.719850579318037*^9}, {3.7198506528866715`*^9, 3.7198506537617836`*^9}, {
   3.719850726014327*^9, 3.71985072673316*^9}, {3.719850784620494*^9, 
   3.7198507855424623`*^9}, {3.7198509631235247`*^9, 
   3.7198509634985676`*^9}, {3.7198510380367146`*^9, 
   3.7198510389748554`*^9}, {3.7198511113369184`*^9, 3.719851111633992*^9}, {
   3.7198511863732967`*^9, 3.719851188732923*^9}, {3.7198512453460426`*^9, 
   3.7198512459554815`*^9}, 3.719852198261549*^9, 3.719855004027569*^9, {
   3.7198574584754305`*^9, 3.7198574669351053`*^9}, 3.7198576755538645`*^9, {
   3.719857807741104*^9, 3.7198578082257347`*^9}, {3.7198584353167396`*^9, 
   3.719858435738824*^9}, {3.719858511026016*^9, 3.719858512608221*^9}, {
   3.7198586146883774`*^9, 3.7198586240481944`*^9}, {3.7198586992154827`*^9, 
   3.7198587051833043`*^9}, {3.719858773232716*^9, 3.719858775598981*^9}, {
   3.7198588475226383`*^9, 3.7198588538223658`*^9}, {3.7198589228573923`*^9, 
   3.719858925002078*^9}, {3.7198590247485304`*^9, 3.7198590250924425`*^9}, 
   3.7198599987960644`*^9, {3.7198601397396226`*^9, 3.7198601471994514`*^9}, {
   3.7198602068238935`*^9, 3.719860208556498*^9}, 3.7198619992516403`*^9, {
   3.7198622463692904`*^9, 3.719862252840296*^9}, {3.7198623779987698`*^9, 
   3.719862385297601*^9}, {3.719862451206191*^9, 3.7198624520811863`*^9}, {
   3.719862513453104*^9, 3.7198625139842467`*^9}, {3.7198625715206017`*^9, 
   3.719862572186927*^9}, {3.7198631628518696`*^9, 3.7198631643107204`*^9}, {
   3.719863250483753*^9, 3.7198632513620934`*^9}, 3.7199443017625475`*^9, {
   3.719944566004468*^9, 3.7199445662791977`*^9}, {3.7199446404410534`*^9, 
   3.719944646670618*^9}, {3.719944711120508*^9, 3.7199447258771977`*^9}, {
   3.7199448431594534`*^9, 3.719944843475684*^9}, {3.7225783183939705`*^9, 
   3.7225783235155497`*^9}, {3.7225798589847345`*^9, 3.722579893684168*^9}, {
   3.7239051317249317`*^9, 3.7239051330213013`*^9}, {3.7239052313383913`*^9, 
   3.723905232933097*^9}, {3.7239058822442336`*^9, 3.723905882695431*^9}, {
   3.723906099077862*^9, 3.723906099857636*^9}, {3.7239062504797096`*^9, 
   3.723906250815158*^9}, {3.723906517945977*^9, 3.7239065195089474`*^9}, {
   3.7239066536975174`*^9, 3.723906655185789*^9}, {3.7239068062712092`*^9, 
   3.7239068071349683`*^9}, {3.723907541335802*^9, 3.7239075486521063`*^9}, {
   3.7239077408127117`*^9, 3.7239077458345995`*^9}, {3.723907863865996*^9, 
   3.723907864337206*^9}, {3.7239082889186783`*^9, 3.7239082893478675`*^9}, {
   3.7239084696021433`*^9, 3.723908470326251*^9}, {3.723908606864607*^9, 
   3.72390860723815*^9}, {3.7239088254110823`*^9, 3.7239088256625495`*^9}, {
   3.7239093444127874`*^9, 3.7239093447452965`*^9}, {3.7239096980825267`*^9, 
   3.7239096983076496`*^9}, {3.723910136514007*^9, 3.7239101371140914`*^9}, {
   3.723910371371704*^9, 3.7239103720201297`*^9}, {3.7239105058867226`*^9, 
   3.723910506182049*^9}, {3.723910892673862*^9, 3.723910892830597*^9}, {
   3.7239110774532146`*^9, 3.723911077769127*^9}, {3.7239112161921463`*^9, 
   3.723911216566649*^9}, {3.723911382036188*^9, 3.7239113823403835`*^9}, {
   3.7239117556455345`*^9, 3.723911755906763*^9}, {3.723911870211233*^9, 
   3.7239118707566347`*^9}, {3.723911943949043*^9, 3.723911944242978*^9}, {
   3.723912084847165*^9, 3.7239120860946918`*^9}, 3.7239122194314795`*^9, {
   3.723912673860669*^9, 3.7239126740916204`*^9}, {3.72391283880873*^9, 
   3.723912845081128*^9}, {3.7239129343260727`*^9, 3.7239129394915075`*^9}, 
   3.723913061241887*^9, 3.723914649898758*^9, {3.7277026271478615`*^9, 
   3.7277026493434834`*^9}, {3.727703354533304*^9, 3.7277033603423405`*^9}, {
   3.7277034684462833`*^9, 3.7277034742868433`*^9}, {3.727703931558593*^9, 
   3.7277039381008053`*^9}, {3.7277055434388876`*^9, 
   3.7277055648557773`*^9}, {3.7277125377036824`*^9, 
   3.7277125422508445`*^9}, {3.734868586189165*^9, 3.734868602335432*^9}, {
   3.734868781332365*^9, 3.7348687972084894`*^9}, {3.73486948559657*^9, 
   3.734869486265407*^9}, {3.734872323295432*^9, 3.7348723331446114`*^9}, {
   3.73487399117463*^9, 3.73487401388793*^9}, 3.73487463382098*^9, 
   3.7348752155708976`*^9, {3.73487524844972*^9, 3.734875257175599*^9}, {
   3.7349689716862183`*^9, 3.734968984435136*^9}},
 ExpressionUUID -> "3eb7cfc1-46e5-41c0-96d2-2284fc17e180"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "This section is to save the results ",
 StyleBox["with ", "Subsection"],
 StyleBox["fixed e2 and p", "Subsection",
  FontWeight->"Bold"],
 StyleBox[" values but ", "Subsection"],
 StyleBox["\[Alpha] varying from 0 to 1", "Subsection",
  FontWeight->"Bold"]
}], "Subsection",
 CellChangeTimes->{{3.722579918705484*^9, 
  3.722579950439159*^9}},ExpressionUUID->"51acba99-e8c7-42cc-9391-\
148add21744b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", " ", "=", " ", 
   RowBox[{
    RowBox[{"Reap", "[", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{"NDSolve", "[", 
          RowBox[{"eqs", ",", " ", 
           RowBox[{"{", 
            RowBox[{"Res1", ",", " ", "Res2", ",", "Con", ",", " ", "Pred"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Sow", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Res1", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Res2", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",",
               " ", 
              RowBox[{"{", 
               RowBox[{
               "t", ",", " ", "8000", ",", " ", "10000", ",", " ", "0.01"}], 
               "}"}]}], "]"}], "//", "Mean"}]}], "}"}], "\[IndentingNewLine]",
          "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", "1", ",", " ", "0.01"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<K:\\\\IGP exp_in lab\\\\ProgressReport_20171115\\\\Type2.csv\>\"", 
    ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"aa", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.718471959583766*^9, 3.7184719790760336`*^9}, {
   3.718472099816351*^9, 3.718472138107117*^9}, {3.718472230043913*^9, 
   3.7184722694540415`*^9}, {3.718472980476659*^9, 3.71847298100642*^9}, {
   3.7184757560472913`*^9, 3.718475757306547*^9}, {3.718487806923459*^9, 
   3.7184878100619802`*^9}, 3.719684562555911*^9, {3.722579959963993*^9, 
   3.722579968316969*^9}},
 ExpressionUUID -> "2a975dd8-20e0-4e04-baa1-67d9b38ce3e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
This section is to save results with e2 varying from 0 to 0.5, p varying from \
0 to 0.15 and \[Alpha] varying from 0 to 1\
\>", "Subsection",
 CellChangeTimes->{{3.7225799862709484`*^9, 3.722580101277014*^9}, {
  3.7239146871612854`*^9, 3.723914692975872*^9}},
 ExpressionUUID -> "f03b609c-e30c-428b-978d-6c98029ff8a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "1.71641"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K1", "=", 
   RowBox[{"8.13829", "*", "1.3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "1.71641"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K2", "=", 
   RowBox[{"8.13829", "*", "1.3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e1", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", "0.38580"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h2", "=", "0.35959"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Res1", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"r1", "*", 
        RowBox[{"Res1", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Res1", "[", "t", "]"}], "K1"]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"A", "*", "p", "*", 
           RowBox[{"Res1", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S1", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "*", 
           RowBox[{"Res1", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Res2", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"r2", "*", 
        RowBox[{"Res2", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Res2", "[", "t", "]"}], "K2"]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"A", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "*", 
           RowBox[{"Res2", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S1", "*", "p", "*", 
           RowBox[{"Res2", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"B", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"B", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{"M", "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S2", "*", "\[Alpha]", "*", 
           RowBox[{"Con", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"e1", "*", "S1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"e1", "*", "S1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"e2", "*", "S2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}], "-", 
       RowBox[{"d", "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Res1", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Res2", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.722580956639426*^9, 3.7225810295920343`*^9}, 
   3.7239146994325933`*^9, {3.7239151731379385`*^9, 3.7239151865356827`*^9}, {
   3.7239159934099417`*^9, 3.7239160011440673`*^9}, {3.723916118893922*^9, 
   3.7239161226549425`*^9}, {3.7239161687227097`*^9, 
   3.7239162618944707`*^9}, {3.723916328383267*^9, 3.7239163655246058`*^9}, {
   3.7277026139957204`*^9, 3.727702614419919*^9}, {3.734872020183792*^9, 
   3.734872027145296*^9}, {3.7348753144438705`*^9, 3.7348753150073404`*^9}, {
   3.7349341598734374`*^9, 3.734934164809789*^9}, {3.7349531970369377`*^9, 
   3.734953212262684*^9}},
 ExpressionUUID -> "8eff09f7-de33-43f4-8799-a4685bfd7f1b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"aa", " ", "=", " ", 
     RowBox[{
      RowBox[{"Reap", "[", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
          RowBox[{"sol", "=", 
           RowBox[{"NDSolve", "[", 
            RowBox[{"eqs", ",", " ", 
             RowBox[{"{", 
              RowBox[{
              "Res1", ",", " ", "Res2", ",", "Con", ",", " ", "Pred"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"tab", " ", "=", "  ", 
           RowBox[{
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Res1", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Res2", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",",
               " ", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "t", ",", " ", "8000", ",", " ", "10000", ",", " ", "0.01"}], 
               "}"}]}], "\[IndentingNewLine]", "]"}], "//", "Mean"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Sow", "[", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "tab"}], "}"}], "\[IndentingNewLine]", 
           "]"}], ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "0", ",", "1", ",", " ", "0.2"}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "\"\<E:\\\\Research_MonthBackup\\\\IGP_LabExp\\\\Analysis\\\\\
Type2ModResults_K_up\\\\Type2_e2_\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"e2", "*", "10"}], "]"}], "<>", "\"\<_p_\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"p", "*", "100"}], "]"}], "<>", "\"\<.csv\>\""}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "4", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "6"}], "}"}]}], "]"}]}], "]"}], ";"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"e2", ",", " ", "0", ",", " ", "0.5", ",", " ", "0.01"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"p", ",", " ", "0", ",", " ", "0.2", ",", " ", "0.01"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.723916379310976*^9, 3.7239163846541204`*^9}, {
   3.7239164422738476`*^9, 3.7239165338735423`*^9}, {3.7239170117568884`*^9, 
   3.723917012276288*^9}, {3.723917401451458*^9, 3.723917440154925*^9}, {
   3.7239182429961*^9, 3.723918260763708*^9}, 3.7348722757520638`*^9, {
   3.73487546480079*^9, 3.7348754847201595`*^9}, {3.7348758192887955`*^9, 
   3.7348758275276203`*^9}, {3.734875961585166*^9, 3.7348759625341873`*^9}, 
   3.734876005784177*^9, {3.734876145486144*^9, 3.73487614773487*^9}, {
   3.73493418266281*^9, 3.734934183872004*^9}, {3.7349532193797503`*^9, 
   3.734953225246961*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndsz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"At \[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"597.4605366011588`\\\"}]\\)\[NoBreak], step \
size is effectively zero; singularity or stiff system suspected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndsz\\\", \
ButtonNote -> \\\"NDSolve::ndsz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.734953422349132*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
\\\"8000.`\\\", \\\"}\\\"}]\\)\[NoBreak] lies outside the range of data in \
the interpolating function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.734953422380354*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
\\\"8000.`\\\", \\\"}\\\"}]\\)\[NoBreak] lies outside the range of data in \
the interpolating function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.734953422411642*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
\\\"8000.`\\\", \\\"}\\\"}]\\)\[NoBreak] lies outside the range of data in \
the interpolating function. Extrapolation will be used. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.7349534224428577`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\", \
\\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be \
suppressed during this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.734953422489798*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndsz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"At \[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"453.5562905594548`\\\"}]\\)\[NoBreak], step \
size is effectively zero; singularity or stiff system suspected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndsz\\\", \
ButtonNote -> \\\"NDSolve::ndsz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.734953440455893*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndsz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"At \[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] == \
\[NoBreak]\\!\\(\\*RowBox[{\\\"665.214841154086`\\\"}]\\)\[NoBreak], step \
size is effectively zero; singularity or stiff system suspected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndsz\\\", \
ButtonNote -> \\\"NDSolve::ndsz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7349534452212753`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \
\\\"ndsz\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7349534452681627`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The precision of input value \[NoBreak]\\!\\(\\*RowBox[{\\\
\"{\\\", \\\"8293.16`\\\", \\\"}\\\"}]\\)\[NoBreak] and/or the interpolation \
grid is insufficient to compute the value. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dprec\\\", \
ButtonNote -> \\\"InterpolatingFunction::dprec\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.734959480105358*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The precision of input value \[NoBreak]\\!\\(\\*RowBox[{\\\
\"{\\\", \\\"8293.16`\\\", \\\"}\\\"}]\\)\[NoBreak] and/or the interpolation \
grid is insufficient to compute the value. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dprec\\\", \
ButtonNote -> \\\"InterpolatingFunction::dprec\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.734959480142516*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The precision of input value \[NoBreak]\\!\\(\\*RowBox[{\\\
\"{\\\", \\\"8293.16`\\\", \\\"}\\\"}]\\)\[NoBreak] and/or the interpolation \
grid is insufficient to compute the value. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dprec\\\", \
ButtonNote -> \\\"InterpolatingFunction::dprec\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.7349594801765842`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\", \
\\\"::\\\", \\\"dprec\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be \
suppressed during this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.734959480210698*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "21"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "21"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "21"}], "}"}]}], "]"}]}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Total Resources\>\"", ",", " ", "\"\<Consumer\>\"", ",", " ", 
      "\"\<Predator\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQOzSovO37sh4TBrJgistFe6dVmZOxLG32k/5dbJ
CFcTCQcTYxA4bH+z4VeeexRM/qR9a66XdIqyhAPEtAv2XWqHz675IQ5Vf9k+
WTlU5aeUhEN6GghcsxfbOtn+719xqP6b9lPFD3fEWkk4nD0DAnfs3QQm8Fiv
gpn3wJ7fsWOT8xOYfQ/te7bf7Fi2XhJq/mP72N8s6mu6paD6n9hHrSrucZ8p
DbXvmf0PBUOxDaUyUPNe2Icws8zRiJOFmvfSvsDezW5pkRzUvNf2KtM3PfuR
LA817439ryZvu8PKClDz3tm3vAmXt65RgJr3wX7Gk2AViQsKDgDP7opC
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQOG1472v8j4aj9rJgistOd1KfPdEQzj77TnZbU+
mWH+1d7EGAQO2/tum3bAQBQmf9JeU1NjjvmTL/YQ0y7YJ7D5cC+e/wWq/rK9
yry9vqsSvtinp4HANfv1MbuSSt9/huq/aa8kdpSluPyz/dkzIHDH3ikrp+zs
609Q8x7YZ6tULbnu8wmq/qF9d+qplc/OfISa/9h+6QN9092KH6H6n9ibC8nW
71z6AWrfM/v7eVt7uAw/QM17YR+Qcs66lu091LyX9onrzz113PsOat5re8t3
L8/lfngLNe+N/bfs9dxbP7+FmvfOfuP6K4fqNd9Czftg3962c2L5sjf2AKtq
njw=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMb1/03Fy/8aT9rJgistL/++PznzAwYf6f94xtn
VF3W/7Q3MQaBw/brdnZZBkXD5E/aSx7kPbts8k97iGkX7Hs2ujH/lP4FVX/Z
/s8r+Sz9/p/26WkgcM3+XUOGv0XiL6j+m/ZhFVt2Wcr9tj97BgTu2B8SufHC
6eBvqHkP7J1U5Rss9/2Gqn9oz3Q+TWjfv99Q8x/b83w2yX1t/Aeq/4l9YNqv
/Te+/4ba98xeaxnvtRltMPNe2Jtwps+ZoQMz76U9X/rnqjVuMPe+tnc587X0
g/FPqHlv7LdbT177LPQH1Lx39gnBH+K3L/sONe+D/VtV1+3uFt/tAVeAoWI=

         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {0, 8.40643418811878}}, PlotRangeClipping -> True,
      ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 8.40643418811878}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Total Resources\"", "\"Consumer\"", "\"Predator\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.722581107507036*^9},ExpressionUUID->"e4498880-5b30-428c-92d3-\
3cfc6b2f0916"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Model results with type I functional response", \
"Section"]], "Subsection",
 CellChangeTimes->{{3.7185325963578334`*^9, 3.718532604238615*^9}, {
  3.7225801527800884`*^9, 
  3.722580162601801*^9}},ExpressionUUID->"942d5e99-2d11-4cbe-a38a-\
ba37faaaf212"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "2.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K1", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "2.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"K2", "=", "50"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", "0.3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "0.7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e1", "=", "0.3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e2", "=", "1.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "2.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "0.75"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqs", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Res1", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"r1", "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Res1", "[", "t", "]"}], "K1"]}], ")"}]}], "-", 
        RowBox[{"A", "*", "p", "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"S1", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}], "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Res2", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"r2", "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Res2", "[", "t", "]"}], "K2"]}], ")"}]}], "-", 
        RowBox[{"A", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}], "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"S1", "*", "p", "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"B", "*", "A", "*", "p", "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "+", 
        RowBox[{"B", "*", "A", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}], "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"M", "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"\[Alpha]", "*", 
         RowBox[{"Con", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"e1", "*", "S1", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}], "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}], "+", 
        RowBox[{"e1", "*", "S1", "*", "p", "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}], "+", 
        RowBox[{"e2", "*", "\[Alpha]", "*", 
         RowBox[{"Con", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}], "-", 
        RowBox[{"d", "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Res1", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Res2", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aa", " ", "=", " ", 
   RowBox[{
    RowBox[{"Reap", "[", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{"NDSolve", "[", 
          RowBox[{"eqs", ",", " ", 
           RowBox[{"{", 
            RowBox[{"Res1", ",", " ", "Res2", ",", "Con", ",", " ", "Pred"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Sow", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Res1", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Res2", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",",
               " ", 
              RowBox[{"{", 
               RowBox[{
               "t", ",", " ", "8000", ",", " ", "10000", ",", " ", "0.01"}], 
               "}"}]}], "]"}], "//", "Mean"}]}], "}"}], "\[IndentingNewLine]",
          "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", "1", ",", " ", "0.01"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Total Resources\>\"", ",", " ", "\"\<Consumer\>\"", ",", " ", 
      "\"\<Predator\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7185317057375917`*^9, 3.7185317113785973`*^9}, {
   3.718531741651435*^9, 3.7185318424595175`*^9}, {3.7185321309933896`*^9, 
   3.718532165472278*^9}, {3.718532291026865*^9, 3.718532350097881*^9}, {
   3.7185324744141426`*^9, 3.7185324799257917`*^9}, 3.7185327100850754`*^9, {
   3.7185329806648417`*^9, 3.7185329860553975`*^9}, {3.718533184681371*^9, 
   3.7185331907828116`*^9}, {3.7185332347111635`*^9, 
   3.7185332510535345`*^9}, {3.718533377998*^9, 3.718533380708382*^9}, {
   3.718533664589226*^9, 3.7185336658050184`*^9}, {3.7185338259180627`*^9, 
   3.718533835847007*^9}, {3.718533867625845*^9, 3.718533892919956*^9}, {
   3.718534129234771*^9, 3.7185341627600584`*^9}, {3.718534322964924*^9, 
   3.7185343959268727`*^9}, {3.71975199693289*^9, 3.719752054116332*^9}, {
   3.7197520894304748`*^9, 3.719752124053776*^9}, {3.719752655913686*^9, 
   3.7197526656906853`*^9}, {3.7197526966349745`*^9, 3.719752697385972*^9}, 
   3.7197539110392523`*^9, {3.719754034416345*^9, 
   3.7197540346860657`*^9}},ExpressionUUID->"3a05458d-e6c5-43b8-b723-\
11ce0d644293"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw1kglMk2cYxxnoFjC6iLqJTHAy5fvaQi/ackz+r4hHMNGBQ7YFdeo8kCA6
YYugQiImKhpF0InbIBuILpM6nUE3xSHHtCKHF4WChYIthR4MFKOAc7R7+iRf
vnzH+xy/3/PhhtS4Te5ubm6bxi/H3RXFN66mtFfwLHO6eqkhIwfdKVVv1IWu
5wLUFfccPrSPZ9f8DlhirxVBd2qiKXmT63sp0qbW1qxewbMzhY74BS+9tlyO
CXP9r0b3Kq3vsvk8s8Y63lxCRMkPi1fOcJ2/AkVD5ydfvs0zL23JjgVeV5F7
Pj088xVH+f5A6l92XbGdY3ziseph7gYW55WbGowc5b+JKwkT7BM6OVY6flpb
UoWXt+PXROs4qncLPjexN1fLMbkzaqAwa75ua+Gofi2U7mcQ1MqxmmFuvEId
uB5x9YF2jvq5jY7YeRWGLo7FOQvegW9v2hWYXf1pcDn/b3nRIMcMGY6Ed1E5
uerg6Jir33sQiNaa4r14ttPR3o4G7LGsWPurj4tPI2Zy8YZXAp79b6MZI9+V
A5E8zdMMvXAPv3sVz5Y5C9xH5NoI8dltLp73kfqRrLpqP88c1RKPPcDCCmuI
poineR+iu/b6ePDMOY72IfJKFSkndS7+j9CcVRm1apRn/o52/B5jaO5kn6HZ
AuLxGB+0Vv+2PUrAtmx2RAu2KZ+p67YKiI8WltrKH58dFzBHtulqLbgjRuvz
PwXEqxWzspKH6kwC9sKRbrgVpW5Blg3ThcSvDd7GnNHbi4Qs0plQh/PpNvFg
mpB46nC3/9xe3Tkhc7Z3oB3bAzfUZHUIiW8H8psMmg5vEWu454gO6JvU0bYY
EfF+Aum6Ww8u5IjYDGeDeqx/LX7zXpWI+OuReVG/MPC1iDnTJXaiMVnq1hYR
RD66EG6/fjRwTxDN04WNvcOiKTeDyE8XopNt7x58K5jm64JeNfLZ8SXB5MuA
nxft9J17NJjmNWDo988TQx8Hkz8Dnjf5TWv0E9P83Wh5Hi3QJ4nJZzdiCn2z
N1aIiUc3Pg27tkvkLiG/PZi3YE5BBy8hPj3QXA3JRpyEfPegzDvoRFymhHg9
hbq203/aWQn5f4qshFmZ+5okxO8p6sNfDOaNSGgfjNg1SdwUM19KPI1YXvzN
F2VxUtoPI16dvdP6U5aU+JoQsKbySHi5lPbFBOOa9oqUdinxNsEz13wy1EtG
+9OLgNehW06HyYh/L4r9/918OElG+9QL/cr85klnZOTDjEOe9Xqfehn5MGNw
X+i9S2My8mFG1uSMh83BcvJhxu6KbHHaejn56MOFEq1vYYGcfPQhKqDv0cd3
5OSjDzeiFp1OHJOTj3541LSVDktC2HGnj37kFCyNmLg5hHz0o1M6pejg9yHk
w4KVzx5N3Xs/hHxYcGp/yZPOdxTkw4J1Ef7L1ZEK8mFF9vs1ZcZ0Bfmw4quW
mWx/uYJ8WFGSZE/KMSrIhw0JytwM02wl+bBhSkpPfdlqJfmwobdfc736mJJ8
2OHZ6H9BpVGSDzuEA+4eHh4q8mFHUeuoYO4CFfkYALYG5p/4VkU+BmAZWX8x
9rKKfAwgQpX6MtGmIh//oCxgjvUSF8r+A+Jf9nc=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw1kglQlHUYxvcUtLYU0HGqhcGK0EwTtNEKn88jpUwJRB0TywtQ81gcwRVx
lYYzC0xRwTMGR0ZTVHBERsEDyDsVtUVR2MNl74NjAXfZ3dj9Xt+Zb775jv/7
Ps/ze0NXbIxL5HE4nMSBy3t/U9ujokbmLB/EbAuqmK1Mz8K0J8dqjVPePBch
SFrGDA0YxFwKzjbGXjqKHSPVfna9kL4fR6kqXXboupA5WOKtkzhwuChQWCKk
/ytQoJr/ZaREyJhivW/OQ6YoX/PJ7DfnL8DlCflALRYyQ+Rlkqgh1fi4uO5B
creA+tXg+tE7wuo7AmZ0QuENe/gVeFyl05v+ElD/Otzy+010OU3AHB84LS+7
Brcn07bpewHNu44F/gFSZ6iAifRVPdZxxJELe/k0vwHirWcrs+7xmXp7+MCE
Rgzxf5ifV8onPTfxZ1vM3JVpfCbON/AW+luL946Ywyd9tzHhV1l3WQifUaZ7
G95B8RbRYFE3j/TeQ4jfj7/Mv8VjUrzyJPdRmBd7UXqYR/r/RRM3P1sm4TEs
jYc4kidKTZrJIz8PMU81MTRiJI+J9g14hCkfrg9TG7nk7xHGqN8J3XaVy3in
JRQ2oaZl7BnnHi75fQxzWtJAcRmfHfljTJLWaK9M4ZL/J9Auj7/LEXGZEK+c
4KeoSFtzKlLBoTye4pCLK15UxWGSvW2S/oMus6lmXQ6H8pGjKvfdEWmLOYy3
W1CFHHdzpzduHsuhvJoxlmEqn7g96PG2szfjQEztjXPHPWDze4as+PflO7/z
YKqv4XMsG/5CGG1zg83zOd7m7l82eL8bPnnZLQiJLu+6+ZUbbL4v8LvQ1Jij
dOH+PW+9wKYTm5ujc11g836JGcOmhg37zIXhPoGtmMuxlKma+sHm34q48j9w
TdoPX7uENozWRStOB/eD5aHAhoBxSX83OMH6UWDq0o6TdWudYPkowFtxNkM/
1En+FDh26EL5uGoHWF5KSBJnmnYvdZBfJZRBifxAgQMsPyUWnjt1pPrUa/Kv
gvS1cGVm7GuwPFWoOlPUuamvj/JQQeXYrCo41geWrxol7uKr8ll9lI8a6WuP
in6w9ILFo0ble+WzHPt6Ka9XeJAysaU5qhcs/1dYcIIfYdH0UH6v0O4xl39d
0AN2HzRoEN8u/OeLHspTg0XpcyIK2uxg90ODJam2+/vy7JRvO+wHFfvbJtjB
7ks72ra2XFzf0k15t2NeW+jc6dndYPdHC4Pfqg0/j++m/LVYXnr+o5vPusDu
kxZx7jUbt2V1EQ8d+naMnyEb30U8dIiXvcx/9LyTeOhQv102aktOJ/HQ4bH4
G6UkopN46PFTcG7htdYO4qFHMafGmLyrg3jocV667uTqyR3EwwBrb0xKg8aG
3T4eBmQEf67M2GsjHgYYXI5de6fZiIcRfFNuV6DCSjyM0MQXxdRHWYmHESsF
3GGTD1uIhwkRiz/1S3WaiYcJG5xuY8YSM/Ewwap7a1XcFRPxMENTVeruFZuI
hxmtS0yTJDuNxMMMkTBwY63aQDwsMHgWO5SzDcTDgjGrZwUqTuuJhwV7YhsV
NQF64mFFsyMuNWWrjnhYcXlE2AN/pZZ4WLEjJaE581st8bBBLA5Pbq1sx/+A
chdm
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw1kwtMU3cUxktLKW1pe69SFl3AucQIbvGZ4APl+09xoLIhCDhmo0AEROdr
8QVsAR/NYCYiUB847SAQgcw122Q+qhtOZMKkRnlYcCAtIIUCZVuCQwh0tDue
5Obmvs75vu937tzk/TEpQoFAkDJ9uM5vyrQ7vvhWkwfL8jWEWzNPIeWMtrF0
ppCuddDnBtRtiRWyWwHawehbeqx6O3J9o+7N83JoS5NmSluF7FKxq6ow1rF0
XKIW0fsGRHZubPg9VsSGol13fkRL5/tx63Qi+r4aXx8tPJrVLGIyc9mBNbKb
EOZUqfbO8KR+t/G9V7TQL9qTBWny748G3sXpkthVh/I9qf+vCA+oqNSaPFn5
9NfmsnvIz/kmLEIupnm/4biHv48xQsyWuasWswV9onatmOY/wBZb9fKy+2JW
Oxo4PaEOaWPZRj+nmPQ8RN9YxdUlIV4sxj2wHgUDgQH/HPEifQ2o2tGwMf4n
L2bNdDX8A2H+Eds1w16ktxHlztxCYaCEHXTJO2DClPOXoPBkCel/DGNZwb7A
yxL2P40naIr9qLq8VUJ+niC4dyreqPRmEe4BT7FAfflOWrg3+XuKFxfnbf4u
25u5pmnym/BFUd3pkze9yW8zRsYd0+XN3HbMzfhEnCkamicl/y3gxTWaDI2U
zXHJCWjFpN1w4VyhlPJoRctM+6eol7K0VFc9w/3xZ/GHJ6WUjxl3Ll1fH7xU
xlzdfA1mHN1ZOZiTKqO82hA2YfaLvSRjr1ztRtvgGNrzrcEko/zaYX1dmpYv
kLNQd8PnuFPdum10qZzyfI6sxLzPu3bKmVue9k8c0nx2LfK8nPLtgIcg0Xf1
QzkzNbqqAysHMmuu/SunvDuR5SEzXZnvw9RugS/gTChIVW71ofxfIGqivmZS
68Pc7TRd6N9U7Len2od4WLDX863rcd0+5MeCcWem7a5KQXwssITN5kpWK8if
BetnaIqmdimIlxVdRoPVrFOQXytmVWQcfu+egvhZkV6hah6zK8h/N7qm9LlQ
K4lnN0y+7yx0hiopj248Uq9LWb5LSXx7sN2+rd12Vkn59CCViwR3W0m8e5A4
si/uB4uS8urFZnV2z0OJivj3QmXMMcYvVFF+vdDZy6s1sSrah5cwOBb/3J6h
ojxfIupeUqVJr6L9eInVUVEnV9SqKN8+hAw+XjfbpqJ96cOatqBjK8Uc5d2H
WYn9m0r9ONofGwomH1U+mM9R/rbp//+yvmwFR/tkg1q4+IPQDRzx6MeS3IRK
XQJHPPpxPs88cjWdIx79SNm6dvnhDI549EN45HWpM5cjHgPQBMzY+uFFjngM
4OCxsOMbKjjiMYCvdrR9LL3BEQ87PKYK/9Y+4NhZNw87zueU6WuaOOJhh0hw
9swNC0c8BpHwfO7kbgdHPAZxYl5MUOcERzwGoX8VHKeQ8sRjCH1zHHUTap54
DKE4+XRt5bs88RjChUlhse8inngMQ2Px0yGEJx7DKM5ZK14QzhOPYZzIrkBL
DE88HDjj//pi6HaeeDiw7Fj6dPHEw4Fgq04ed4gnHiNokOzv8MjmiccITmUv
CjmQxxOPEdR+uSavpIgnHn/hSpL/gqIrPPsPYGrXxQ==
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {0, 24.158964879843232`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 24.158964879843232`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Total Resources\"", "\"Consumer\"", "\"Predator\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7197527495007734`*^9, 3.719754021228301*^9, 
  3.7197542767297225`*^9},ExpressionUUID->"4e5a7a54-2f92-4068-9e41-\
67f397bdc036"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"aa", " ", "=", " ", 
  RowBox[{
   RowBox[{"Reap", "[", "\[IndentingNewLine]", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
       RowBox[{"sol", "=", 
        RowBox[{"NDSolve", "[", 
         RowBox[{"eqs", ",", " ", 
          RowBox[{"{", 
           RowBox[{"Res1", ",", " ", "Res2", ",", "Con", ",", " ", "Pred"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Sow", "[", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Res1", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
               RowBox[{
                RowBox[{"Res2", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
               RowBox[{
                RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
               RowBox[{
                RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",", 
             " ", 
             RowBox[{"{", 
              RowBox[{
              "t", ",", " ", "8000", ",", " ", "10000", ",", " ", "0.01"}], 
              "}"}]}], "]"}], "//", "Mean"}]}], "}"}], "\[IndentingNewLine]", 
        "]"}], ";"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "0", ",", "1", ",", " ", "0.01"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<K:\\\\IGP exp_in lab\\\\ProgressReport_20171115\\\\Type1.csv\>\"", ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"aa", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7185344288700747`*^9, 3.718534437508086*^9}, 
   3.719753967822258*^9},ExpressionUUID->"f5a008f8-0e2e-4d6f-b04c-\
b5be452ec4b4"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 198, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[803, 29, 219, 5, 49, "Subsection"],
Cell[CellGroupData[{
Cell[1047, 38, 13282, 304, 886, "Input"],
Cell[14332, 344, 405, 9, 31, "Output"],
Cell[14740, 355, 207289, 3480, 399, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222066, 3840, 727, 14, 41, "Subsubsection"],
Cell[222796, 3856, 41591, 745, 1066, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[264436, 4607, 418, 11, 49, "Subsection"],
Cell[264857, 4620, 3880, 99, 232, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268774, 4724, 330, 6, 49, "Subsection"],
Cell[269107, 4732, 8220, 209, 625, "Input"],
Cell[CellGroupData[{
Cell[277352, 4945, 4931, 116, 412, "Input"],
Cell[282286, 5063, 581, 11, 21, "Message"],
Cell[282870, 5076, 611, 12, 23, "Message"],
Cell[283484, 5090, 611, 12, 23, "Message"],
Cell[284098, 5104, 613, 12, 23, "Message"],
Cell[284714, 5118, 577, 12, 21, "Message"],
Cell[285294, 5132, 581, 11, 21, "Message"],
Cell[285878, 5145, 582, 11, 21, "Message"],
Cell[286463, 5158, 564, 12, 21, "Message"],
Cell[287030, 5172, 608, 12, 23, "Message"],
Cell[287641, 5186, 608, 12, 23, "Message"],
Cell[288252, 5200, 610, 12, 23, "Message"],
Cell[288865, 5214, 577, 12, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289479, 5231, 2766, 78, 172, "Input"],
Cell[292248, 5311, 16826, 354, 397, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[309123, 5671, 279, 5, 59, "Subsection"],
Cell[CellGroupData[{
Cell[309427, 5680, 10234, 264, 1004, "Input"],
Cell[319664, 5946, 20693, 417, 395, "Output"]
}, Open  ]],
Cell[340372, 6366, 3454, 92, 232, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

