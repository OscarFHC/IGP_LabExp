(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    326591,       6227]
NotebookOptionsPosition[    325203,       6176]
NotebookOutlinePosition[    325546,       6191]
CellTagsIndexPosition[    325503,       6188]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Results of model with type II functional response", "Section",
 CellChangeTimes->{{3.7225792073874717`*^9, 
  3.7225792513205547`*^9}},ExpressionUUID->"390b4f92-903e-4439-9b5a-\
4fa961261121"],

Cell[CellGroupData[{

Cell["\<\
This first section is to try single parameter combination set\
\>", "Subsection",
 CellChangeTimes->{{3.7225792573478956`*^9, 
  3.722579279597886*^9}},ExpressionUUID->"745e81c9-16fd-4c0b-9b8d-\
0cfba270575d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "1.71641"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K1", "=", "8.13829"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "1.71641"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K2", "=", "8.13829"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", "0.78"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e1", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", "0.38580"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", "=", "0.35959"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "1.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Res1", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"r1", "*", 
        RowBox[{"Res1", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Res1", "[", "t", "]"}], "K1"]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"A", "*", "p", "*", 
           RowBox[{"Res1", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S1", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "*", 
           RowBox[{"Res1", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Res2", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"r2", "*", 
        RowBox[{"Res2", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Res2", "[", "t", "]"}], "K2"]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"A", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "*", 
           RowBox[{"Res2", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S1", "*", "p", "*", 
           RowBox[{"Res2", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"B", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"B", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{"M", "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S2", "*", "\[Alpha]", "*", 
           RowBox[{"Con", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"e1", "*", "S1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"e1", "*", "S1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"e2", "*", "S2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}], "-", 
       RowBox[{"d", "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Res1", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Res2", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"eqs", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "Res1", ",", "Res2", ",", " ", "Con", ",", " ", "Pred", ",", " ", "q"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Res1", "[", "t", "]"}], "/.", "s"}], ",", " ", 
      RowBox[{
       RowBox[{"Res2", "[", "t", "]"}], "/.", "s"}], ",", " ", 
      RowBox[{
       RowBox[{"Con", "[", "t", "]"}], "/.", "s"}], ",", " ", 
      RowBox[{
       RowBox[{"Pred", "[", "t", "]"}], "/.", "s"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "16000", ",", " ", "20000", ",", " ", "0.01"}], 
     "}"}]}], "]"}], "//", "Mean"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Res1", "[", "t", "]"}], ",", " ", 
       RowBox[{"Res2", "[", "t", "]"}], ",", " ", 
       RowBox[{"Con", "[", "t", "]"}], ",", 
       RowBox[{"Pred", "[", "t", "]"}]}], "}"}], "/.", "s"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "9000", ",", "Tf"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Resource1\>\"", ",", " ", "\"\<Resource2\>\"", ",", " ", 
      "\"\<Consumer\>\"", ",", " ", "\"\<Predator\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.717181025284259*^9, 3.717181118138817*^9}, {
   3.717181218215954*^9, 3.7171813167622886`*^9}, {3.717181398378661*^9, 
   3.7171816691056705`*^9}, {3.7171817107115126`*^9, 3.717181745161034*^9}, {
   3.7171817777236567`*^9, 3.717181866874895*^9}, {3.7171819189167013`*^9, 
   3.717182013787071*^9}, {3.7171820674667664`*^9, 3.7171821752267895`*^9}, {
   3.717182237714019*^9, 3.717182264066127*^9}, {3.71718230960942*^9, 
   3.717182521218413*^9}, {3.7171825935076094`*^9, 3.717182709665344*^9}, {
   3.717182945826183*^9, 3.7171829764909487`*^9}, {3.71718304079659*^9, 
   3.717183072993797*^9}, {3.71718316538284*^9, 3.717183184394414*^9}, {
   3.717183217057561*^9, 3.7171832337472625`*^9}, 3.717183274064032*^9, {
   3.717183335379603*^9, 3.717183404066572*^9}, {3.717183536185794*^9, 
   3.717183649987437*^9}, {3.7171837026276875`*^9, 3.7171838362104993`*^9}, {
   3.717183890057135*^9, 3.7171840843241606`*^9}, {3.7171841388274283`*^9, 
   3.717184236749412*^9}, {3.7171842806755676`*^9, 3.7171842826094103`*^9}, {
   3.717184344502861*^9, 3.7171843450927725`*^9}, {3.7171844215076466`*^9, 
   3.7171844218012342`*^9}, {3.717184532929681*^9, 3.7171845943656483`*^9}, {
   3.717184640145952*^9, 3.7171846404653845`*^9}, {3.717184675414962*^9, 
   3.7171849510142393`*^9}, {3.717184988417399*^9, 3.7171850255297832`*^9}, {
   3.717185570627535*^9, 3.717185570756548*^9}, {3.717185617512802*^9, 
   3.7171856177998915`*^9}, {3.7171860845366015`*^9, 
   3.7171861638330145`*^9}, {3.7171862240546284`*^9, 
   3.7171862309005747`*^9}, {3.717188947410328*^9, 3.717188962564954*^9}, {
   3.717189118576405*^9, 3.7171891189083223`*^9}, {3.717189160144075*^9, 
   3.7171891704592695`*^9}, {3.7171900922421846`*^9, 3.717190172690037*^9}, {
   3.7171902725919538`*^9, 3.7171903319802895`*^9}, {3.717190416020916*^9, 
   3.7171904237669*^9}, {3.717190494972172*^9, 3.7171905047866983`*^9}, {
   3.717190580472206*^9, 3.7171906130400753`*^9}, {3.7171906922771473`*^9, 
   3.717190710090454*^9}, {3.7171907969575777`*^9, 3.7171908470027623`*^9}, {
   3.7171909032909727`*^9, 3.717190945355277*^9}, {3.717192074929902*^9, 
   3.7171921775761228`*^9}, {3.7171922104799557`*^9, 
   3.7171922538239202`*^9}, {3.7171922989122257`*^9, 3.717192308540033*^9}, {
   3.7171923410868044`*^9, 3.717192538226968*^9}, {3.7171926374107046`*^9, 
   3.7171926756244726`*^9}, {3.718126411234793*^9, 3.718126462593651*^9}, 
   3.718467825658448*^9, 3.719752451527778*^9, {3.7197526209537144`*^9, 
   3.7197526216565866`*^9}, 3.719845244391306*^9, {3.719944507583151*^9, 
   3.7199445285177975`*^9}, {3.7225780476620426`*^9, 3.72257805834408*^9}, {
   3.722578230712858*^9, 3.722578282186466*^9}, {3.722578559906558*^9, 
   3.722578588631407*^9}, {3.7225789133433013`*^9, 3.7225789416033735`*^9}, {
   3.7225791194268847`*^9, 3.722579127732984*^9}, {3.7225791838108215`*^9, 
   3.722579184579377*^9}, {3.7225792872282567`*^9, 3.72257928767552*^9}, {
   3.723905085658146*^9, 3.723905089947155*^9}, {3.727702525373803*^9, 
   3.7277025333800373`*^9}},
 ExpressionUUID -> "e689e6cf-5d68-4ebf-b321-3c8dd48ea804"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1.712288016188693`", "}"}], ",", 
   RowBox[{"{", "5.413769169675768`", "}"}], ",", 
   RowBox[{"{", "1.2396188624902615`", "}"}], ",", 
   RowBox[{"{", "1.7094725158396498`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.717183361237316*^9, 3.7171834064548492`*^9}, {
   3.717183539535798*^9, 3.717183599248475*^9}, {3.717183705263093*^9, 
   3.7171838439123435`*^9}, {3.717183897945176*^9, 3.7171840864248686`*^9}, {
   3.7171841424628754`*^9, 3.717184176577524*^9}, 3.7171842390275297`*^9, 
   3.717184284698913*^9, 3.717184348373473*^9, 3.7171844240556955`*^9, 
   3.7171845366156745`*^9, 3.7171845968634405`*^9, {3.717184649580413*^9, 
   3.7171849082938943`*^9}, 3.71718494065388*^9, {3.7171849904322295`*^9, 
   3.7171850278990507`*^9}, 3.717185575060662*^9, 3.7171856198967404`*^9, {
   3.7171860878411894`*^9, 3.7171861657491264`*^9}, {3.717186226564516*^9, 
   3.717186232803091*^9}, {3.7171889502054415`*^9, 3.7171889645036106`*^9}, 
   3.717189121497534*^9, {3.7171891656926317`*^9, 3.717189172356165*^9}, 
   3.717190097130226*^9, {3.7171901430065317`*^9, 3.7171901747108364`*^9}, 
   3.7171902753002605`*^9, {3.717190314987173*^9, 3.7171903340971017`*^9}, {
   3.717190418811219*^9, 3.7171904258018274`*^9}, {3.7171904982689695`*^9, 
   3.7171905068896675`*^9}, {3.7171905837741385`*^9, 
   3.7171906152596865`*^9}, {3.717190704437745*^9, 3.717190712450549*^9}, {
   3.7171908149533377`*^9, 3.71719084935489*^9}, {3.717190905640012*^9, 
   3.7171909475169306`*^9}, {3.7171920787703605`*^9, 
   3.7171920893980894`*^9}, {3.717192120096923*^9, 3.7171921676451516`*^9}, 
   3.71719221321912*^9, 3.7171922494773264`*^9, {3.717192302712843*^9, 
   3.7171923108447256`*^9}, {3.717192345155565*^9, 3.7171925405245495`*^9}, {
   3.7171926417389975`*^9, 3.7171926657026424`*^9}, {3.7181264175399594`*^9, 
   3.718126465296775*^9}, {3.7197526106282625`*^9, 3.7197526236609125`*^9}, 
   3.719845248098158*^9, {3.719944516593131*^9, 3.7199445327480607`*^9}, {
   3.7225782115942116`*^9, 3.722578285444277*^9}, {3.7225785631297007`*^9, 
   3.7225785913266845`*^9}, {3.722578920895496*^9, 
   3.72257893286368*^9}},ExpressionUUID->"4d4c493d-11d2-4d08-adcc-\
8bf9901a8579"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
gvupl2Eidnj/H6y+oIz13o/jGa8O+u7HI1edDZkQUpQZdRotdE1y44thBkTb
pgiHo+9v0PFnZDMgdSE64QW6hftskZA3A55k35XoRg85HUnPtWbAK5Mbqf/Q
7w9HyK8BBlRP+cptPIL1qmur3WFtBtQne2YeRNsuysgydjGgXc95vS+avKpn
J6zJgMdLb2iZ6JAYukScKgO8q1jJjei1vzhub5RmABFgncBAewRczSZmZkBY
J8tpnT3WMyPvrdNvZ+Dn7KSGOTr0QeltK9cZeFGmx34V/SzW7EzqCh1u+N7v
yEK/SO9Pbgymw0HN/3K/oGP5H+TspNFAjr7Fl4m+1/n7J+UwDcZfXTNUPIr9
RXyEt89zvO+pSwxdRT9tStdrL56Co5PnyrLRB65+0ws+MQmbit/c/Yq2vUka
aZSkwKw7q/0s+gPL5x3f/o5D3VbrTeuPYX+2svXD3foxSBrNnLVApz246d1O
GgXnZ5P1fmj1Y0dbn/eMgOZ5vQeP0ULleZ6HeEeAbeN91yb0t6XNlYeODkPb
3z7tObSJT7JEH2kIsnO28Gw4jvWt4zLbF9Mh8Dp7rfcgWrtIwfvzxCAYKNbn
X0MPBNhRHAoHQfCXeEAOumGV+YIldBD6M86ZNaPvZxMCGv6DUHzyjcw8Ov6/
d5XuYYMQKMc6vsEB7//0h6e3vhgE8/+sqg6hnXJHFyemBkE2LTPSH53hUnl+
C84/dnTSIRf931b5I/sqh+CtpJ5qC9rY5K2//75hCO+KXJpHL/leHfrxaxjs
k/q+Kp3AfLJXg6SfOAKbDm9Jt0SPZrlSBRxGgbnmmmcA+r++QXl7jTGoba3T
e4Ief9X7Ol9mHJJixQW/oSeSjCr4BSdAQ/DNc+WTZCLOzKHGlncSWJtYblqh
WRPp9Xd5p6A10sryOjq4asbkHsc0ZJllKjxFr3tfIiXInIZLPJNT39CirWLF
7e5U0P+8t2YRLbGD+3VwKxUEwiJjN54iE9ybPPTEt9Kg37DvtDU6dm3UlxM+
NChi37IjEL2U+vhxdCENrpP9WPLQAVJ2nGdaaWB+u661FX3EkS9L9i8NZAjx
x0voipCnoVl/aDC64nR5kyOZ2OAcpOTxjQYV71/vs0FzX3gtdx/HCwtiEQ1C
/1FmdYi+SoMje63+5KHXue/446ZBA+XFjDdtaINmwTtOf6kw85YSsozWS44l
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
CyNVdRovxYi6Uev2EfTJb3IS7U/FyXWxw6pitzAvV3J823NZggwPdEkYoAst
rQScd0iSXaXu7C7olZYSm1/1SJLMmOF/0ehVXT/Vv7hJES7H4y0v0LoVz07Y
10sRF01meQt67JLiDR9ZaVLOce75PDr9lrbNCntpIvdj/u7a27g/9yjt1YmQ
JsFZEeEWaPMojVPrUqRJ2zlen1PouqdU6HsmTXR2X7e9hxb3cNLlyZUm8SuF
STl6NW/3E0qGNCnmGzkzjC5/9Gq95C1p0sqofiF2h0LW3i30FzstTaZ+Z/zd
hn7MxeI1tZAmMlXhq7zQDdGfhjhkpInhy8N2d9ATvQncJzqlyJEHenFl6HNr
pjPiH0iRsMtiVX/RdYcVXx6xlCJpx2kLwvF4/kHb2TInJQnlYL2OIfrlh9Jx
w0RJ0rvjqb8HmiE89YyqKkm41CMzb6KT9144FP5agqyXcup4g475/rq/Vl+C
7OIwlOhH79N8xpuXL068qJKWy+9iffVoZ6yWEyc55Y1lrujbfhYipFWUNDx7
zopFR7T0UBPXiZKx+Ctqr9GflxcKj3iLEC0vSFmagP3qo337TncIkdfCL0KK
0BpHXyofXy9Afs1eK+xE09ht33dELCGz/R7UJYl4PsH79ZcP8RLZr0ZrN6Pd
S3mLnY/wkG1vVh52RP84FNnZ0stFnDJm7kSj1wvObui+wEkibrTUvUJvT604
gkWbZJx9xfkHvUJtSdwIBzv57HLDgDcJ68fp5E6NX4swsNv79Eb0zRmKhuPA
PPDpmjw/hF7asLJrXGkOlFcr9F5GX+bK0PZ+PAO7BRZk8tFVlMy7x6ymwZ/1
0/oX2tLLUGpBbQriOouucd2jEK13p5u69SYhv+YWRR2d9WHdvtu4HzYV+M3Y
o3+d3OF/ppoFzBQzrUtooZoV9DFjFohHr/PORcv92X98fw8TdE6xp7eiL84Z
Ow7eY4L94T8/2e9TiM15wVuNnkwINikVVkV7yGtODJgz4YHmXbMD6FJ3u6FM
Aya8kzl5MRwtF6QRz/7/8+Nce0qfoWve7PxmvZkJbGOK9O9oYnqT54wmE1b/
5FJaRC+bYvdcvZYJRhVdTkoP8Pofu5wXtIQJbrnvkvaj/7Z9fFzdPg5RiUlf
Q9HSdkJv1ZPGIetiAN/TB///vn65z6et41DtY0Wa0E9XBj+58oUBw7aqZ+fQ
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
VGXZiGM8T7OCOPqtQLiTHRv51ne10Qy9vJ66yBvERnZqC9afQLeEhj0NuctG
lFpEP79HR7oW1sq3spHk9Ykf+9FXDv7KCJlmI8vOyLxfKlFBusNnQxdk2QlT
cnWJA9orL+7ir2PsxMMzo+Ai+pjwzwGfOHby8/WG/KfoGYHdh26/ZifvD6pn
T6BfHRxPXy/EQZgf+cblJSvIbOyVt2NGHERZudfQAm3kZ79/31kO4nS7LCoQ
XWmqyHsjn4MkziR+fYge0x2H8X8cpMHllEwt+t12Vm27MifhqtvtxkTnmrS4
FvhxkhMP2Kd2SeF8/Crlt5edi2Ry/t5+Gr27unnp8f1c5I9PcUwK+sjgMMU4
h4uIfb/5owrt9buAbXopNzE39FnFQDMfLijPBHGT8AxjL1lprL/bqsZXUrlJ
8VL5AhP0/mBYV+HPQ6gBM3Mn0AkabhET7LxkzZ/vJg/QAcocV95m8xIH4xc3
P6OLxEY/2/vwkZu5V3+NoSVWjcaW7FlCKsXd1srI4HpeIZydf5CfzIVu89+J
fvzxyOjAPQGiNSD12h+dFp1mckhakHhZjrPfQ18402yV37mMpBV/sahAh9ps
+vI2UIi0rHx6dwR9Q8zlFneiMFl6JaJTckUFETEMWx9cKUKMxg4rGaEH+ap8
NZii5Kyd7mlftMoDGTYzYXHy4oNwWQL64OXdEfdEJMjABirPR3TKdqP4DLoE
kb1ZafUPPX0m7PbOHEliPZV2X1y2grRKDYbF7ZAi0U7n+wC97sBvzdg3UuR9
ta26N7pn6fq0VeLShKmpeTYenWX3S4rYSRPle/yU9+j2bY+f34iUJs7s/QJD
aJcygZWr0qRJktcHW1G5CiJQdWSdX440afh27+FWtF368zH359KEa0vA0DF0
RfzdtuBUabIl3XLTbbRNUKBKcZQ0OcGvFPoOPcLIjm50kyZZpzirBtAWh5Y6
GOpLk45ff4SEV+L5xSy9t41LmojteO1ggOa9XLeO9lmKmD+/neGOnub+ab87
TIqEi/qNxqEvNQqI66lJkeLzpnpv0Gbtj0qjmyTJSO/qiD70POfa6/z+kmTt
7rm6ZasqyPaNoyJXFiWIQ2GLuD56/uaJC3VREuSm7MujrugNjPMPXnBKkMrI
mOxY9Hp94eVyQeJkjuo+XoIW6a9IlewQI5tsydYe9NuazJufDcRI2jrWVx15
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
          "]]}, Annotation[#, "Charting`Private`Tag$8518#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwU2Hc8lW0YB3B7y97OoSVZWUVF91VmlCijFElIykhFZlpCsiKrUMmoNJDV
0DlKdiJ7FiIhGZGM93r/8vl+nuc85zz3uO7rZ7Wj535nJgYGhnpWBob//6qr
P2ZgiKfBpWZtmvxpKky7hO3agGa6bnCXx5UKhanOV83QhKHC6MdxKmxhleW4
i97b8oL95mEqbG2P59uWQIPemCfaQSZUgOBg6rnbNHis9ZjlpxwVGAsOO6Si
O98w/d2/hgr0Ye37dPRHQ9v+FxQq6FtMrxdIpIFJddezA8JUMFrnqvwU/XA/
54PVjFQwq7HQGUmiwb+pZX16OwX4VlSC+ZJp0HXDLv1qMwUaNXjebUE/6NhY
sr2BAvvvVupdQ7tcyeYKq6CAldd20zUpNHD9HjGblEeBI6LrbY+k0oB7sWTq
7kUKnHKc9228SwNVNSVeaSkKTD5VYv+HHvVj29wtRIFz/xxur0+jwYkTV6oj
eSgQHF9d6I92y/q38mZJGmIqU36vS6fB7cG2eZs+aShU0D3ll0GDsbh9FxTT
pUHb98zCA7Sq/sFLjbel4U3Fw/AGdHx2DZtjlDRUHlmVs/YeDd40yIuaBElD
R1TfYD36Z/btIUVbaVieumS/5gEN2IxYQZ5fGi6TovE96Fe/pOpusEkDe+Ro
oC960+EXcZ2LUsC//kBqHTrp69OtW39IwVqbde0+mTSwXXXzwew7KTB+VWlR
+5AG5w4fCFc+LQVxV7gNzuXQoKnyTjLTM0noF93BdAdd6Ox+WvCBJCg/8iqv
QJ+Y2XyKPVESqhpbtgrl4v33dqplBEvCMiVDJR+d0p3ee32PJLiVaIpPPqJB
np3gWZYBCSgxPdEi9pgGvF8t3+9rkQDWvuQ4gh6ONy8P/CgBGawrPNHojFxD
S//HEtC6v5pR5QkNNlyv3P73jATojdv9PJWH94d78mfMi0NMSEzOLfS3/SLV
TSPi0CtU4fwKHbmgm9PXLg7+2+T7uZ7S4J79ybRrJeLw/PrUl1w007lrjVPn
xUF6zfW3w89owCjFE9w2IgYz1s9jj+fToDL4iXPDI1GwX215PQJtkHoxMCFB
FKp+zgW+QAfMhx9dFyIKd0KI6wq66Pi1+ARLUdB/1LAjtYAGZaUTudkLIpCw
NPazqRDX394dSue3iQBDVczXv+iE5o6diqtFwC1Os032JQ0KnK4rxLOLwI4N
gXQP9NbAbRd9m4Xhuzl3MlcRrg94M73vhDBsydxouKuYBsnfVTSOBwlBhkf9
9pNoEe3cdXvthYBr6xm1GPTqVPqq9zuEoLe+RLoXLR2c/txkWRBC54ym/Upo
wG9ys8vUVxAmaT9HMtAMG9XtN1kKgm1kdO9HtJuT5rogVUFQWd1WLVJKA690
dTEYFoA2E5eMF+hW3iPns/YIwC4Rrtvt6InFG5Kr1wnAk768GytoPs7hieoF
fgg5N+uzt4wGO03HbAIe8oN82tW9P9D62q+O/+7hgzhXeT3+VzjegzvcOIP4
YFG9TlsLnfUnITZBgg8aPwqtu4Y+KCsneNBkFVz4fX9B9jUN7ppvWB1wlQey
mu/qmqJDXRNbEpa54cvLpJDz6CfmOyLJWW7Y5B/FVoN+a3vkzspuLjhyJHz3
DDrtfg/L20ecELHjaiT1DQ3MTf3FDzBzwncmf8Gz6G/PDsb9SWQH4aFzVnfR
7/d/2hvzmQ12ffRM+ohulPwbzrbMCl65bl2/0cV/n7+8LsUKd284U6Xf4nxP
WHpMb2CBGneHY4Zo3eaq+59lmWF+3+FMLzQDN6ekGTMTyKlbD6f8f39EpAjU
MYClsIXCB3TB3iGz5MllcvmPqfsvdIS1tnogxyJ53m74XKIcx+eag/3lrnnC
fVdniwdahSa10Pr6N9G+qOWXhO7/2JCW3P+TuBxTf01Hv4thS393ZpDE6ymv
jKEvPWSx4oruIvT18rvE3tFg/fxZlrj5RjLJvvbaTrTapr6mr5YVhDpKqTqF
Dmot+iw6XUj21Ilz30brbjgtdGh3FvF7KmT2Dl2T7JBe05JIsmJWxY6iY5Mr
LrathJMv3pxfhGk0OB5X+e78+iDCZMUiRtCRF3X3dnZ4EVWtlUMn0S55swVV
sk7EXmLhzi10q/rdjwfbD5LIfzN9b9BRKXMj2c/2kbKeX2tG0Pmb9lum9eiT
4fJRZ0E6DfTO93QIHtEhwveHcnTQxmTPj7Y+DbLrav9PF7ThK6ni+QIl4uXS
pRKL3t116BG7zXqSZtx65hX65MXM7077ZUmdwufCIfSPQhtuvUcSZIGnbo6v
ggaOV5k25ZcKE/lfldu2ob8y0oItlAWI1WdakBM6WvvSKgENXnK54PW7KPRY
X+ChJQ9O8jyhmLkU/T3enSH5GRvp9c03HECHMFRfYnrJQnhs88J539NgSO2c
I5slM9mmk1OnhbaInu5p82QirtQHfI5oY9sVmbFZRnKbIW1/JLqqJcUvsIuR
VHxLSihCbzHUKmKRZiKT72+196NNs/bd8ythItTsKCnuDzQI/Lr0j1rMTPaE
h9tvRisrNOXUrWUl/qeu3juKtnnsJt3Az05y9l4cDEcv+nsqayVxktZN/hsK
0e1bf7cI9vIQFsHzbr3oMs3dD3LD+Yn6jGceRyWuP1DsltQVIg6tbpPq6APj
X5cEi0RJVImzhh16frNvyHo1KfI6xcHnOtpkr+pb8xBZ8iPwcOkLNFfvJMXD
ZB3pf2ip0IG+3zx5p2BAnrQ27E1l+EiDOwb+vrGdKqR+zpBHHu0STqavWmiQ
97IQtA+dcUnBOsddm5Tt3jrhg25XGpVWUiHkhbf60TR0jFtSuqmwPslJVWz8
gK5h9+j5J2JC0t6v2zmO3liR1yYuakESxin5wlU438rqT9bHWJNIUbG1Omhv
vsedeWz25DLhjz+OLqnwu1GN69XPlZP1Bjp7WbHDWOUU8Ypl8slHczCI2HEE
eBOXsn/fO9D2O9YeXtrjR+wGZmwYq/G8lXvc8MPjErHkmaiSR7P3O+xvUw4j
ppuHt5qjvf8tB+T3xZBd9v2PfNG2RmfXpOcnEu3rHVLpaIaDhtvt32aQTc+b
IivRJ7S1z7g2ZBO5jtqlcXRhmnbfZfYXRJrpg4dIDQ3OF32fg6slREjxbZ8O
ulSl4lkBnUa4LIvNndBRfA7ekUPVhDHoOe0GOtdOXKBguYnMP8xVL0C/eVfY
zc/UTSYa7j/oRH+XuD5HXg6SoblUYaZafL8/EnKRcROkWzbh2kY0w2yQ3sCR
P6Rpd9Qfc3TqcT3nUA4GqPa+fuIC+nXbpYdHddngXWpIezq6ijXVhOsCLxS/
99v9EX1WQ7hk+qIgPB33LptAn9pP3vsuikCm6GlF0TrsN8X4znv0i0Mqcb6j
iz4j3tNylg/7F1d7Xmd08q3feveSpCEs1iY4Eu3BpqdvnE6Bi2XmvwrQn9c/
YI4zpoLPwG6HLrS2RdSWhXwqnObR+8xUj/vzs1td8gwVjm/W2aWA3vDk+ZiD
tAzY2m8usEDXXMroY9SUAfPrKuv80MsBH13v7ZQBo+cbEjLQj3N2O4jsloEd
HbJsVWi2YctTb/bIgCaTpO8vdKXb9GM+MxlQVBQaEW2gwXYmscrfe2VgjSXP
oR1oi6/3PSbxfvEg1hpndNEr7apjpjLAl7W87SZ65uWrcH98PtunuceF6Iq/
lydtjWRgcW5SuhvN6DT5TtRABqZlR28yf8L9Fp8iULZLBvq9uz33o/1KRtib
dGWgLbWl3w8tyjbLY7ZdBhreN1jcQ09yVUjRtWXglShNYxK9fPm76W0NGbhd
9nDuZiMNlIDi/U8e3//f7MsS9Pm6Q628cjLArWN4bgBt8YcaLLlWBkLefJ/U
/oz9juOVpTUUGTj5bsPoANrzr3fmFL8M6FTmdm9txvpTN8wfM0eFP2wLKU7o
N7Lp5iY4/i+MTA5Fo8+EeBxbnqSCXPVoyyCaxqYrfmCUCvx1ip+iv9DATMSI
nt1NhYHPebShFhq8KMq7Xl1OhTTB5Yv8rTToeB9bxvqaCgcPmO3YjjZaYXut
XUKFui8TZTFohuz3q648p0JR26bC7W00WGoLXMzJoEJEz4us2HZcP98uUXZd
pILqj5c3dLuwfprbl49tpgL7Md/LJ9Bengodq9Wo0Nuu7ReLztnNbL9XiQqR
Va9chtBKPF1PQjHvjGTTdt7sxv0etVE/YBUV0l3q57p7cHxoffzagxTw6Y2a
YOvFev46mKmklwJ7rM2HVNE/djhpKnZQYMGguekqWik8QOpnPQWs13fkKfXh
+fdhtVBjEQVWDQ4eD+yngbv9Z5FNoRQYOpxlm4W+YqOi+xXzzevmExaN6PDH
gkmhfhRwqxjdse4rDdbdqWh/dJoClfcnJerQpXyw9+B+CgQdW/wkNYD90mzd
WWXMQ2O9QjqvhmggxF2cJ3VPGiLvNjt8Q7c/e2t4JlkalI7cusb5nQb+Ebou
RbHScLpD8JMN+oBgWveqy9Lws1nAcQadf1Tu8Z9j0jBaxRemPEKDZk2OwNtU
aYi4/umJJfrvgj5Pj4g0KBhGfw5Axy83qQvySuPvXSVVg55Liho2+icFP97w
PnX5gfXjmVZOT6sUjORzf0kfpcGv5WWOGxFSEHamdr4S/c5+xTAnRArkVW9Q
JtA2Z63HnvtIgWse1wmdn7hfmN2VrjhKwXA250I7enrO+t6arVLw/Q67rOA4
9kdHjcQ5v0nCYCjz6au/8Pvo//ZWykqCsZ1k71N0WFiOWIGgJDzWUDPvQL/h
f/c6mEUSvPvtNVUmcXwFbA+9GJYAhm1li21op70StX5PJIAy7nVTcQrHo+kr
o9omCQipuL5ihV79JuB1O1UCBpPTzoSgP+l+OmezSgKeGNZZtaB/igZubhsT
h20ZG6gXp7EeC42z1WeLg/WB3qdNMzR4nvU+ZUFYHMo2zsouod/Ga12lMYoD
hYHn1oZZGrTwGJdaTojB4JOtvoHod6tcDvVUisFZtgQi9wf7jQXXVU7nxSCm
1LTRb44GI9ImUskfRWEm2nFXJvrREdnP1c9FwcbFr7ABbUrGdUqTRYEqlJ20
dh7zkZvGoU9uovDkNNOxejRz0qJNAacoVMuU/pZdwHouxVq0qC0Cf3QaYo3R
KxEvp3fIiMAa2wE1L/TcyIq2GqsIBMbzepejxfpeX6E2CoMKp+OU3T8ayEeP
dQ8eEwZbOd+4a+jqAqcQLwNhuK4XqZ6HNjmmE50qLwz9QUXei2hn2eEfH8aF
IG6KazplkQacdvFnqGeF4C2f7C06OstQZvLgASH4qbRZYxQ92flEU0pDCPRP
HD27dQnni2NqeMNvQfjTVTDdhlYzSV/84YJ56cORGeEVGmS6HH6gpSkAod/O
xOug33IPaV7kEoCClVBNJ7TasQOCw338wLPtxbkC9FoBjd0j1/nh7VPWWQsG
OqS4mTga3OaD0VrJBD+0pe/VzI9qfCD2Y9Pme2gWHZi4VrMKvNbanp9EDxX8
Lv05xQtrkp7ORjHSoeRKNtVNnAfMXlYkFKGP9Jz4N3mbGwKa2jf3ogvPri+0
4sd8xMPso8xEh57xX0tPfnMCg4K4qBV6xXox+uRBTlA2Ui4KRLcfUBOLLeaA
0Es2f2rR9oWhO6MPs0N+2unb0+hup4B+SGODvleXtkgx06FicLUhWwsr8HTc
bt2FHlCjnt2/zALafx77uKF3DgQp2oqzgJMQTTQOXfgj2pd3NTPEqrYWlaK3
CpdUCosywagbwxwHCx3Cd7YprT2/QjTKQz9tQkdWnGxc37ZIAoV4c6zRn19Q
frxe+UtWvZY4lIm+99pOTCxzmtjwZ6jVoh+WPXj/QG2SZDjJcU2hP56f9B9y
+UF+lDz5Js5Kh9X1laathd+IOq/GK4LeslHuyp3EDhJwrPSWC/rXxxMzX7Y2
kvcvyembaPOOv1IjuysIL1elfiE6ful+veHiS2Jtv4fShU6wmDXanZFD0vOb
ZhnZ6BB1LLUw6EEqGWE71CCPvhvbOVp7IZqoHe7L2ofOiclnE9l3mfg/c77o
g9Yf5q+faz9PKpjHbO6id5f7nwivciM8B71V36OPnvSpKul3IFZP5jl+omUk
Vyayeq1IGsPFrwLsOD9615Q/yu4lw5asZdro/rbWzWITekQ190bcUTTbjtfF
xYw6xG9J4FQo+kHwvlAJdU1Ct0jSy0Nff6uj+bxPmXBnUaW/oL9lxv9qfihH
LBcyZxbQgdF647m3V5O7Zor1qzlwvb66tC9zTop8v//ioTHabIe8YVe5KNk0
pxXsibYYyd1c/VOQXDB9a30bHfhM0X5ImJ/Q0/U3vUFbqTPGqPzkJtwzNeyD
aP+XLS1OrzmIpbFFPxcnrqdNxoVeh9lI2p22EjX0++mwtTYpLGR40i72IHqa
k+0f8yFmomowePIiup6PR9L2EhPxS3bblYVu+vnzbCILE6GPT0rWoyVl1/k/
7GAk3Lt8p6fRsd4PB9gWGYnl7aVaSS465OodeL/jFBO5O3olcye66+Z3lXgF
ZvJ9B1eQK9ox7qGb0k4WsulWjFU0mofj+wfnMlZyYVhUpQh9Z1uuf1QWO6Ft
v8vWg/7nbZb7R4qLcMWs7WPmpoO2nUuHvzYvOTCYW6yAljTLC22O5Sd3tFVj
LNCdp7seNHMIkaHIItcL6H+zocNpa0WJylednenopqp7P7L4JInv5gqJyv+f
5z3DLsgpQ96F754aQ3eUTn1ZeraGcPZ+qhHioYNQ+B6HnHI5sl/d+sE2dJ9u
xIzBP0WSGtodcAy9XkNlW/UxNTLY6WgZhqanH33VWb+ZKG/6ofQMbfZWy5sn
dTvxueLJ2orO03YJfn5vJylvm+1ZRMc5Ny4eLTYkHEqBRWt5sV50Tb1wu7yX
WIQwRZugR1jJrSaLAyTlS9iJM2j5dIFdOUGHyIA8HyShNQuTXo9MOhCloATx
crTDSPTSqzwXsvWH944faC/pdbYH7DyJoZW5k9AqOkRXiwwvd50n+2nKEbpo
zVDdzOWCYHJUmfv5CfSdndXXmkuukdPJIy2x6Ni9AqdDZ6PIBdbKf6/QCgts
9prat8m1Mw9Wf0eLHmN4YsmXQeJ6Qoz4+egQvMGAg/9YNknfbe++DV3s3Zpi
ufYFefJy+y0n9Ae70Ykws1JSslqiNAotbDZXu6GJTj7c/NNbgl7j9uNRlnod
afrbzDKANqik6e/SbyG9zi8UePnpkH43kOOFTD/5+TnKXAtt8eBD0UjQCJnX
Pe1zDO2odqWp5tIUYX20+84NNPu9tL8/r/4jgqIb6C/RmSzTurFfmIF6mWWk
D31l9+sRwV3coDjxlZdLANev8SdDsWwB0LYt19BEN0kePXLAVwT0K+8cskdv
q4vgXMkUBwt1/4th6IXq2BINVimwT7N5mI/2CmYQic+WhlNcm2u70eaeR1nm
sJ+84CP4m02QDrYrGTOyDlS4+u2XqBo6a1JisKSSCrFm9TqH0fN8xbQsZhlI
K3vkeA39RiKchbJBBh7JhYU9Q+86tLRvK+aL4jjnpx1oC8uz7XKGMvB+edcX
ZiE6WD/l5byD+eazm+yCMro13ka5EfNQb+uSzEF0f8VjN2HMS6O7ugwuo32t
5NJU8frc05JTT9CekcpSqfh5Fqnbsa1ovu2MA8mYj/ivny1mEKaDceB1F2vM
RwpHVZit0Jtlc/McMA9p1XJvvIj+d1fl9gciA/paP8xy0eD8d0Ua85EdX2bK
EnpLzR27p1oyEFMuoZ4lQgfu+1bd/koycFdxzqYRXXAkuiBtI75v4pegBXTl
THfza8xDFZ7R1WaidFhMUzg2IisDf2RYj82hE0b/zC8Ly8CRkMloY3E6mKaX
DastUkFdo27AEx28dJqq9ZcKHN+ztRLR1HI1a60/VCgwPdo3hC6eqNspj3mI
S6xB5YoEHVo+sC5XDlChOO9x/RtJPD9OrLWuq8b84XB99ZDk/+fjSPBpnC9H
oePneaTocN43kJO1ggqr/CQph9Gqb4xWqJiPnPTDT8+jE/e5nZjNo4Jglwu3
BoUOT7ZsmVOKwfxyc9dRW7TeVb5gi0gqvAFqwSX0qCPlikcYFVyzWmwb0Seu
5W6JC6FC+Rn9R+5UOlz7svvMJS/M1xxrdufIYD8QMLXIvI8KHzf3hFLW4P45
n/ZMnI0KDgz88sZoO7e5kc8MVFio2VXtjS42EWkP/kcBJYcc7ir07B5nsYJJ
CsRFnI3xXksHV8PbDJc6KWDfx5nycR0dUhciU+89psB8rs72KbRSVlJp+EMK
xJ7z7JZeT4fvTxSjnNIp8J6zheqNXq7+6DUVR4GNmhkPpOXwfWRtojwxH82E
bck7swHrvcvDlVE9CkQdOGl2B00+iHIt6VBgA/XOr0r0g8iXkwxbKGBbwKgu
LU+Hmrj6sz0bKFDeU1dUibb/2Cb7jYsCEerH30kp0IEzTuNaW700yHZHN39Q
osMz49jMYgNpaO3RyPuFdj4idKtYB/NVX1uohDIdGEVe/XygIQ3z32S2uaNr
+SNSd66Whk8/nmUIq+B6fNz7KArzUPDcJ/fjm3A/sDdzmD+RAs2/Z41uouM2
JL9gvy8Fowtiq4vRCmeu/85JlALr5aNfuFTpYGNZ1ZJ1WQpUWCe35aMvCTe0
X7ORgh5Bfg5GdeyfuJ5sD1iUhDjhwq8K6E037jNlTGL+ET34yhKd+vdkWs6g
JBRKZHjkqP8/vjc1neokIVJWtWWfBh1O/0spDUqRBB0V8/tpmnT4ysZgxqEm
CSm7Y3R0tLBexAo8emQgARJx6vrH0YYWLnztWyQgqfOLaQQ65a524sAGCbh9
SuJwO/ptlhPnLU4JiL153++cNn5/ofCMfq04hH0uLHqyFZ8/Uj0XbCQO7JI2
b5vRnFZ2FPMt4hDq+PfDAvqUir/w3DpxuDKt22K8DfuvHtfT7zEfBYt8nB5E
5/X3WZiVisH5Qx2qFB06vD6oKpspIwYz9wK09dFHK0AjllsMvEcpcAptMPql
1GROFLwCHPeVojn3vGKRbRCF03d/ulvpYj3OvEDf7icKjl+XHt3cgfUkyKnT
5r0IfN2YkV+Ifme4QyXliQg4eO8q60Ive+/sTowXAXvm69UbCR38BDh9yo+L
wKH1/CMf0CK57Bvil4XB/OSa9ctABy4tbs2qdcIQVy3lL78T++eY52cvsgpD
y0aRT/vRBpuUROhDQmA7yu6XjU63VP/ZlSkETqfG68x30UHjkdOHOWkhyKr9
vjoAnUXlmMj4Kwg/FPt9HqIT7fzCC1sEwWOsSXYB/WPqpiZrpCD4uZece6D3
//uoJqdOCsDr+hfV9ejtGswPfnwUgGXlx9R59Jp7XsJuaQJwdeJu1R59PI92
CXt0GgtAlOcV6T/oTV1pHipx/ND4KfCMrAHOj60q9if8IKTqU2mCfqk7Naqg
yg9Jk65e6WgdjUddX2P54P4Zs/fGhtjPdBtkBH/ihcHPRhJn0TxnGWwyrXhh
g/pOj7voJtUzF33aeODJlIb4FFpIPSUirI4bJvYru0sbYX1RvGXdvoMb1Ark
6Ibo73KLSr8ecUHRWYnTqegjM01nC9w5Yb5ZkPYBLbNd4lEZnQO2a/KITqLL
i5ld1FZxQHA86ylJYzw/LJklB8zY4d3Mcrk+ev7cHXOXK2zAZDUv7IlOmFXU
FnrECgYvf59MRuvPDG39+44Fas4PCk2gt/zRHGErYgKe1h5X8d3Yv+33bEyI
YoR9W9re7EKrXg2e3raHAeJuNwq6o/N+pHYrty2RL3+qTySiq481NB9oXiCi
NhWvaeguq60rqeFz5FDxa4Ex9IF+3/drlqZJr++zV2BCB9aKgYJ/fSNEtj2H
/xSaIe6f1tqcr+S49n3nBPRwtKjpt1+tJCsptawcXV4f50QzriUj8/F8o+gG
TYkiCfO3RPFQlJOwKdb3yiS/+G3PiUfp9dIdaO6xcA6vHffIc4lLq06iPX49
/2MXGUem/fyP30Kvv+46ecD9KlmW9f5ehlbR2610j+MC4ao6efIb+pnc7bOa
gu5ExPPYGOce7Pfrry96izkSWdFDnmrofYEqmj5KNkTpjfnUQfTj9c3FQRFm
RMvJ+HwI+rm0YczbfH2CLdN89p7/84Swy6VWHWKWrxXwCX2wLbuF8kCT2B7a
tPwHLSPv6PtwvwpxZthwiboX54/becPXTjnilU1lMUTrWTMxOuWuJoFmotfd
0Qy19b/KMQ+FzfJyJaBPv5ELD3wiSm7dYb35Gu19X7lY85MgSdNb4htEv5cb
Oc42ykcejc7EcZthf/dy1+ekx9ykKHZMRAN94cFDzukQDkLTHkyyRft5K32P
lGMjdX1dUpfRwnmrTye4s5D20Oa0XPTJln7LO5uZyaBy7erPaKnXzeEXXJnI
ry/0zHn0NxXOv0lzjGQhoGyD7D46BN3p9THsZCRsa/MfGaHFl2/KxPAwEcGa
XGVPtLTwZ8FXUUyEcube89voZo1KcXFnZiIvnqzxFl03niC8PomFaJbHFA2h
E+o2razazEbAJWwrrzkdDm+KvhlpxkFMeUNea6KvzY1KKCxzEetCX3IE7Wi9
+42syyrieNiTfgW9+PLQxulDAsSD6YTBY7RmcOjfbgFh4pdrX9WELi9RLn96
WYxcNbc2Xfj/fmP2CfevUiRmbm/Dagvsf8zqv7iVyZI7aQYWu9F2++gSr/au
I9kGul+80F2/ZF5ajcqT/DFNmyT0Y9kIuul3FfL2llJnOZouUnJxy2ENUrNt
nd0wmnDYFgoEaZOWr1L9q/Zjf6ar3KZuSEh/mNDxLWjf4sJ/z+X0ydgm7u92
aGH/fTFlaiZkvpXp5DV0SZ/XnkkFC8IcvPDzCbqO5+gRu2fWZNX6KY8vaLu0
lHTbzfZEsu7H739odl6Wqkw9JyJ39uu5tQew3pwyczBxPEXUJDvmTNAuSkqT
nfe8iQ6t0d8brSsk8pH1uh8xdq1aSkYznWK4Zp5yiVjyvQuhoTPrj/X98ggj
R4uKmX+gp9/mdN/kjyVuds9C+S3pwHGys5MsJhIflmxObfRUwrYNrH8yyOXH
aZFH0XnfJZ9/W5NDbu6/zXcdHbBe+nG70QuS9Pdm3FO02Rty99n3EpKZcU2k
Fd2rOplvvYpOnhsFJS2hhz8ELhvY1pBXE+ek1lthfXi1lcZ6qJlUJpxO24P+
qM/iWXOzmzTpOK0+h2ZmPlKZIDtE7v3L/52GHjU64LCPMkm8yhjp1egQdhWx
GqN5An7mcTPoHxa2M3sbGIFPO91RxhqvD3DoGC9zQO+fcXUTND2UMTn5Bj88
fanDfB5dGzV/OCdUGILO3WhOR9swpZhe+y0GezQ6H9SgA/gmPlVESoLUlPy5
WbTg6dzDX49Iw+hzX31ZGzqoBbkWKdygQKlnpbApOoA5lPeCERXCVESGzqPD
AuWOG5RSwWb8+MsM9OXiwPpQ7OflnuRfq0Vbyhmk+azF/t+N0foP2sPunJ3X
Vhn4sNFcbvVBnL/nNoM2BjIQP5L2xxQduUr9sinmGafs8UoftO6NK39fYd7R
cNFJvIfW/Ol0TwLzENP6Gyfq0A8xperi9c8DHVpzaJ+fyx4P8fMZ9+U51hyi
w5zmnmN3MQ95HvNt34OWq3n01Bzz0A7ZyhxfdN29ulUd+jLA2yfsdx/d6lmS
YoD5qPvu8d31aCl2g83pmI8CpBhH19jSIeaQ+CmlbTJQIqqj2IBekDM/MaAi
A9dbIv7NoyP1Dj5iwHxkHd9Ru/YwHRofio6KYT6aFfA97Yd++m/NiCaOhzpv
ft66I3ToeCWTqigmA4+Z5VUD7LDfVeExEV2mQtqk0GZ5Bzo4CR3XVvxIhYjv
zbr70dnHnpqGY37x6b5lGIj+xpNyp7ecCnurhA42oj9WJGd5lFBhMV0o4MIx
/L0b9j5Zm0sF231CtCpH7M/Md6gMYV4xNGiunkIL8xadKrqK+Wv7rSbp47ge
J1hUL2J+4dwgNOiFXjJxujTnS4WSZUF2CSc63Bd28brqQgWRp4J7Tzrj+Mvq
2/DtogJDZpPVLTTTy58strpUGEuOs3+Dnq+8fi9Vmwrvrwl6CbjgfHLWfmHa
RAVvO8FbpWjlz09v2kpRoZFHsIPTFc9n7qGLc78pEHlKwPmRG9ZLOcu1DQkU
gJxPqZ/RBs0HL3PEUGB28GbTPDrervqFVgTmH3suMDpFhw/OFuHngimgZsEs
NYi+kPJw/IQLBVq3zDZS3LE/2mLRo6BJgRtnC9gN0D8v5Q7kKePzn5/ZcRq9
5Upn2DrML7kbJx6XoVmv+vb/lKBAoPRwqI0H5pMU3ZDuZWlYzdShE+uJzysd
sOavxPyyI/FsCfohx4dN+W+lISLA6lEfergobJ1+sTTMzHwWU/HC8zOe9l4r
Rxoqh2umatANOYZWtuHScLr+dQ6LNx1YHG++8TOWhqKkDOEL5/C8enrnY1Ep
5pPxl0n30SFuY+3HnklB9s5a6Xq0+Cea1p9MKUganV235jwdOi8LX+mIlgI/
HdPNdej0lKs/LjpJgU7/rJWsLx283N+UTXFIQaEmd6cJeriXl4t1SRKUw2Xt
z6MfxrcmL2C+oaqbutSgPapv6ES1S8LKlQyfcxfw/L4pn78vSxLoG0wTq/yw
f8zSu8aqIwnbAh2kptFXXKceKKlIQkHj+XSKPx0OWb/l1ZCVhEy/jGxvdMnS
ltxuZkm4VjtbLB2Aec1+zcaUagkw9sxo9wrE83yvzjNHMwmoL5qVkLiI9Ujr
n/jqreKwaj9nHaDvrxv+e3mDOJiPSwe7oo87uH0oERGHprX634rRB5v7Z+5i
fWuPiXtkHYL166i2E8kWg29um7bHX8L9mFXgasspBmvZ9MZfoasPX1/3ckYU
nO5Zpw+gL70MyO7oE4XhtiBmjcvYv9S9jQ18KQpj+nW1n9HZt/NT+OxF4Q/1
5BG+q3QI1v2X6f1ABLTKAldpoY0MN374GSECF6xi3tmjd+lqVEl5i8C/G8Xr
nqL32hGBFCICDH9Zx/dcQ1vqlva1CgN38/2giFDcn5HpPe0zQrDHo2hTPjrM
vWBrb6sQRHHWfO1As+3Jy7tQIgT88Ntg43U69PxNrnXwFwLRPLKqCl1+9VBe
+rwgyF7vTmMNp4PErqb9a7sEIPjQsXAltDynfaL9SwHoVvx+9gBaL4k3ZCRK
ABIbfxnfQydc2n+4igjAKknmaZ0IOsSKP3yWn8gPp8eu9xxHR3G33HM4xQ81
b3mqItCGnVpSnDv4IfS46N12dNCX/BXRd3yw9GSj0bkbWF9tY/tubFwFthef
qqWir174xR70mhdKLDSk6ejInbKFLHt44dwfnd98kXhdJHLrm6M80FRF69qC
7hqjvTQZ4AbVVMNKO/S94Uy29Y7cMEbMUx9H/v//mj+5s/u4wESw5VoT2pEv
Rrr3DSfkDB7y+ovmVvXgnFrHCcfDjxsY3aSDFWVvQkQX5pPDI5s80D8Pv7q3
dSM7UFXcJRPQARO3pOxPs0Fnk8+vb+hyd4GzUfUsoP3wXwdnFB3WaV7iODDC
DLd9Q96roq1UTgVM/WaCmd2sz2zQxylux+VHGMFCOiI5GK3+81H4+SoGeDqx
6upD9EKPfLy37Arhod3yqEOXB79X6/RbJFXOd/Uko7F/FqZFpAb9IXLaa1R2
ov1Jx04GpWlylStb3BVt0uFTvMv1F/nWrcgcja7Qz5q2OD1C4Nnz8Zfog4vX
xvpqv5K0S5vbu9FmF25c9+drJ4sHyujMMTj/PjRhU4UGYitH8hTQTR67vg18
oJHi+YpEC7TX4xUl7w2FRLjW+PIF9AWlBfaMsCzifbf+dDr6ioO5QPneZNLo
ud+mEt299rpyVW8kUdnVtnMcPXuOPZ/eFkIihY8oCcfS4bNBwBluhXNk9Hu/
6Hb0SNoSZ12DKzEudWZ0RMtddGpIPnaUZN0Y/RmGtuEo04p0tSQs9p6tz9Bn
PSSbpHabEkfVmXet6JcjTcI5b3aRd0x+j5fQr7Xl9hR7biOUlqWEdXG43+Xn
H3Wu0SD+2ZdDTNE5G5vnudyUSLsf+ylvdIT1OgXf9PVky55Iq2R0tEvKEk+X
LImnCsA79AFq4QDjsCQp4hj3HUX/FDnvf/OOCGmbqnomfIsON66kX2VpEiDz
3ZnDO9A89T56wetWEcmPITIn0c/7lXl8ZLmIzosjNrfQFWwiG4+rsRO7VO3o
N+jVDdu8hQRZSfA14Y/D6Ge51bo1t5hJhufkskA8Hc7p5f5STWQi9EN1W3TQ
Hy871HSxM5EBvRwPF3SqoN2HyA5GwqJyNSsGHWQSYHqVjYnIiTv0lqHHamdF
YzG/GDPpiA6htbt4c2t8mMnJMTEzvgQ6JLnwPH1VzUIiWqevbUWf0xmokUli
I0/efXpzHG3/tG6JssBBGh49nr2Jttu0vV1LgIf8ir+uXIL28tV5HMbKT/gv
Hnf+hv6+X2z+eZwgUT9J7vLcxvHvFv79pkOEWB6QatmCnh2mxUkJSZLzunM8
x9DZvMsm+jdkyO0Nzfo30F0Q9mW/1VpSIvAs8CWa26jSX5RBnnT+iyjsQ3vs
Ojp9UV6F/BtyGeNMpMPawqa6eEUNIt24a50m2kttSmzNQ22yo4x6xB5dzqQ7
qsYMxCFz4VYYmu1Kn0s6qwG5HNVam4/+/rR6Tq7PlGReyGfuQTdOPKXNZ+0n
HxyjtrMn4fnHO2i9We0Q+b7H7awauriJFme98Rjh0DJ8fBitqy6WLx5/giis
XjNwDX3n21GaqaUX2cO9LPkcbXmszra41od4zHbs70R7kWafqxwhJLrvZQRL
MvajlbTJsJJQ8rw6lq6CDpNK5zLQiiFNBe4LB9Fev+/rfNuXSGbu7la/gm7M
0DKR688gImHr3fLQ1U6bLy2k5JAt3oz329A6XZJvOvnzycEjPR2MKbhfLBQo
l0vKiL9hqYASevax4r7+4QqSqpqw2xo94StZHdRXT15LnrkUgr6cUmJfHNNK
eln2lj5C89xiS6eu/koYfsn//oK+JPn+hQTHKFndwbJxJeX/+qJQIpc9TXZV
9DtsTKWDG19P79CaJeKU9zrpALpJcb/D5q8sEJqY1BiEbjQbEz7ixwPZl85x
5KA1ikWb5vUFoeqUOTShG7jkvbcwi8KoldKFRbRWF+vSuKAE8ADHc7k7dAh/
aEfqD0iBssLgsDl6B1/uiFC3NJgJv5MJQHuf+N3r1U4Br+VUm4do31cHKxvP
USFuxDf6E5rVMnFRq5kKBU0HPv5F3wmR9eblloEvrzetrL2L9eiFAL+LIuaT
LG4tM7Rv3vnfaboy0N82dOc82pbeIfXbUAZqOd4x3UWf3BEX+g7zRdHWFNf3
6M2hxYerMX9kuJ1r+InWMam7J435JCLVTFMoDfv9HIbGY3j9fJ18yjY0s9LF
iyv4eYclJgZHdFUE/xVNExkwUelxDkdf11DZv8FYBjSPFtc+Rw8F6F74hflI
JiZWrR2ds4PzZKqeDMz8NliSS8d61Rn/4O0OGUh7+TT+PXpbrXBejKYMhH0P
W/iJtjZ9UTujJgNnxY47CGXg+W3h5XhgkwwY+4kpOaJz+Vc3MyjIwJROSMUK
OuPv5t2yMjJg8N5iatt97GcYuRYvcsiA6qziQUe0SerdmERWGZCUY3sbjvaP
rYl8xCQDE9fLwtvRzyUoF+mY/5JM1672eYD92zHe9cWTmAeaZva9yKRDSj/L
y5ttVIj/mpi3IZsOMuMBfl/SqbBLodphP1pe3lmrMpUKk94LQkFov6LJ708T
Md+w2Pk3oW8UOVk7R1OBbcMao6AcrA/u7BMngqnge/pJf1Mu5rePAiqfbDF/
vuy5tYT2lN7zdLM1Fb4srTKSf4T1vOt75C0LKqhGn8kLQpe++sW+2ZiK62CL
v/xj3D/fQrm4N2NemnsnFPyEDhdzPN418VCBA6Yqc9AfDPcbJbNToShsrX8z
+mfd/XcHmKggKBnaL59Hhz2O3s8ezFGgVsc0rxnt6c6a8egrBXQutxhufIb9
8APu+zsKKCDDO+r35QUdlIYY+U7socBoZKTzMjo0quJhtgEFCnk2WcjnYz1L
Hq/u3EEBE55z8oFo59BAJnE1CpzjXm5dW4B5sfge54gwBWo4BTXPFmL9+Sif
cq9DGhLCC2Xuoj2Vj8SOf5YGB04b7o/oUr2K0Q010jDLceeb5Evsp6xNO1zK
pEGWQy6Wjp7xdVXnSJGG82zbJgSKcb0v3xB6ZSUNENrdsR3tmTBt1rlHGrjY
Ln5wRs9PpS4O6UlDBuv7O6Xoy8JRvnQ1aahhMTM9VkIH09OnxaJ48PnMjjnP
S+kwVe391fqtFNSuhDvue00H9tRHMRP8UmBfqRDog/50eWScg00KpiJrE+6i
L+gfVOX+JwmSkrzVP9FRhiuOlYOS4KoZsynsDZ43p4QFBYolgfXk7cV3b+mw
eLi+rNZaEpI2aYmOoPVC02VNTSRB6U/bJr5yOmQaFZo805UEyysSx+3Q2QW7
N65fJwn3796p/os+pFq0nvZLAkjT/dvqNDqUfZVbCLokAU1Jes8PoX/sveSn
eFYCXI4OVoegrYTWTpY4SUDU2PqlBvTnT/6TZ4wkoJst9/gpOh0g5kCBGbcE
+G1/pppZgf2L4/EqEikOBZmvakQq6UDtXX/ogKcYcF0pUAO0+aDdantbMXA8
9jjJDS3847rlJgMx4KemupSjP9bkJ62WFAOPRH+mkx/psLOZM1ORJgryEVu3
va7C8fu5m72HSRRCXNXufUe71vNB4w8RaDPcyCFQjf2SmEyaT6MIhDJLtDqj
r/KqTbbcEYGBwPkzfDV0qDllbvFYTQTSPItzHWvpIBJ4JqhttzD82fuM/yb6
HeveAk5FYdirlO1bjNaoCCit4RaGxZHbBjx12A+uCzk2VisEhxx9vr5EMz4Q
1zMxFILn4GHcj367bLgSvVYIOGRcnnHVo+dzcwwYhKCoyyroKPqfStrJsWJB
ELbaLMHZQIfHJXMbrsoIwikN5RANdA+Te3r2nADQBdYP26EZmzdasH8SgDMN
wi/z/78+9kvQJkAAGoxmzI98okOv8JA6dzU/yMmNFYei+7NKnYaT+SGIZZD6
Ah0Y4e6QdpIflGjNY6yNdBAwU9A5wMoP4dsKwp6hf930+/LGehU8OppLaUPP
iC1wbPrBCzVX0/OX0Zvjf6tqXOAFrk83uvd+xv7/eJNqewQPKMxcOnMefWTs
ReAXXh4wlbjAdhcdEx//UCySGyKPO6mOof39ToU/uMAFT8JsPwg14fl/Eg51
DXFCXZ657Xa0VDW3k/oeTuCd17kagf55+X2HLCMHqFA0JPLR/5S97Dv3soPZ
ro1PO9AHrZIVx6LZICpSpF2+GfvdtttrgidY4OkLbndzdP7Zm43p7CzQ0MrI
dAFNNRPX2MfHDBP/5m6no/t0TvSqMTMB3+oJxY/ogc36kNfPAKqGg+8m0OOL
AUrLu1eI+alOK9EvuN6WnybMpCySmJeVF53RRSxB2/jC/pDnna+Fb6Jtdztf
Xic/TRpX8nML0Z23frMl7fxFJtfl7uhGK5/05N0tP0IETNKbmVvosHu4TD3B
+ytR90xwVUS/s373Y615G9kff2NpP9q/RTqio7mOeJdeivNHH7cIS0ktf0fi
en033EezM7ONh9HyST6zx+tq9Fx19I8ntEzSJO9k8Ru948GioKxMIpnaa/td
vBXzbVanpYB2BBE6ax4AaPujp+fqzwYTzSRDfle0n5R7l5GiN7F8o/MwGn1c
/foNZjMXcu6b+rZi9Pa1e0sLVY6QePaNn3rRP7/lu9P37yeFSjJObG10uCl5
a0XkijH5YiHyVxltOyMw87MLyIwPd5QV2qFeRIWnRYuI3GFcG4TuO1YylL9H
jWyhzRVnorneud9/XbmRWH8f31OHjtxrfFMpfy3x4R78Oo2+P/a6jrGTSm6r
dvpItdNBzHViaqxcnBRZNXLroT0yk1V+7hcmrf6VGW7o619P6n8QFCB/0l9v
jkPzqKzniDrAS8Q+5NeU/n9dLEmo4xUn0R7NOfr1f6dmOn5bxU4O8qXPcHTQ
4c38yI/HIqzkgmZCuCp6qtBTcs0jZpJ06Ab1IPrfRv4moXwmUhJ8qeAi+kpI
nPy4FBNpf+BrnI3W93k0kNbNSOar3Hsa0MM855r3TDASiYnj3n/QbWnjjyL3
MZFtQrbs1E6sL85NDOzMzMRW2/yOAXp0NovnCh8L8bczVHNHH7ReerYzhJWk
XNapjEcHDiaXv3BmJ229D269QotO5ugUVXES4e3cx76hi16+NzrbwEPME71V
OLvocEKNmnfFjJ/cnO74twmtvrWy4EiBIKnZt7PaGi0kJbFzoEiEsD3JuR2E
PldVGNF9VYLocfA7ZaI3hX65udGGSkKcfNVq0U+qimcddNeQN+96l3+jL+7r
mVZVlCML0oZ14t2YP/QKD3/dqki0/PKSCfoSxf2C6IAqOdcifMIFvVpQIrRR
bjN5oRaoeRNdvH3bcPibbWTi5gBjIdqPuzRsnHcnURg1+dSJrtYd28v224Cc
MMy/w9iD9bdPYfy2zx6SeV/CTR7dVeuYP5e6n/Qvh2jtQ+eMUhWMrh0klMMj
LD7oi4lytpaGDsS2eF/THfTjHURDhu5MEoWK0yvQhmwmuRdM3MkXT6r7KDo3
eXW1QMdZIlB3bZtAL57/Lj++TQoGEDP5cXZttLbaN5uNCZfJjauWLfboXolT
DJ2PwklV/6v719BRcRv2Pm6JJSy6a72eoKOTT8HkRBLZmRyh24x+cdjrsGfY
PRI8+5trAf1a56m7XkMOKbM41C7bR4fbToV92tkvyFzeu4dG6O2XeApijUqJ
Jpf8WQ801/XnHy220MkZl2hIQF/cvNpp04ka8pT+h/c1Wrnc96EpNJNRqn3X
N3Q0rTSMY0s32RDwIYezH887cUdP9rJB4tSm5KOKDlI/7ZbqOkEyNOL1bNBk
t1U+E+UP6Yn+xx+MFjXoTzGKWiGSY469mehXjNX3ZxtZwca45nEt+vQzzVsl
/TwQn6nmN4V2Yc4u+r5eEBoZkg0lvtLhvF+2a226CPDaMQgD+ohQZ6Mm9gcm
pSe+uqADt0nslaqRhFCRT09vot11HvamHJeGijNbAgvRx40SC9ouUICh4e7u
LnR0SsW3cmUq6CqwijF9w/OmbJ9rTQYV/ENPD8qjFXnSAm6OYP/6rfnFPnSJ
S4XeLWEZmN6x/aIPuvXAbJ4o5gPV1Pt77qLLuB4WZGG+OD3HKfkePcg3kOJi
JAO5B84Mj6I1+oODxzDPfH/WXigwQAeV+BO5zZh31vLAZW109kB9uSTmIQfX
7H1H0U7F0WJH8frd96sooeiu5wO1jHtkoFPWZ/QJ+vM9vvc7MA+JBfUUN6OH
pDunt2EesuzQv7aA5nHbvI4X81h9rJCs8SAd0tceCHDZKQMNrE3bvNGftFhD
K/H3NvjFWN1B50aweUnqyMCnY7w3JtEj7xKmsrbIwGc19j9JQ3TYlWs/cRrz
X8vnhdof3+mwbmu13bCQDLQalH4XGsb+Qu93Zy8/utSXcQd67ZXzmp95ZaDt
3syWOHQpb4FnFrsMdJyZuLdtBNfv7ZUvAv+o0CPwzffGDzpMfyhzq++nQu+1
jLiX6AdnhRRdetB/7fP60BcubTeZ66BC39eubxqjWA9fFFcyYl79+qJlbzc6
fp94av57KgxZVK9VHsN6pK+g4Z5FhfHY558aJrB/IlqF5sdxPve4i/9Baws6
uq07SoUQdoVjlF/4+10tRyYxDwkGPZg6hbZ8viB6bj8VtF1vi3BO0sF4Y7P1
6p1UuLoj8LDebzrYMP/iXZCmgtlf7Uw3tL/Br9N7xakgVjg7FovuFnYxShSi
wqONnsH96NLJuDReLio0CjveC5rC+l+y9PDiHwpI/TQaLp7GPOU1PGpbT4HB
hyyqfeiWb25jzFUUeOpAu8A2g3n46XjqPToFoHUblxU675DWclkxBVxoyspT
aMNophnnexTITxQ6q/QH66vLszvp3hTYrd+3nDFPhzrjqM+neCjQKjodX4se
EKrj4malgNMPNsU/aIdrPLwpS9IQHKViY/oX82yrhXLohDTktwc9m0WPlJq6
Rn2SBml3aQeTf7je/Z9KyEVJQy5R/XMOXb2qWuD+NWnYIqgfmY4O+vvGmCtI
GsyLT5XMoHs8jCnpp6ThGuMr/vRFXG++clfajaRhIuEQbXoJz2Pe/JuBi1IQ
4OpuQ12mQ1LIX87CKSng2H5p3Bgd8ajerXVECtb050ikoa3zs8S6vkiBjcL8
GeMVzMMbBUN6HkvBu7e319xlqAD38QcnL1pJQdxw8xVD5grYuVbVMDpeEkYY
vht5oDWig+8cC5OEHZLz3LfRj7ZUPxUPlITRPdLxQ/9fX5Kz0DwuCbvynTKv
slSAwF2Z89KqkjAdOPuezloBoyWR2SHvJcDkNnv4KLriU8D3a0USkPFMYq8g
WwWQTNXlUzkSsOebbssxtGjDqY0dNyQwV4UOMbDj95k7nVC0kABLQTE2wlEB
Vzee0dvZIg6PFDfWuKA/2b5Qkf4gDgwG26Oi0I0KOTOfCsXhie9R0V60ypXl
L+W3xIG1J1suiLMCaMy3XF/sE4eibG2jV1wVMLDlWMuxcjEQ07UN0+KtAK4X
uT0tfqIQcbPnqj3albf2s6iTKCz2OFy6hv50+40KxUwUvgWf8G9GVxcpVJ9f
LQpP3p077bmqAkJqDydu/iACoB9tns1XAWc/1h6nrwhDfrzg3gb0gLH6lfIh
YVg/lLB7Fg2vDxmfqhUGrtA7u/T4K6Cqd2rLxwRhaPmYq9mH7vbXeWgjJwxu
pu/FxQQr4ETYOHOFphB0pxqJ7ED3dCaWJgoLwb6xGgFnNPWnR//ktCBo3vzM
VYD2szhrKvtCEFYaehfNhCrgSklb/dQ6QfCWcfx7Hm2SXZB2ikEQBj2HZu+g
2Vy/BEGXANTwj02Molf96+r6FiUA8fv/9ocKV8BByrPP8uP8wPYgsCcPbffc
v/QBnR/8plc6vqBrrgaWqCfyg308W/MakQrID77y6qAuP3weDP+0G22yPHyz
aRU/6G/mrfNCb97dec30LR9sbBX68Bb9bXVoisT8Krgjl0gbQvdevvD2Z8wq
WOUr+ZZHtAJutd6//V5uFeam1cW26EKL1wFZxrzw9pBK7h/0oohy+z47bpih
cUzLiuF8yMnrjdVwgYLCgI4pumnGXaZRjQsSFxIb09G/XsytsxvhgAZHb8ka
9BnxF35KWziApXaP0wxaIG29+RU/dvBKZZw3Fq+AiKtxvyS7WCGLuXvnWbRE
i9CFoVkW6DlVdOPu/2ZLUNiywgzCX2JaPqJfryGi12aYwETnlMwU2tTBi2ui
iRFCMg1OSkvg/JZfc96eyABFPLIFhuhLuUtelMBlMnZuYdELfV/TdX1E2D+y
tueLYSr6a/HSdOK+eWJr8CzmAzq8J6PUv2mGxOSFd/5Csw4ZXzlA+U0qRZzW
SUpWAHe8YXBo2ihZDNrhoY8W/OMXe0NvgKh/Fy/xQIvlOfvfiesgJ82mGZPR
eX1PfbI5PpGMonrTCvR81iY19wAaaaXmJIz/f907pO9vaz7huX65T0yqAvg4
Vm9fz5ZJdv06snEXeoVyZ3qnTwK5YKN19jT66Ng30/Mh18mzcoE3t9HOmXYa
ny/4k+8bxthoaN3WlXnaew8iHVNp/hO92Spm6qSfI9k/n5EiIl0Bht51DvvG
rUmYQ8AgQUfsHlvv4byXvK2yUnFDV2nIZn86r0dmVFUvxKOLtClbbW9vIwrJ
XPS36M6pMaftZerkGOMQ9w+0Q++lu8kqiiTpZLmVEKUC/nIkvvppto40fE5O
10Vr17R2/dkiQ1i2nftxAm3yg+fefLY42XbfTCMO3c3p7B7BIEy8uDYGvUaX
t3YGfc3iJ9nezB+/o/Uj1ecOePCQ3s4efgFqBaiWpTwq7uUgwnolttvRw9Vd
HncN2YjJ47hMZ/T01GyMkxsLCRFyn4hGCxRp19WvZiZFAUbaZej36/vWi+5n
IuMDqy8Pok3XCf7SG2Uk6/Ys1q6SqYCtZ2dL/qvgvuOpfN8AjtsrK3uccyjZ
JStC3JeRRGVllD2ys6KMUhEqqb72CkXSILuSVceoqFBUCCGlUCQt5Xf9/ny/
npfnuR3nvp/r849H44xkf92gsA562eFQs4I6E7lIqXbzQmu4Xw7eN85EOk+l
XE9Ft6+Lti1YZCYrswe+3UEnr3Af/B7JSjTsQH8CHUl5rsIdx04CmiWSuaXp
YFY04FAvx0WKZb/3aqGbR8KNNLN4yGDqcwkPtFX10Ko+w1rCvXzdOwU9HVhf
PTUgSIxcT1XWo6fCHZ2SYkVJdKfrzzG0irbRxjA1CqlS0THiWkeH4IP86dny
68h0luA5TbR283SpgpwsoazODbiiq9wKIip8lIiN7yOpM2jfnvXhXhWqxFrk
cnYVOvlndnPLd01i1RHN9xqtxSn4bThHl1hF2CSvojevdXBQ4zAkljLKq3Lr
8X6ndzfyMJmSPf3MR/agRa/F/8mv3EX2nByZj0Qbx0TYyr+2IbtV630uofUV
X5f7f3cku8ZSR9vRu/Kmdt2+5k4szvvYz6LdHtT3+Xn7EHN98kxQhg4RFJU8
CZtgYj4raqqHvlUi5p95M4LszP/a7IlmC0i4aOp2lJiZP95yFv1rv7VTSG4C
Mft1uaIa/fjHKzgGKWRHeYzsGzTFX2ihkj+dmDrYXmLYQIclw1B64Ks8sp1t
o7ACun+NlcMKUwkxqWdJtUSLho7NKYnfJCbeb1mOoDfPp/SOBdcSY8GGo4Xo
8qLn7We5m4jRw/NLHei0/v2Dxm7txCjMN2gO/fm4k09t11NiKA1TQrJ0iArN
UOmeGiDwXMx5G/p2+JZBbuVxQuIWXnihrySqF2Z++kAMNj2xSEGLNBfH2hcu
EIORK/QaNM+5N8EPin8R/ZRYvSF04m+2rj4VJtimu7eWUY4Ogf8S998b4IBt
MxuVFdHFm39Kf5bhB70c1hIrtNNtQznZIUHQ3TEqEYVeMzx8Uk5WFHSWG9KK
0GHfvFMTOsVh69ULXF3oPw+LWQ7VScLWvX7x8+gtDWdzDnBQQZvZ8LewPB1C
7/oeW/ORClo14uH66DqLjivXDtNAy2Nxxhu9wa/MOPM5Dbbwd3ucQ/+3c0cG
D5sUaLaWvKlF518+uOGlnBRoBB+1Hkafn72VI6ErBepUu8dMCnheSDJOcWxH
92wyVEJLXIq/+wL7Qy2W7Z41Wkjmy91I7BVVpTHVaPTcYwcTOewZ1Td3yovR
kVu+GZbi9c2nL0o/Qu9/453ujT2jou2f8wX9kUuiqRLvt2nakF9UkQ5dj3Ji
K7FnNmZKnDZAl4qyZcRhzyh/6z6SipYXVGPpxp5RuK3ioKxEh/Ftvj8eaEvB
evklYV9lOswL8E/ErJeC93Myw/+hI+QeG56QkoLyOtviJvR9JzuhExR8vlGt
ksBGfL6LjXuIiBTouoSTZvRspgqdh0sKrNO/+gmq4PuLoeOU8VcaCO2XVjFA
M/Lran+ZpcGgtNU3PzTL0pRmxgwNnCtvH2tBc08TwccTNPB7HJzmv5kOzwoO
0169xN5Ynb3fqkqHzOtH1R3u0MC4k3LyE3rC5JxuXC0N2FJ3mQqr4flZMMxY
cJsG5yRu9Qag73df7r9/jQY5WwLfC6vT4YIP1SQ1mwZVgTO8QRp06Pvj7Bgf
iX306r2HmBYdykKKmCeUaNAykORmhI48pLyyKkuDwhfyLkFoWyu5bsF1uN7n
/o5t6Cwm6SlJURoMdc7t8dOmQz3r029lTPj71X/Xu7sV59P74y0xr6jQUJul
M4FOm5qzGumjQma1tja3Dh1eBtutqvZQYW9FtLo7eqytN7O2jQr9pX8VOHRx
P6kdjqFep8KzdFYRRz18/j0W0eQj2Df/lQnGozPbP1yUCKNC6oUda2+hWyeY
VC4HUGFXyhluhm14XntMFCe7UOFJPA9zObrroyXvHSMqdIYJf/2hT4ekHzNd
sVxUaLGUfZINdIiTMfjwPJUCPhnt31vQ/o0Xm39jn/C98Vo3jXa4u21UKI4C
7p5XojQN6fCQutAoEkwBxkgp+T60tUKzt+VuCpjkiZ/iMsZ5sNdG+CwHBWZH
795WQ4uxtSqWrEpCpozjsCOaPTvy4o1lSZi+laV+DW2/K2ggYUoSTrcKvjM2
wfenqc+YU6skdE/xGBzbToeBjjyzsDBJiFCs8C9FTwTLbXT0lQRK8K7MbvT1
WodSRRdJCPpxdlbcFOfVwME1KWaSwMvFkd+ADlwq+2hAkwSbzUw/v+ygw/re
rxFKHRLwOnq52tMcv+8bWP4mr4qDyeCsUir64YY0uQ0L4lClPllyB329U8mt
cEIcTn9+nsltgX3gqHtKuUMcdFyuRzegxTTregtOi0MeOBty7cZ5TNJbxpdD
HNgu2TRqogU2aPvd+CEG4b/MNNzQVUaRnPRpMTCv2SJbhw6r5rwe1i4Gf2T4
OF33YB8FeFtUHxMDZ/aHvdWWdKj1Gn0t80EUHnnd3TmCrvpUzxv0QhQ02yof
slnh+fZzdToO+4U7Or/OCV09WlHHmC0KzZ8iclitsTcmH0j7GosC7Zm8+z4b
OjBcbGFZvIh9o0R7k4DmlSuuOYm9s5wkZFOJBvM67qceIvCMMJow2+I8cT7L
8T81EThePSRfgf7TtXO27KkwjGekfmGww/1r49+XuCwEwlvjsxTQa0RW9L4N
C4H58GF9K3Q5p8SjNQ+EoG6de0oReuTqpi1aZ4XgdKW6vIE9HYLCboRriAlB
s7X8swNo4xd/vZp/C8LikmRkKjq2bYh9fEQQnPVY6SPoowWeglNFgqD26JVr
rAPuv+lVgwvSguAT2MNagj5y1zE1eVUACngf3HqCNory9/v7VgDY7G78Fnek
Q0+/6T/LXAEYenc06y56v6zMPyZOAYj/s+7Z9304n60UCTzr5Ic7hSKR1P10
ONx7Y6Qujx9mDddQtqOvHjhxMv8gP9ifXvLPQLcZud/YyM8PKcoz/E3otTqT
2wNb+aDt2ds7k2g5051cy058oCTcxarh9P8ebW3oPMcLbnfv39qPDqMdaymX
5oUMpyrbeLR8k2ucbjUP/Luce7kPfcmdGurWxQ39KkH6oc54fiz+MzVt4QL2
fvepbLSxaBnNWYULtkXapbSi1R/k5I5lc0LZfYM3vC7YQ8XP7Yz3csCwq8YJ
LXSvRMaA11V24GdSkHdFn5sZWfWdZYMYs7WRFWjaP+2DI/ascPszK2UAzdX3
X6/MERaYOv/74Qr6g2VG83wSM4irf/Hf4IrzWkO+BeMpJtgzMMm/C5338gzL
UCAjJES9vnMIPSo3+rRNjwHuSj51zUcHMevpj7/7S2Q8G259Qid5ehzPZ/lJ
IrZRzq11o8PBVzUafT1LpFMkPnArulXH9Pt/BxaI2MIHcze0x5bmG7k9n0lA
926lJPTGDV8CXBanSNPVWs4K9IT9YMKi31vCc0J85gVaPyXByFDqBXHdf/zR
b7QSwyJnmkoXqdJ8f22dO/ZKYmH25J1GwsRnkWyGborhu3ORpZLYzlT5hKBf
7zX/sLWnmJTSRUyz0OB2Ta2NMZ0sXzoq24y+DkbsX+YTiVnUBMsU+oe+Nsff
+WiSa2M2xeWB86KP1njAsRDyaWMlXQ29qWPm+5prXmQbu1CJI9pcNOL1va37
yPl30fHH0cMiuZXOJVZk7P6YRxl6zbvZs6PnTYlq1nbDp+i9Ecb6q/6ExIfe
lF5CB96Ql1CP0CIvzdcySHri/h//ckfyiCqRkz0yZohOFHvzZ/1DBRK1OtLi
h9a2kdybKiBDHr8xKryAfvdANGytKI1I1JUfa0C3hHt6WZuLkaDzvC5v0Stn
U+0HeYRIi1/ENhYv/HxOZGwxmuUn/MZDksro3o5rxgybeIgnFf5Yox3vPY1R
rOAktT+uDkWhb2taTcTwshOW/jWNRehmTrkcESorsb8VltuJdmPXTXlZx0zK
k15FzaHNFmnfypuYyC93fUchb+y9EcU9xTJMxFyvRFsPTYb2t34eZSQFwpyi
nmgzPtuPlz8ykvkvwcun0XTDgznshImQJy8HbqMLdkQ/VpvCHirVrR9EPw/X
VWccZSYTccUZf9GyCj8NQ7VYieY+togNB+igy/T1pPIKG0nUCLK1QE+Lbe09
ZsxJBnn61cPR0uoh5vfkuYnCR22BXHT/Rb70DU/5SMzDSwut6H1aFtCvJkB6
Cpj7ptEdvzUyNwoLE9oR/yoeHzpE013+WjeKkRDr5xc00fzBEQpHHKmkTXlL
iBN6en3EYGjBOiLAlr8nHs0dH/uvxlWWeI8zqFxHszlej8rVVCINjT48veiF
v2p2W/VUCUdmz+wyOtFwfcej3ZpkX4h6D9UXe73srSQp0SE3dubcNEEPdZjF
mNkBWZH5dzYQfStfi/X3XxOy559XQBqaoT5G6YGmBSl6/XjnPXSEInvGzQ5r
8rVms+I4WkRj8bihjwMxSs3kYPfD/RO1HMjP5UYyfP982ISOypN6btPkTd4b
enTtRYc7cfotvw8kWpSuslj0CpMUM+v7cHJ6eWPSlf///Ijq0I+H0eTSx5ma
HnQV7Um5iWI8qRkqG1tGC//JZfPuPkMe9Xhxr/PHeXWc11/zUBp52yKtY4Fm
b7l+tDUjjyxWvT0Qifb4XucWYFZCOEry0orQk/O6LU823iLUTIfWx+gIdcWy
zffriHqy0Oy3/9/PfrNIe2ML2RHdJ0YLwPlTRWvf2oVO4hx4frsZetR0J+UN
6SPhLhbh4eglnwcOXeJDJNmSo6gA3eSXeYHeP0kKDDu6O9GWNYe96wXnSY1G
/M+v6Ao3SutA1jLpkiWykoE430UvjXOnM8CI6Ir1dnQ0x0xCuwc7LHDeiwtB
u/OopDoZ8AHbSuTNXHRxao9Dc74gUObVX9PRRjonB8Kxf9TGv7DMo2vyuyc3
z4uDaf8tNbEgOmQv7gg7/VkSnNv9XY3QL/vTGh8YUCGsQS4lCC2qe+XHL2Ea
JJVP3slC876Z+i6RR4OCvOKpNvSPX5yl9jifV59zWfsZbaStFvJJVAo64yQM
hA/SYYeBwvkadSkYCX0VQNClJ//a52FfLHhmZPujC5rGC4P+///U7Kzb09FF
Fv6r7NgzlB28C81ooVrXhnXYO2o63dSP6Hc5JbLNeN1U+bS5QDAd7hilTx3C
3nGmbj+yDW21K7GvGHsnjI+p1Ae9ym98Mxp7J4mxtfci2iWArkfD3in4Fvu3
Ef1twwf7y8ZSUP1+q9J7dOpkyjpeXN/I45oEnRDsyQjbzCY9XO/9kCovtMbu
UyksOrjeyo1vU9FsXqFnTbRwfWllWhPo8mefem6r4vP2582cDcX3Y9+FPfqy
UpC/y0GkHv3xovAJG+ynKgMh4zF0bKa8vif20/D68wUaYXj+W1TlhYlj330+
aTmCzv/xPs6aRwqGYv3rNx3C973XtgShJRrcrdvAb4cWCmPYv2aBBllzYwFH
0c0pSo9W5mhg62Yv3Y2eN3pU8OwDDXqMjFP8IvA82+5fqDCM/cJJ9SiJxHmh
hv1Sahv+PY1e33+CfmHRYy7WTIOY2HSRRbTy0znV/Hs00J7j7IHDeJ6OOiad
qcE+6l3WGkU38CmZcpTS4HJ2L7d4FO4fntKD6YnYY70pvoCGV3njV07SwJVz
x0NftEdzw/yNYzSQiG0+0oCuP8fEdhX7Ks31xoRtNPaz2oV/hgdocEr21N3z
Mfh9VAokNGPsvVptb5ZjeN15j1v+T+wf+VIbVbS+KLWQ6xsV9Ar4DZ3RZ16M
2gbNUYE3cYZahz7rV36BbYIK9fb5r7zisJ9szELSn1CB6fc/c/pxnL8cVyrY
cqkQFByo8wVd4a6ZnplGhYGJV/KSJ+gQ86EpSOQcFcq7q1gOodsnD3POx1Fh
zyXPlvUn8fMT67i95EWFfOhUi4/H/vqdI2ipTAWWenXpSrSJmUHUsgwVghWL
eIfQlhMPFlMpVDASiPqsloC9n1P9OYWHCh8nFa++QzPkLhU2zlNAMzlVzDAR
zw/fRua8CgoU/vnFdhBd42RRQblKAfZQn+85aL3EiO6zBRQYciT9X9HGBx26
FVIocFJpIaU4iQ6e75pz/Hwp8KnQJaYHremudszYlQJ7BZ/4/USzt/9g4bSj
gMLKle1WyXj/h1NttkYUSAvl0zyK/pcrPPh6KwX+TMWuL0e/u0cszTZTwHvf
R/6X6KTLCeJXZCnw7One1VW0+Pd9UtOSFPgfShvexQ==
          "]]}, Annotation[#, "Charting`Private`Tag$8518#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5foztNZgTRKDHwGVry7vp6KPDjnu03hCQKjds6VxtJF+6NZNydi/762gCimV
UoYrlVmUighoyd95/Bra6taA2uYZAp4FmG54jj6lVT0yuoYEc/2gNiq6XjWK
0r2LhL624QvCyrj+vNowtuEsCYU/gs5rog+kZAX1XichtnnXOQe0N9dUUXsI
CT6NleaR6OUdYSrRMRi/9VdOF6NFXxV0N6Zivv/OZTqGvrNVJkW+gISNNR9O
8qtg/fC0ZmNIJQkLlceMNNAR5w0lMzAeOssnDOzQpxeXm5//ICGv7MGxx2jh
zb4voA3nC3Wvfj76MSHqlIWvexQ36IygF6Lfu4g0knC60OXI+v2llLj70SbP
q0jYn7/hsCra1CYl+SquN0J5nyk26MxXSv+aPpFAzzml8QBdxH6Y3JiI8zOL
PPgF7UXwJEY+ISH7c+SBAbTvUKfWc8yvTzNUVNYcKKXYbR0WuOVIwqmUW/JW
aNfXWqwa2iQofhCVu4/+ONjm37yPBL53X2Uy0R4KGy8mi5PQlLi0m0MV89E3
8emTs9gfJsTulEfn3ADJ4mHsR+Nh+1l0kWbKu6c/CHCO7d8ShD5kp/l+XQUB
htF+m9PRLk4RW6zzCJB7uVW8Ez3SO1fzJY2Adc9LRVkO4vVl/lWnnLT691Eb
YVm01+E0UXo8AXVPWAVPo3s21nKwxxCQGv6Wzx/doMK07BRFQNhDHd6P6JzN
b3bLRBPgEDbK04qeeHzHRS6OgGOhIWsY1DA+11Ifrj5/Y0+IFJcUOpzcphP7
gQDuezXsp9AWFjMdeZkEjAU6sPqijR2OFvpjPFb7r2VORks2t9zNxfXn/Z1U
hib05w2eixsxn4b4nlj+hx74eM7zwi8CdD3D50+ol1L+mX+otGLF9cxDfvYW
+uEGRRlvfhLY3ZuJ1+iWzGHKoW0kjFx3m/mONv2jH2eD17/cRWBqFs0csfJf
nAYJb52yJ7Zo4PqqmHwtQ5+Eu9fM/hxF7/pmu/0C1is29nOjN9CBkW/2+Vpi
fXXlxUgc+u6uxPCftiRsv6w6VIWmqCSYONqTwGzb9ZOG5ll+TfJivhqw9u4T
Bzx/bT7jMmcSqFbiPTroRZrxzXvoBMvCThf08tvUnZcxfvzOnm+PQh86+ULW
4yoJVuYMrd/QyqPa/7XZkEA5/ap5Ej09b/r43TkSJEw1G0UoOL/ShcuF8XxX
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
SpH/ARnOgAo=
          "]]}, Annotation[#, "Charting`Private`Tag$8518#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV2Xc81d8fB3B73nttoYxKZkqolHEOIatCyQhFNiEp0ZIkGSUku75Sadgj
hNx7JaGIjOy99878vX9/eTwf3Pv5fM7nfd7v16nddp4mDnQ0NDRWDDQ0//+p
oPCRhiaGjL1PUgQv/BlFC44hmpJghfEfD0/RjqH8RIeg0+DIzAVy+IExdIRR
jCUZfL49v3Pu8Rg61hbDcfw5GTO9qX1grjWO8N27Ij6xZNz0Xs/x6/cJdLrG
WHU0joxpUh+1vybMII7tA3c54sn43fHVydETM6hBkVBxBNw9LM4dfmsGmSRX
nXgIZulEeGZiBpl6qRjsSSDjV13G1UnOs8iKf5+lVSIZq/uXyYuazSE3u1Xf
hmQy7shddqy1WECzmfuZ18HZDp4vH9xdQD7rl2L3pZDx3tP50n6vF9DdmB/5
/mCOzee5wtMLKLIqYU78JRlvRj5+bB68iPJl1Nz8XpHxjn814rTUJbQ1f99m
z2sy1rKLldz2XEWBqHDKEKzC2xsrnbyKmMPHb/uCH0m9sUusWUWc+84m1oFP
PR4TMpX4h/aaibfdSCPjaxcUH+zu+4d0v1QZ174h4z2u20r77ddR1AN2bZ90
Mt5367qA3n9bqJdfnS4JLGa5xrHZtIXkPnh9pYLPhsrNzTNto+qG5mM878m4
WVJIJe3KNtoSfnUgF+yYNrJAEKXBrkVKArMfYH3Xf5yNWqLBJ6asJ9wyyHi+
/A1LZTEdXjyf/exyLhkfYbZLcHzGhG12n3sUChbtzPhJyWbC1RMrt3PA3JY3
uWQamHBSAHLeBkde2GfLz8GMtT78Uk/MI+ObmtGThhHM+Pnm5ERjPhknfuGo
MAplwTTVkX3/wE9z9l4Ye8+CXaOUWsUKYH09NzZu/WDB6pK3KR5gmuCTuY9Z
WPGwEXs8WyEZx7SVGO8KZsVH0qR1ND/D/VjEmEffYcOvPH6quIAP0ngy0SWx
YbZjVw9FgoUunncwLGHD3T+LdnWDnykap7oss+HglZMLfkVk7Osd9uS6Ozue
JU+MvgLvcn03cPUxO7YMf9r9HexuXBB86C07PrC79QdfMRnLrISWTXSz41Z9
x1c54GfO3tfbDAlYk48ttg38UDmZctuJgD/1ZIRtg7dEwjYq7hNwgM/SjVMl
ZLx8wDqGu4CApVKCTo2Bb5yaNpHkJ+IoZ6kTnF/IOODcHFlQjog3FOqUj4K5
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
vJc=
          "]]}, Annotation[#, "Charting`Private`Tag$8518#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {9000.000020408163, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {9000.000020408163, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Resource1\"", "\"Resource2\"", "\"Consumer\"", "\"Predator\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.717183361237316*^9, 3.7171834064548492`*^9}, {
   3.717183539535798*^9, 3.717183599248475*^9}, {3.717183705263093*^9, 
   3.7171838439123435`*^9}, {3.717183897945176*^9, 3.7171840864248686`*^9}, {
   3.7171841424628754`*^9, 3.717184176577524*^9}, 3.7171842390275297`*^9, 
   3.717184284698913*^9, 3.717184348373473*^9, 3.7171844240556955`*^9, 
   3.7171845366156745`*^9, 3.7171845968634405`*^9, {3.717184649580413*^9, 
   3.7171849082938943`*^9}, 3.71718494065388*^9, {3.7171849904322295`*^9, 
   3.7171850278990507`*^9}, 3.717185575060662*^9, 3.7171856198967404`*^9, {
   3.7171860878411894`*^9, 3.7171861657491264`*^9}, {3.717186226564516*^9, 
   3.717186232803091*^9}, {3.7171889502054415`*^9, 3.7171889645036106`*^9}, 
   3.717189121497534*^9, {3.7171891656926317`*^9, 3.717189172356165*^9}, 
   3.717190097130226*^9, {3.7171901430065317`*^9, 3.7171901747108364`*^9}, 
   3.7171902753002605`*^9, {3.717190314987173*^9, 3.7171903340971017`*^9}, {
   3.717190418811219*^9, 3.7171904258018274`*^9}, {3.7171904982689695`*^9, 
   3.7171905068896675`*^9}, {3.7171905837741385`*^9, 
   3.7171906152596865`*^9}, {3.717190704437745*^9, 3.717190712450549*^9}, {
   3.7171908149533377`*^9, 3.71719084935489*^9}, {3.717190905640012*^9, 
   3.7171909475169306`*^9}, {3.7171920787703605`*^9, 
   3.7171920893980894`*^9}, {3.717192120096923*^9, 3.7171921676451516`*^9}, 
   3.71719221321912*^9, 3.7171922494773264`*^9, {3.717192302712843*^9, 
   3.7171923108447256`*^9}, {3.717192345155565*^9, 3.7171925405245495`*^9}, {
   3.7171926417389975`*^9, 3.7171926657026424`*^9}, {3.7181264175399594`*^9, 
   3.718126465296775*^9}, {3.7197526106282625`*^9, 3.7197526236609125`*^9}, 
   3.719845248098158*^9, {3.719944516593131*^9, 3.7199445327480607`*^9}, {
   3.7225782115942116`*^9, 3.722578285444277*^9}, {3.7225785631297007`*^9, 
   3.7225785913266845`*^9}, {3.722578920895496*^9, 
   3.722578933212308*^9}},ExpressionUUID->"2395fd5b-a839-4a8d-acae-\
b9e1a2a810c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["This second section is to plot model results with ", "Subsection"],
 StyleBox["fixed e2 and p", "Subsection",
  FontWeight->"Bold"],
 StyleBox[" values but ", "Subsection"],
 StyleBox["\[Alpha] varying from 0 to 1", "Subsection",
  FontWeight->"Bold"]
}], "Subsubsection",
 CellChangeTimes->{{3.718532617046636*^9, 3.7185326244958086`*^9}, {
  3.7225792987038383`*^9, 3.7225793179025564`*^9}, {3.722579356507042*^9, 
  3.7225793617340794`*^9}, {3.722579423687665*^9, 3.7225794632613792`*^9}, {
  3.722579493701161*^9, 3.7225795607114515`*^9}, {3.7225796314104743`*^9, 
  3.722579692705368*^9}, {3.722579813783048*^9, 
  3.722579815425516*^9}},ExpressionUUID->"fd2de86f-83e4-4de5-9b66-\
ae7c6dc0bbea"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "1.71641"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K1", "=", "8.13829"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "1.71641"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K2", "=", "8.13829"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e1", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", "0.38580"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", "=", "0.35959"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e2", "=", "0.45"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "0.05"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "50000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqs", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Res1", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"r1", "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Res1", "[", "t", "]"}], "K1"]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"H", "*", "A", "*", "p", "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"H", "*", "A", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"S1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "h1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"S1", "*", "h1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Res2", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"r2", "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Res2", "[", "t", "]"}], "K2"]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"H", "*", "A", "*", "p", "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"H", "*", "A", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"S1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "h1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"S1", "*", "h1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"B", "*", "A", "*", "p", "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"B", "*", "A", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res2", "[", "t", "]"}]}]}], 
           RowBox[{"1", "+", 
            RowBox[{"H", "*", "A", "*", "p", "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"H", "*", "A", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"M", "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"S2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "h1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"S1", "*", "h1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"e1", "*", "S1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"e1", "*", "S1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"e2", "*", "S2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}], 
           RowBox[{"1", "+", 
            RowBox[{"S1", "*", "h1", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "*", 
             RowBox[{"Res1", "[", "t", "]"}]}], "+", 
            RowBox[{"S1", "*", "h1", "*", "p", "*", 
             RowBox[{"Res2", "[", "t", "]"}]}], "+", 
            RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
             RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}], "-", 
        RowBox[{"d", "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Res1", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Res2", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aa", " ", "=", " ", 
   RowBox[{
    RowBox[{"Reap", "[", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{"NDSolve", "[", 
          RowBox[{"eqs", ",", " ", 
           RowBox[{"{", 
            RowBox[{"Res1", ",", " ", "Res2", ",", "Con", ",", " ", "Pred"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Sow", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Res1", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Res2", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",",
               " ", 
              RowBox[{"{", 
               RowBox[{
               "t", ",", " ", "10000", ",", " ", "50000", ",", " ", "0.01"}], 
               "}"}]}], "]"}], "//", "Mean"}]}], "}"}], "\[IndentingNewLine]",
          "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", "1", ",", " ", "0.01"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Total Resources\>\"", ",", " ", "\"\<Consumer\>\"", ",", " ", 
      "\"\<Predator\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"aa", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", " ", "21"}], "}"}]}], "]"}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7171850823883705`*^9, 3.7171851443603168`*^9}, {
   3.7171855037507534`*^9, 3.717185504005747*^9}, {3.7171855624006505`*^9, 
   3.7171855628363514`*^9}, {3.7171856423772593`*^9, 
   3.7171856426125917`*^9}, {3.7171862161699696`*^9, 
   3.7171862649928026`*^9}, {3.7171889759919477`*^9, 
   3.7171889767310867`*^9}, {3.717190187939597*^9, 3.717190188306387*^9}, 
   3.71719033976348*^9, {3.7171904340989237`*^9, 3.71719043468218*^9}, {
   3.7171905165569887`*^9, 3.7171905175954957`*^9}, 3.7171906297054615`*^9, {
   3.7171907180597086`*^9, 3.717190718691328*^9}, {3.717190792372143*^9, 
   3.717190792794281*^9}, {3.717190839258257*^9, 3.7171908401466026`*^9}, {
   3.7171909578032155`*^9, 3.7171909672260895`*^9}, 3.71719102746842*^9, {
   3.7171910730519257`*^9, 3.717191075418869*^9}, {3.717191139995598*^9, 
   3.717191152439045*^9}, {3.717191200555944*^9, 3.717191202571689*^9}, {
   3.7171912829035845`*^9, 3.717191283409565*^9}, {3.7171913381613646`*^9, 
   3.717191338752761*^9}, {3.717191395188902*^9, 3.717191395722227*^9}, {
   3.7171915049744816`*^9, 3.7171915096151257`*^9}, {3.7171915616029053`*^9, 
   3.7171915620194006`*^9}, {3.717191620251911*^9, 3.7171916250005093`*^9}, {
   3.7171918007733316`*^9, 3.7171918016071863`*^9}, {3.7171918478678594`*^9, 
   3.71719185097678*^9}, 3.717191937681549*^9, {3.7171925564085565`*^9, 
   3.717192578367292*^9}, {3.717192710139017*^9, 3.717192721234208*^9}, {
   3.7171927886171722`*^9, 3.717192790002717*^9}, {3.71719303013867*^9, 
   3.7171930322183332`*^9}, {3.717193080816657*^9, 3.7171931285940657`*^9}, {
   3.717193182881154*^9, 3.7171931838764367`*^9}, {3.717193229922507*^9, 
   3.7171932303621325`*^9}, {3.717193296579914*^9, 3.717193297345705*^9}, {
   3.717193354147759*^9, 3.7171933621137323`*^9}, {3.717193408087184*^9, 
   3.717193410991564*^9}, {3.7171935240557175`*^9, 3.7171935248735676`*^9}, {
   3.71719359179428*^9, 3.717193592706175*^9}, {3.7171936471540747`*^9, 
   3.7171936491299543`*^9}, {3.7171936972079525`*^9, 
   3.7171937279844165`*^9}, {3.717193832705904*^9, 3.717193854177884*^9}, {
   3.7171939457143583`*^9, 3.7171939496578064`*^9}, {3.7171940097762556`*^9, 
   3.717194022377844*^9}, {3.717194076816846*^9, 3.7171940777213917`*^9}, {
   3.717194300160469*^9, 3.7171943027928805`*^9}, {3.71719436214762*^9, 
   3.717194368416517*^9}, {3.7171944524916353`*^9, 3.7171944535461197`*^9}, 
   3.71719454183185*^9, {3.717194598396923*^9, 3.717194606706704*^9}, {
   3.717194732739648*^9, 3.7171947375874376`*^9}, {3.717194788956518*^9, 
   3.7171947924186797`*^9}, {3.7171949283438926`*^9, 3.717194929371859*^9}, {
   3.71719499487516*^9, 3.717195001593797*^9}, {3.7171950523914757`*^9, 
   3.717195056022874*^9}, {3.717195144232401*^9, 3.717195145002062*^9}, {
   3.717195208849593*^9, 3.7171952109868746`*^9}, {3.7171952666677494`*^9, 
   3.7171952678237085`*^9}, {3.7171953289332848`*^9, 3.717195329855966*^9}, {
   3.717195392144329*^9, 3.7171953930831327`*^9}, {3.7171954447150354`*^9, 
   3.7171954456961474`*^9}, {3.717195493290973*^9, 3.7171954939878445`*^9}, {
   3.7171955477890234`*^9, 3.7171955486663246`*^9}, {3.7171956185487013`*^9, 
   3.7171956190176*^9}, {3.7171956611497855`*^9, 3.717195661688156*^9}, {
   3.717195807142214*^9, 3.7171958114175577`*^9}, {3.717195881389179*^9, 
   3.717195883466364*^9}, 3.717195996467184*^9, {3.717196051303999*^9, 
   3.7171960568047433`*^9}, {3.7171961299800124`*^9, 3.717196138360855*^9}, {
   3.7171962266816254`*^9, 3.717196228466385*^9}, {3.718106603472761*^9, 
   3.71810660931647*^9}, {3.7181067563062043`*^9, 3.7181067572486057`*^9}, {
   3.7181068064992285`*^9, 3.7181068114186273`*^9}, {3.7181068694929533`*^9, 
   3.718106872164318*^9}, {3.7181069224471893`*^9, 3.718106923044841*^9}, 
   3.718106976584052*^9, {3.7181070540568314`*^9, 3.7181070546920633`*^9}, {
   3.7181071095770197`*^9, 3.7181071125603576`*^9}, {3.718107201633151*^9, 
   3.7181072020647774`*^9}, {3.7181072612826066`*^9, 3.718107262584319*^9}, {
   3.7181073162652173`*^9, 3.718107321520424*^9}, 3.718107386875635*^9, {
   3.71810744207658*^9, 3.718107448803049*^9}, {3.718107511788564*^9, 
   3.7181075127719493`*^9}, {3.718107562781556*^9, 3.718107568174104*^9}, {
   3.7181076200723214`*^9, 3.718107620678274*^9}, {3.718107685984831*^9, 
   3.718107686304657*^9}, 3.7181077341583557`*^9, {3.718107901190503*^9, 
   3.7181079021664915`*^9}, {3.7181079755170746`*^9, 3.718107976135725*^9}, {
   3.718108059971588*^9, 3.7181080640828967`*^9}, {3.71810814795718*^9, 
   3.71810814902738*^9}, 3.718108235122902*^9, {3.718108283848231*^9, 
   3.7181082862327185`*^9}, 3.718108338788663*^9, {3.7181084037626004`*^9, 
   3.718108405857791*^9}, {3.7181084554357615`*^9, 3.7181084622056923`*^9}, {
   3.7181085162933717`*^9, 3.7181085170043*^9}, {3.7181085771128993`*^9, 
   3.718108577663183*^9}, {3.7181086367752104`*^9, 3.718108640414325*^9}, {
   3.7181087200013123`*^9, 3.718108720680499*^9}, {3.7181088831162767`*^9, 
   3.718108883954152*^9}, {3.7181089374526176`*^9, 3.718108938338826*^9}, {
   3.718109000213338*^9, 3.718109000997059*^9}, {3.718109052533946*^9, 
   3.718109053461182*^9}, {3.718109100959752*^9, 3.7181091014602423`*^9}, 
   3.7181091513764067`*^9, {3.7181093259982834`*^9, 3.718109328900608*^9}, {
   3.718109402968789*^9, 3.7181094088070927`*^9}, {3.71810946264821*^9, 
   3.7181094641437817`*^9}, {3.718110107182345*^9, 3.718110107981164*^9}, {
   3.7181101788057113`*^9, 3.718110180572734*^9}, {3.7181104327247066`*^9, 
   3.718110434243223*^9}, {3.7181105075362663`*^9, 3.7181105123471503`*^9}, {
   3.7181106962680197`*^9, 3.718110697599037*^9}, {3.7181107760378027`*^9, 
   3.7181107766530266`*^9}, {3.7181108508224945`*^9, 
   3.7181108541202607`*^9}, {3.7181109106539803`*^9, 3.718110913045005*^9}, {
   3.7181109632863874`*^9, 3.7181109642453403`*^9}, {3.718111025570491*^9, 
   3.7181110265577774`*^9}, {3.7181110929036407`*^9, 
   3.7181110947351465`*^9}, {3.7181111521310654`*^9, 3.718111153633035*^9}, {
   3.718111212051442*^9, 3.718111221967453*^9}, {3.718111276109049*^9, 
   3.7181112766607895`*^9}, {3.718111327326782*^9, 3.718111330254032*^9}, {
   3.7181113810420895`*^9, 3.7181113858721657`*^9}, 3.718111998599498*^9, {
   3.7181120580176907`*^9, 3.718112058680752*^9}, {3.718112134938572*^9, 
   3.7181121354029055`*^9}, {3.718112199315426*^9, 3.7181122005111694`*^9}, {
   3.7181122516670656`*^9, 3.718112265822691*^9}, {3.718112324786824*^9, 
   3.718112325336625*^9}, {3.718112375488648*^9, 3.7181123760794415`*^9}, {
   3.7181124423440304`*^9, 3.7181124432644043`*^9}, {3.7181124930072236`*^9, 
   3.7181124940335374`*^9}, {3.7181125443293*^9, 3.7181125729987674`*^9}, {
   3.7181126218805094`*^9, 3.718112650825391*^9}, {3.718112726983088*^9, 
   3.718112729207138*^9}, {3.718112924279523*^9, 3.718112925722845*^9}, {
   3.7181130673314915`*^9, 3.718113070026251*^9}, {3.7181131207539377`*^9, 
   3.7181131265853305`*^9}, {3.718113201148241*^9, 3.718113201443714*^9}, 
   3.718113335926778*^9, {3.7181133933518124`*^9, 3.718113422383663*^9}, {
   3.718113493578085*^9, 3.718113494665473*^9}, {3.71811355378726*^9, 
   3.7181135606582417`*^9}, {3.718113639159672*^9, 3.718113644596609*^9}, {
   3.718113698502163*^9, 3.718113699300493*^9}, {3.7181137827837887`*^9, 
   3.718113783878504*^9}, {3.718113841912426*^9, 3.718113842495922*^9}, {
   3.718113901776885*^9, 3.718113902689954*^9}, {3.7181139614348025`*^9, 
   3.718113965185796*^9}, {3.718114023477474*^9, 3.7181140254676666`*^9}, 
   3.7181255188862715`*^9, 3.718125605609725*^9, {3.71812567781317*^9, 
   3.718125680003186*^9}, {3.7181257372149534`*^9, 3.7181257586721773`*^9}, {
   3.7181258098445263`*^9, 3.718125844318099*^9}, {3.718125887676549*^9, 
   3.7181258881296787`*^9}, {3.7181259423906116`*^9, 3.718125947126021*^9}, {
   3.718125996465506*^9, 3.718125997474309*^9}, {3.718126052466696*^9, 
   3.718126053000883*^9}, {3.718126108315011*^9, 3.7181261085645123`*^9}, {
   3.71812617594042*^9, 3.718126178027347*^9}, {3.718126238629777*^9, 
   3.7181262392655272`*^9}, {3.718126288464071*^9, 3.718126289422575*^9}, {
   3.718126338761264*^9, 3.718126339968322*^9}, {3.7181264791790943`*^9, 
   3.718126479657609*^9}, {3.7181265373547983`*^9, 3.718126546842218*^9}, {
   3.7181265970990615`*^9, 3.7181266073140345`*^9}, {3.718126721342776*^9, 
   3.7181267222621794`*^9}, {3.7181267748304567`*^9, 3.718126775798683*^9}, {
   3.718126882916027*^9, 3.718126883779776*^9}, {3.7181269590981245`*^9, 
   3.718126959114726*^9}, {3.718127008348154*^9, 3.7181270098359036`*^9}, {
   3.7181271219797707`*^9, 3.7181271226272254`*^9}, {3.7181271776914654`*^9, 
   3.718127202770722*^9}, {3.718127294165536*^9, 3.718127299899836*^9}, {
   3.718127359676894*^9, 3.7181273632759686`*^9}, {3.7181274138177967`*^9, 
   3.718127417332405*^9}, {3.7181274825815573`*^9, 3.71812748350147*^9}, {
   3.71812753511213*^9, 3.7181275413698587`*^9}, {3.718127594998289*^9, 
   3.7181275955729785`*^9}, {3.7181276590806246`*^9, 
   3.7181276632882137`*^9}, {3.718127709177456*^9, 3.7181277200008087`*^9}, {
   3.718127782132445*^9, 3.718127782639307*^9}, {3.718127829320531*^9, 
   3.7181278298434877`*^9}, {3.718127905538423*^9, 3.7181279059095073`*^9}, {
   3.7183074150998783`*^9, 3.7183074158146863`*^9}, {3.7183075804502487`*^9, 
   3.7183075812916927`*^9}, {3.7183078009706855`*^9, 
   3.7183078013684273`*^9}, {3.7183079466990333`*^9, 
   3.7183079475396605`*^9}, {3.718307996460336*^9, 3.718307998419724*^9}, {
   3.7183080498436456`*^9, 3.718308050747766*^9}, {3.718308094154909*^9, 
   3.71830809942799*^9}, {3.718308154788558*^9, 3.718308155137972*^9}, {
   3.7183114839766426`*^9, 3.7183115107952385`*^9}, {3.7183116842540503`*^9, 
   3.7183116873704915`*^9}, {3.718465717915806*^9, 3.7184657527777147`*^9}, {
   3.71846581085695*^9, 3.7184658225189915`*^9}, {3.718465868201785*^9, 
   3.7184658684761925`*^9}, {3.7184659165642524`*^9, 
   3.7184659188283978`*^9}, {3.718465979116088*^9, 3.7184659954387255`*^9}, {
   3.7184660635622993`*^9, 3.7184660640725436`*^9}, {3.7184661099689393`*^9, 
   3.7184661191050625`*^9}, {3.7184661760735893`*^9, 
   3.7184662044208536`*^9}, {3.7184662825638885`*^9, 
   3.7184662837152343`*^9}, {3.718466341767213*^9, 3.718466343276473*^9}, {
   3.7184666767123933`*^9, 3.718466685230833*^9}, {3.7184667910175557`*^9, 
   3.718466794134696*^9}, {3.718467101486752*^9, 3.7184671166455326`*^9}, {
   3.7184671582944946`*^9, 3.7184671856736937`*^9}, {3.718467242946745*^9, 
   3.7184672441454716`*^9}, {3.718467298404379*^9, 3.718467301658263*^9}, {
   3.7184673409954023`*^9, 3.7184673799892817`*^9}, {3.7184674274396462`*^9, 
   3.718467428269721*^9}, {3.7184674868376884`*^9, 3.7184674923352118`*^9}, 
   3.7184675459554205`*^9, {3.718467592118187*^9, 3.718467598972686*^9}, {
   3.7184676519801865`*^9, 3.7184676540596266`*^9}, {3.7184677081798773`*^9, 
   3.718467716040614*^9}, {3.718467803741958*^9, 3.7184678059019613`*^9}, {
   3.7184678646313143`*^9, 3.718467880094392*^9}, {3.7184679382333927`*^9, 
   3.718467940167429*^9}, {3.7184679989065275`*^9, 3.718468004815586*^9}, {
   3.7184680661005087`*^9, 3.7184680735998907`*^9}, {3.7184681138334613`*^9, 
   3.71846816605155*^9}, 3.718468214283815*^9, {3.7184682985009975`*^9, 
   3.7184683207326345`*^9}, {3.718468369455149*^9, 3.7184683734297085`*^9}, {
   3.718468418790451*^9, 3.71846842371082*^9}, {3.71846849533243*^9, 
   3.718468498888534*^9}, {3.718468546003031*^9, 3.718468546464924*^9}, 
   3.718468595493745*^9, {3.718468648043507*^9, 3.7184686500268545`*^9}, {
   3.718468711310807*^9, 3.718468711763928*^9}, {3.718468759446125*^9, 
   3.7184687601643667`*^9}, {3.718468817596815*^9, 3.718468848093459*^9}, {
   3.718468912167852*^9, 3.7184689253356085`*^9}, {3.718468970050361*^9, 
   3.718468977586881*^9}, {3.7184690268748236`*^9, 3.718469085066457*^9}, {
   3.7184691413161173`*^9, 3.7184691437081614`*^9}, {3.718469199469284*^9, 
   3.7184692083333488`*^9}, {3.7184692691456275`*^9, 
   3.7184692782899766`*^9}, {3.718469392304347*^9, 3.718469395328211*^9}, {
   3.718469515130185*^9, 3.718469515761523*^9}, {3.7184696339807*^9, 
   3.718469645875003*^9}, {3.718469708613516*^9, 3.718469718419969*^9}, {
   3.718470030451933*^9, 3.718470039001573*^9}, {3.7184701236029415`*^9, 
   3.718470155802992*^9}, {3.718470217028361*^9, 3.718470231500252*^9}, 
   3.718470277053051*^9, {3.7184703292805557`*^9, 3.7184703301003785`*^9}, {
   3.718470406489481*^9, 3.7184704083205147`*^9}, {3.718470457718457*^9, 
   3.718470482006547*^9}, {3.718470515694368*^9, 3.71847051839158*^9}, {
   3.718470576768402*^9, 3.7184705844156003`*^9}, {3.718470664875435*^9, 
   3.718470665586844*^9}, {3.7184707448416295`*^9, 3.7184707453377104`*^9}, {
   3.7184709041002073`*^9, 3.71847090554939*^9}, {3.7184710354542556`*^9, 
   3.7184710436429977`*^9}, {3.718471104181461*^9, 3.7184711055154114`*^9}, 
   3.7184711701597376`*^9, {3.718471231823064*^9, 3.718471232436339*^9}, {
   3.718471285551015*^9, 3.7184712867658362`*^9}, {3.7184713410416346`*^9, 
   3.718471343559642*^9}, 3.718471394879924*^9, {3.718471482313266*^9, 
   3.7184714845759153`*^9}, {3.7184715447778845`*^9, 3.718471565112917*^9}, {
   3.7184716582437286`*^9, 3.7184716889894276`*^9}, {3.7184717675391903`*^9, 
   3.718471769838977*^9}, {3.7184718618905087`*^9, 3.718471864663912*^9}, 
   3.7184718998568172`*^9, {3.7184719341369963`*^9, 3.7184719519872217`*^9}, {
   3.7184720155699587`*^9, 3.718472021499782*^9}, {3.718472085955778*^9, 
   3.718472092722737*^9}, {3.718472157270297*^9, 3.7184721577341824`*^9}, {
   3.718472320065235*^9, 3.7184723205935416`*^9}, {3.7184724807647915`*^9, 
   3.7184724900166173`*^9}, {3.7184729351833963`*^9, 
   3.7184729405577593`*^9}, {3.7184739219158516`*^9, 
   3.7184739576896563`*^9}, {3.7184744194018764`*^9, 3.718474425035525*^9}, 
   3.7184755143009043`*^9, {3.718475549667655*^9, 3.7184755532681704`*^9}, {
   3.718475713966797*^9, 3.7184757360768433`*^9}, {3.718486799278085*^9, 
   3.718486818001199*^9}, {3.718486937487671*^9, 3.7184869457385178`*^9}, {
   3.7195792580153785`*^9, 3.7195792584475307`*^9}, {3.719579296415726*^9, 
   3.7195793343819156`*^9}, {3.719579498961565*^9, 3.7195795061447105`*^9}, {
   3.7195796279874535`*^9, 3.7195796437304134`*^9}, {3.7195809216636915`*^9, 
   3.719580946209027*^9}, {3.719581017912757*^9, 3.719581018631835*^9}, {
   3.7195812786226115`*^9, 3.719581299580862*^9}, 3.719581645511384*^9, {
   3.719581770696701*^9, 3.719581772221609*^9}, 3.7195818362169805`*^9, 
   3.7195822970682*^9, {3.7195827300533705`*^9, 3.719582732690276*^9}, {
   3.7195829152452836`*^9, 3.7195829352113333`*^9}, {3.719582991552219*^9, 
   3.7195829941927795`*^9}, {3.719583094568735*^9, 3.7195831076162663`*^9}, {
   3.719583177852125*^9, 3.7195831893652363`*^9}, {3.719583313869602*^9, 
   3.719583314932021*^9}, {3.7195837839559245`*^9, 3.719583787003111*^9}, {
   3.7195838540449657`*^9, 3.7195838543416557`*^9}, {3.719583913807062*^9, 
   3.719583915968214*^9}, {3.7195839730806*^9, 3.7195839739069657`*^9}, {
   3.7195840419802685`*^9, 3.7195840429647007`*^9}, {3.719584108564244*^9, 
   3.7195841090520353`*^9}, {3.719584164656478*^9, 3.719584166202141*^9}, {
   3.719584223451945*^9, 3.719584228606949*^9}, {3.7195843092988005`*^9, 
   3.7195843105956297`*^9}, {3.7195843825034037`*^9, 
   3.7195843834718094`*^9}, {3.7195844432152605`*^9, 
   3.7195844519880867`*^9}, {3.7195845173115563`*^9, 3.719584517906841*^9}, {
   3.719584582770274*^9, 3.719584585923309*^9}, 3.719584657660193*^9, {
   3.7195847878832283`*^9, 3.7195847887284513`*^9}, {3.7195848495004253`*^9, 
   3.7195848597707987`*^9}, {3.71958498064999*^9, 3.7195849816255875`*^9}, {
   3.7195850710775824`*^9, 3.719585072619693*^9}, {3.7195851357395773`*^9, 
   3.719585136746234*^9}, {3.719585985934868*^9, 3.7195859873897758`*^9}, {
   3.7195860487681923`*^9, 3.7195860495973997`*^9}, {3.719586128129712*^9, 
   3.7195861293258977`*^9}, {3.719586238769597*^9, 3.7195862413444605`*^9}, {
   3.719586313315282*^9, 3.7195863167995663`*^9}, {3.719586396049791*^9, 
   3.719586399408743*^9}, {3.719586477714718*^9, 3.7195864780024204`*^9}, {
   3.7195865339597855`*^9, 3.719586536390226*^9}, {3.7195865687024927`*^9, 
   3.7195865772777967`*^9}, {3.7195873064937644`*^9, 
   3.7195873080728407`*^9}, {3.719587463353217*^9, 3.7195874851918736`*^9}, {
   3.7195875621407843`*^9, 3.7195875627196646`*^9}, {3.7195876784000697`*^9, 
   3.719587678728096*^9}, {3.7195877314909687`*^9, 3.7195877326920676`*^9}, {
   3.719587790227979*^9, 3.719587791385828*^9}, {3.719587965935734*^9, 
   3.7195879662324257`*^9}, {3.719588021282386*^9, 3.719588024374019*^9}, {
   3.719588128905106*^9, 3.719588166421815*^9}, 3.7195882474044256`*^9, {
   3.7195883771489105`*^9, 3.7195884155682673`*^9}, {3.7195885013909674`*^9, 
   3.7195885021544614`*^9}, {3.719588626616554*^9, 3.7195886269765778`*^9}, {
   3.719588698154498*^9, 3.7195887172506742`*^9}, {3.719588786610024*^9, 
   3.7195887869381886`*^9}, {3.719588842557537*^9, 3.7195888769172983`*^9}, {
   3.719588975048947*^9, 3.7195889866220493`*^9}, {3.7195890427969165`*^9, 
   3.719589046105387*^9}, {3.7195891036867456`*^9, 3.7195891340311103`*^9}, {
   3.719589230261958*^9, 3.7195892317465*^9}, {3.7195893545073905`*^9, 
   3.719589358537743*^9}, {3.7195894299177094`*^9, 3.719589440369649*^9}, {
   3.71958950560632*^9, 3.719589511436285*^9}, {3.719589570494855*^9, 
   3.719589573792076*^9}, {3.719589664197217*^9, 3.7195896653540506`*^9}, {
   3.719589796939926*^9, 3.7195897986296034`*^9}, {3.719589889663597*^9, 
   3.7195898903661423`*^9}, {3.719589944948238*^9, 3.7195899604621887`*^9}, {
   3.71959001346682*^9, 3.7195900277708*^9}, 3.719590086593302*^9, {
   3.719590164006979*^9, 3.7195901684546375`*^9}, {3.7195903345995827`*^9, 
   3.71959033492774*^9}, 3.7195904032917795`*^9, {3.7195908902216787`*^9, 
   3.719590890614133*^9}, {3.719590949998256*^9, 3.7195909515570126`*^9}, {
   3.7195910439975624`*^9, 3.7195910443880143`*^9}, {3.719591119298934*^9, 
   3.719591148532943*^9}, {3.719591208930297*^9, 3.7195912092584586`*^9}, {
   3.7195912683853383`*^9, 3.7195912797519846`*^9}, {3.7195913508049436`*^9, 
   3.7195913513526373`*^9}, {3.719591862667823*^9, 3.7195918788246503`*^9}, {
   3.719591945432677*^9, 3.719591947287784*^9}, 3.719592023864645*^9, {
   3.719592084745936*^9, 3.719592087454048*^9}, {3.719592319639939*^9, 
   3.719592320011924*^9}, {3.7195924008493147`*^9, 3.7195924011772747`*^9}, {
   3.719592483962159*^9, 3.719592501679543*^9}, {3.719676263866779*^9, 
   3.719676264394186*^9}, {3.7196770059957647`*^9, 3.7196770068279805`*^9}, 
   3.7196772640149117`*^9, {3.7196773372937803`*^9, 3.7196773388940353`*^9}, {
   3.7196774315353937`*^9, 3.7196774327486196`*^9}, {3.7196775141093082`*^9, 
   3.7196775143811307`*^9}, {3.7196775921118183`*^9, 3.71967759594811*^9}, 
   3.719677673660042*^9, {3.719677751343948*^9, 3.719677752285832*^9}, {
   3.7196778375046015`*^9, 3.719677844815587*^9}, {3.71967802218888*^9, 
   3.719678022847017*^9}, {3.719678137232113*^9, 3.7196781376304703`*^9}, {
   3.719678274244687*^9, 3.7196782750245266`*^9}, {3.719678351329441*^9, 
   3.7196783527361927`*^9}, {3.7196784233097067`*^9, 3.719678424109135*^9}, {
   3.719678876540676*^9, 3.7196788772751355`*^9}, 3.719678928127678*^9, 
   3.7196790810659394`*^9, {3.7196792900792446`*^9, 3.719679290661189*^9}, {
   3.719679372578826*^9, 3.719679372946965*^9}, {3.719679536577202*^9, 
   3.7196795450776253`*^9}, {3.71967963966039*^9, 3.719679641177313*^9}, {
   3.7196797022566156`*^9, 3.719679703640903*^9}, {3.719679783663164*^9, 
   3.7196797851264277`*^9}, {3.7196798472180166`*^9, 3.719679848752884*^9}, {
   3.7196799002129016`*^9, 3.719679902638918*^9}, {3.719679965763715*^9, 
   3.719679972957015*^9}, {3.719680042602886*^9, 3.719680044411475*^9}, {
   3.7196801062806473`*^9, 3.719680107641728*^9}, {3.719680163131956*^9, 
   3.719680165670753*^9}, {3.7196802575279803`*^9, 3.719680260583584*^9}, {
   3.719680341350227*^9, 3.719680342014638*^9}, {3.719680725628562*^9, 
   3.719680726663065*^9}, {3.7196808151269884`*^9, 3.7196808163776913`*^9}, {
   3.7196809326321993`*^9, 3.719680933142199*^9}, 3.7196810614348474`*^9, {
   3.7196812199210477`*^9, 3.7196812209839616`*^9}, {3.719681280601135*^9, 
   3.7196812846808357`*^9}, 3.7196813613387847`*^9, 3.7196814300320096`*^9, {
   3.719681517304864*^9, 3.7196815182105255`*^9}, {3.71968163034978*^9, 
   3.719681638665908*^9}, {3.7196817228593507`*^9, 3.7196817238567276`*^9}, {
   3.719681778424108*^9, 3.719681779313679*^9}, 3.719682017617007*^9, 
   3.719682083727356*^9, {3.719682307027517*^9, 3.7196823122169185`*^9}, {
   3.7196823681997347`*^9, 3.719682370528077*^9}, {3.7196824605106497`*^9, 
   3.719682460907647*^9}, 3.7196825156156654`*^9, {3.719682594433069*^9, 
   3.7196825996216836`*^9}, 3.7196826963887634`*^9, {3.7196828020928574`*^9, 
   3.7196828094959764`*^9}, {3.7196829000537815`*^9, 
   3.7196829084951944`*^9}, {3.7196829687812605`*^9, 
   3.7196829750143385`*^9}, {3.7196830388546925`*^9, 3.719683039465969*^9}, 
   3.719683211256321*^9, {3.719683273378443*^9, 3.719683274159999*^9}, 
   3.7196833334924917`*^9, {3.719683391486043*^9, 3.7196833929422493`*^9}, 
   3.7196834670189195`*^9, {3.7196835385344715`*^9, 3.7196835403481426`*^9}, 
   3.719683598403265*^9, 3.7196836664992456`*^9, {3.719683741728691*^9, 
   3.7196837428055773`*^9}, {3.7196839935941353`*^9, 3.719684002598155*^9}, {
   3.7196840648711543`*^9, 3.71968406520605*^9}, {3.719684145717125*^9, 
   3.7196841551582575`*^9}, {3.7196842168072*^9, 3.719684221205902*^9}, {
   3.7196842775758057`*^9, 3.7196842778144407`*^9}, {3.7196843679732075`*^9, 
   3.71968436839032*^9}, {3.7196845286004167`*^9, 3.71968453007135*^9}, {
   3.719689293898493*^9, 3.7196893014014916`*^9}, {3.7197507450440273`*^9, 
   3.71975075568039*^9}, {3.7197508336823072`*^9, 3.7197508340172253`*^9}, {
   3.7197509710435195`*^9, 3.7197509722747774`*^9}, {3.7197510846749516`*^9, 
   3.719751093075292*^9}, {3.7197536073115587`*^9, 3.7197536103346014`*^9}, {
   3.719763415746185*^9, 3.719763416482315*^9}, {3.719763557668811*^9, 
   3.7197635584130354`*^9}, {3.7197636579034786`*^9, 
   3.7197636694870186`*^9}, {3.719763737088541*^9, 3.7197637377334304`*^9}, {
   3.719763815827739*^9, 3.7197638162025733`*^9}, {3.719763952518857*^9, 
   3.7197639533464885`*^9}, {3.71976420751054*^9, 3.719764212326335*^9}, {
   3.719764291216848*^9, 3.719764293596089*^9}, 3.719764393553385*^9, {
   3.7197644480886765`*^9, 3.7197644510453014`*^9}, {3.7197645874704466`*^9, 
   3.719764587909299*^9}, {3.7197646515314465`*^9, 3.719764680015334*^9}, {
   3.719764858911066*^9, 3.719764860031741*^9}, 3.719845253286975*^9, {
   3.719845496296767*^9, 3.719845543528284*^9}, {3.71984723584814*^9, 
   3.7198472528989277`*^9}, {3.719847804986738*^9, 3.7198478080547004`*^9}, {
   3.7198485461679935`*^9, 3.719848549539918*^9}, {3.7198497339342823`*^9, 
   3.719849736966198*^9}, {3.719849809878644*^9, 3.719849840779941*^9}, {
   3.7198498722551785`*^9, 3.7198498740211687`*^9}, {3.7198501927849817`*^9, 
   3.7198502039647017`*^9}, {3.719850309858729*^9, 3.719850310561886*^9}, {
   3.7198503413941016`*^9, 3.7198503502482944`*^9}, {3.7198503845238523`*^9, 
   3.719850386086343*^9}, {3.7198504570924387`*^9, 3.719850463953076*^9}, {
   3.719850518538866*^9, 3.7198505200234027`*^9}, {3.719850578614622*^9, 
   3.719850579318037*^9}, {3.7198506528866715`*^9, 3.7198506537617836`*^9}, {
   3.719850726014327*^9, 3.71985072673316*^9}, {3.719850784620494*^9, 
   3.7198507855424623`*^9}, {3.7198509631235247`*^9, 
   3.7198509634985676`*^9}, {3.7198510380367146`*^9, 
   3.7198510389748554`*^9}, {3.7198511113369184`*^9, 3.719851111633992*^9}, {
   3.7198511863732967`*^9, 3.719851188732923*^9}, {3.7198512453460426`*^9, 
   3.7198512459554815`*^9}, 3.719852198261549*^9, 3.719855004027569*^9, {
   3.7198574584754305`*^9, 3.7198574669351053`*^9}, 3.7198576755538645`*^9, {
   3.719857807741104*^9, 3.7198578082257347`*^9}, {3.7198584353167396`*^9, 
   3.719858435738824*^9}, {3.719858511026016*^9, 3.719858512608221*^9}, {
   3.7198586146883774`*^9, 3.7198586240481944`*^9}, {3.7198586992154827`*^9, 
   3.7198587051833043`*^9}, {3.719858773232716*^9, 3.719858775598981*^9}, {
   3.7198588475226383`*^9, 3.7198588538223658`*^9}, {3.7198589228573923`*^9, 
   3.719858925002078*^9}, {3.7198590247485304`*^9, 3.7198590250924425`*^9}, 
   3.7198599987960644`*^9, {3.7198601397396226`*^9, 3.7198601471994514`*^9}, {
   3.7198602068238935`*^9, 3.719860208556498*^9}, 3.7198619992516403`*^9, {
   3.7198622463692904`*^9, 3.719862252840296*^9}, {3.7198623779987698`*^9, 
   3.719862385297601*^9}, {3.719862451206191*^9, 3.7198624520811863`*^9}, {
   3.719862513453104*^9, 3.7198625139842467`*^9}, {3.7198625715206017`*^9, 
   3.719862572186927*^9}, {3.7198631628518696`*^9, 3.7198631643107204`*^9}, {
   3.719863250483753*^9, 3.7198632513620934`*^9}, 3.7199443017625475`*^9, {
   3.719944566004468*^9, 3.7199445662791977`*^9}, {3.7199446404410534`*^9, 
   3.719944646670618*^9}, {3.719944711120508*^9, 3.7199447258771977`*^9}, {
   3.7199448431594534`*^9, 3.719944843475684*^9}, {3.7225783183939705`*^9, 
   3.7225783235155497`*^9}, {3.7225798589847345`*^9, 3.722579893684168*^9}, {
   3.7239051317249317`*^9, 3.7239051330213013`*^9}, {3.7239052313383913`*^9, 
   3.723905232933097*^9}, {3.7239058822442336`*^9, 3.723905882695431*^9}, {
   3.723906099077862*^9, 3.723906099857636*^9}, {3.7239062504797096`*^9, 
   3.723906250815158*^9}, {3.723906517945977*^9, 3.7239065195089474`*^9}, {
   3.7239066536975174`*^9, 3.723906655185789*^9}, {3.7239068062712092`*^9, 
   3.7239068071349683`*^9}, {3.723907541335802*^9, 3.7239075486521063`*^9}, {
   3.7239077408127117`*^9, 3.7239077458345995`*^9}, {3.723907863865996*^9, 
   3.723907864337206*^9}, {3.7239082889186783`*^9, 3.7239082893478675`*^9}, {
   3.7239084696021433`*^9, 3.723908470326251*^9}, {3.723908606864607*^9, 
   3.72390860723815*^9}, {3.7239088254110823`*^9, 3.7239088256625495`*^9}, {
   3.7239093444127874`*^9, 3.7239093447452965`*^9}, {3.7239096980825267`*^9, 
   3.7239096983076496`*^9}, {3.723910136514007*^9, 3.7239101371140914`*^9}, {
   3.723910371371704*^9, 3.7239103720201297`*^9}, {3.7239105058867226`*^9, 
   3.723910506182049*^9}, {3.723910892673862*^9, 3.723910892830597*^9}, {
   3.7239110774532146`*^9, 3.723911077769127*^9}, {3.7239112161921463`*^9, 
   3.723911216566649*^9}, {3.723911382036188*^9, 3.7239113823403835`*^9}, {
   3.7239117556455345`*^9, 3.723911755906763*^9}, {3.723911870211233*^9, 
   3.7239118707566347`*^9}, {3.723911943949043*^9, 3.723911944242978*^9}, {
   3.723912084847165*^9, 3.7239120860946918`*^9}, 3.7239122194314795`*^9, {
   3.723912673860669*^9, 3.7239126740916204`*^9}, {3.72391283880873*^9, 
   3.723912845081128*^9}, {3.7239129343260727`*^9, 3.7239129394915075`*^9}, 
   3.723913061241887*^9, 3.723914649898758*^9, {3.7277026271478615`*^9, 
   3.7277026493434834`*^9}, {3.727703354533304*^9, 3.7277033603423405`*^9}, {
   3.7277034684462833`*^9, 3.7277034742868433`*^9}, {3.727703931558593*^9, 
   3.7277039381008053`*^9}, {3.7277055434388876`*^9, 
   3.7277055648557773`*^9}, {3.7277125377036824`*^9, 3.7277125422508445`*^9}},
 ExpressionUUID -> "3eb7cfc1-46e5-41c0-96d2-2284fc17e180"],

Cell[BoxData[
 RowBox[{"AbsoluteTime", "[", 
  TemplateBox[{GraphicsBox[{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJw1kglMVGcUhV0KKmmt+N4bEIaZAUpYTFHECsLI+UVDRSyiiGCDSasZoMRW
NLVUQEejGJEoImoFARFxL1BZipQKFVQWWURAECn7vop1KNK0lBnv3OTl5S3/
veec75ru2rtVMWfWrFmKmUt911ZtTvi7TIWIhfMZn3eEHUdBj+HRbH/t83lc
b7JqY9tF7L4kcmjL/WQ4nWnLs9+o/Z6Gs5P12xzkIpYQr67bqBk4oIiy0v6f
AZeU40EwFLHhLeo392AtCpGZ62jP50AZpYzwGRaYXuO1kDV6eWhJPOPZ9FKg
fvmIOWcRP14iMGv/mGKV1e9wOXEsMe62QP0LMfldY/S7OIGlzZxuvPYHgvSz
+eQwgeY9xJXYI4NHFQKz11QJ5B8kDPtuEGj+I5jbfZw99KnASlRWMxMeo1uQ
6J0y0OopxY3L1XeCJ3i2VTOwDAtv5t8618yTvnJY1NkVVxTxrCNM3bACASui
FiWn8aS3Euu95sWvjOTZPrW8kCpUPFw770UgT/qr8cRe+s2HHjx7T+MZ7Pfv
KBRsefLzDCOrXiiCF/Nsg2ZALRa1tueq3nLkrxaV+7w8a19yTD3NP+Y5rFQH
dN8UcuS3Dp985H3R/SbHNHYa67AgXT6Vfpoj//UY3TZ40DuCY1K1HEkDfiiP
0i0M5CiPBuwKEO7u9uFYYIC6XuD0Z46HUtdzlE8j7pl5Zy9YxTF1Nz6jEZM2
KXa5Nhzl1YSxTD+FsQnHJtTtVE1wrDniX81zlN9LpDfczJLrc8xF07AZ/kcq
8qYWcpRnM4JPHK71nfmukRf5Ck5lVUmzjTnKtwXNllmSTkuOVVWqqwVL76bq
T8zoeZ/3nxg3vcPOunNM0AhsRezihvbxrznKvxXXd/xX6nyIY5p2/m2YY1Vy
tz+BIx7tOLbJ6+2NAq2fdiRYThZJujni0w753PNKN32e/LVDHB1dkL5Wy6sD
y0J/mr/1R+2+dKAruVTlk8UTvw58GffQMuMNT/47cTJ92bSrg0A8O2Hp4G6t
d1SgPDqxbn5GzWi1dp+70N/lFyCYiSifLuhvCWIpoSLi3YWI/N2PUmtElFc3
3OQpr2KtDYh/N7Z5hA+FRRpQft3wtPW4X9VlQPvQg2XT4n0nXQ0pzx7IMm2v
7rlqSPvRgydmFa5vpw0p315cwfzi73cuoX3pxf6xpPjC/CWUdy92re9xMxOM
aH/6sMH38K9LQ4wo/z5sX55eP11uRPvUB+dNshEPM2Pi0Y/XsW2XMw8aE49+
fKW01tGpNiYe/fj58S3nkxIx8ejHZrek2Sv2iInHAMxDnxb55YqJxwCS9nKm
/0yJiccA/PTf7FCuMSEeg3BcXl62+pAJO6vhMQh3tz26Tr+ZEI9B/PK3M2+t
MiEeQ8hyNZRutJUQjyEEdDxI6lNIiMcQQkr/rYpNlBCPYZyq8c18UCshHsMo
rNgtWacrJR7DCGvurDvjJCUeI6hPvnjh0rdS4jECd3nQ/rorUuIxgvNNHm6u
dVLiMYqy2+cOP50jIx6jkMR27+XEMuIxCmUxH9G2UkY8xmDhW14e84WMeIzB
YeHO53MDZMRjDHarc2y8lTLi8Ro6TdV/bb4kY/8DrBTXlQ==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJw1kgtMU3cUxlE2mNVFVBggG6MuER+lyHzASOCDSNyCcWJRcIJbZKJT42uZ
Dp1QyQaLjwwMDx84RCFTZIIiETCKCjooglCgFBGRFtre2/frNiHKMtqdnuTm
5j7+53zf9zv8jIOizJkeHh6Z05fz7q7clqEDz9od+MW39kvF8d9wc0Pm6IrH
7udilKdVRm5pcqApOE+3qakcMwputX9w2/29Cq/eCVavuO7ApYvOqobcz+tN
95/u/2thy/B64VnsgH6T880dKMMS2kZPuc83wG9gptQ3xwGevPJQDK8Rlo0P
Z6t/dPdrRmCrX4P/LgeWphe0ckseIEh45uqyre7+LeDdEv+bmOhA1fRpeeVj
HGvqum2Ids97grT7l7RHlzuw0lVtuOjVvs1roXv+U1yLO7je4O1AG7dkesIz
RM/VruvgONLTjoyoQDkzxkHkGtiBqN5ez8nnHOmTQF5dURd9j4PiuLNhJzos
J668LOdIbxeWcZPFV/M4HHbKO9QNQS3H4+/jSP8L+Ij8Oz9L4vA/jV5EbP76
1PmVHPnpBfttzfopPw5fuQZIwf60MkTA2cmfFBEJGQtXDdjhnJZe0IdfI7+7
VnPHTn77MWvKHis+a4fLjrwfZcG5i9dm2sn/AD7s6UmpiLXjU6ecYBmEf5d8
b/a1Ux4ynO68HD3J2rB7l7MGUTqY/PyPhzbKR46gyKaUqkIbnN18a+UQ7hDJ
0nbYKK8hBBQLHxQJbXA423FD8Fixc3f3Oyvl9xI81RFJr8SKWFfDYQTk3Aho
KbFSnsPIj3HsEW+3wiUv7xWUdTHcjFAr5TuCpf2jPX+ZLOjuctYISrIDL81r
tFDer5G8d2NT2wkL/FwCR1E1kBMhibdQ/qM4FirSjHhb4GqX/gZ51U/iw7vM
xGMM2sSIvjsFZvIzhpGA/OO5m83EZwwX/UMrm/3N5G8MprvW89n1JuKlgLqy
bNgzzkR+FbjMXxCS32EkfgoEVav6Q5ON5F8JftQ3itcKA/FUYqpIcKbogIHy
UOJR2czt3u8ZiO84DOFWnbRMT/mMI+ujuKS+SD3xHsdh8eya1cM6ymsC7+84
uk0p1hH/CfBScmQ7l+sovwnsnaM3do5qaR9UOHJmQ9zTC1rKUwUR7l0PSNXS
fqjQYM7oKv1YS/mqEfZFSxdfw9K+qHHbmCo918hS3mrYouvKkgpZ2h8NEiQt
Sy2HWMpfg77zxYtNqSztkwbimugsn40s8WCwIL1+cf1alngw+Lm1/pPuKJZ4
MPBvjqofDGeJB4MyaWdo2CKWeLBo6W+M2DCfJR4s+E/H4iffMsSDBbd1XXbk
BEM8tPB5ePZmq4RBoYuHFifP/bNIVsMQDy0E99l9r/IZ4qGDxNsgK0ljiIcO
s4Ydp3MiGeKhwxqhpnm1J0M89Mj6/a4gRaYhHnokvZxTml2hIR56LJk79Pbw
DxriYUDifGOnOFxDPAwIFw625kyqiYcBvLc9I56P1MTDiP3j8VPDJ9XEwwjf
LWt27k9QEw8jLnAXwm7w1MTDhD1h85I/l6qIhwkhNxp0s4tVxMMEvnaVwEek
Ih5m7LuifBfgp8J/YLU0Bg==
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJw1lAtMU2cYhv9TM+dQNmfqBbQgm6g1G7oY5yXS94+IY6DxuuGF6cSgYWSI
cV6GbgtIdWIU16k4QY2riHipoijMNYRZFEFRLmVF5daWS7lrBgRt6Vnb/z9f
0pycnnO+733f5zsnIHr7qhgZISTG9XMfpTqk9b1dsMiBfXLdF+bEFCwVqg6r
5dL5CSwJOa8J7rOjwE/dubLgHHQbjZuVVXZ+/SLmNxqtwYV2nPnDXTkIuDci
btp16X4d2te+03Ejx46ule5/cjH3aeFHulPS83m4vHh0mznDDi+TNiHYKx9l
SPnsy2NSv7+gTFi0t/ekHcqotPv90/WoHxW3K/V3qX8hDvhOfB6WbsdF19Mm
bRG0l6YGLs2Q5v2DG69+3jT/gh2zPWXAYEr0ubO50vxipM+K16pd+g39010T
HqD58Y2k5HJJTwluNti9jG12rPIMfIS6zDfhXm8kfaXIv3t0r8bbAXOiu2EZ
1AtiS9NnOLjeJ+hbrve5GeHADre8hHJYu+rjxHgH1/8Urcdic6LTHGA0KqAe
zOnwve7gfipwVPVbhr7agTDPgEr0nkinXqKD+6vE4K1O1aFpQ3BPi0qrwrup
ET0ty4a432qotOFVAUlD8NgxVUPzuDHhzq0h7t+IxD/7UissQ/B3y/GrwecL
humdcifPowZ1QqJPaJgT27a661+oZjkH3u518nxMqDZFLlxxzQl3N7nOhB1B
5pl+LU6eVy3GnPXx3T9JxIC7XX8ttu648sHlpSLP7zn87ZbTc34RofI0fIHU
h0HaZTqR5/kC/tb4ph9bRHjkqV9i/Op5S/4bRSjLtw4+d7/aPjyQ0PIn7qrD
yCMjR8qCCWV512Ny/7aszNWEjvUIbMCtCd7TjPGEsvwbUBAakRt9kFBPu6hG
3BvR1xNzllDGowkdP5j8ZbcJZX6aMLX6ftFPZYQyPk2o9KpURjcTyvw1wfb6
zIUaO6GMlxmKyIVlxjECZX7NKBbmKE/MECjjZ8almbI1phCBMv8WfJo5c1LU
NwJlPC04bn6yW75HoKydBZqSoVmtxwXK+FpxKnONQX1VoCwfKwq/Lum/WSxQ
hseKh8q7qu46gefVjPVZlsgNrwXK+DcjbF2R1SCT8fyaUaPa+Wy2XEbZPrRg
+UCrfuxkGc+zBbGpedn102WU7UcLVkw5s0X/iYzn24oo2v64wnXO9qUV16/O
D97lup/l3QqosxrfKmSU7U8b0l8qsga8ZTz/NjS0r84e3i9Qtk9tyPh+rqK0
VuA8bCh/dXuT9x2B87BhrqYw0ubKg/GwodhfNSUiVuA8bOi7d3B5iitfxqMd
hnFH12UFSDzasXbP+CSDSDiPdqwf7LRtaSKcRwf04wzf7S4m9LiHRweuhdQd
9rtCOI8OtG0MTZ6tIZxHJ8Znh6x7tJ9wHp04EL4lf1Qc4Tw68fzIikcb1kr7
2wWlQlezOJxwHl1IS7Y8MyyU9rkL288rNF1BhPPoxvkJfxflBUr73Y335ynI
rxMJ59EN4+kXyaM/lPa9B8ODduYdeZdwHj14rypGXiaK/PvTg6sPcvd9+1rk
73MvhoUmT53XLILx6EVpSrT641qRv9+9CE06aQ0sEfn36hWyz80xbM4X8T+Q
zAvD
          "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 1.}, {0, 8.2974849882121}}, PlotRangeClipping -> True,
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 600, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 8.2974849882121}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{"\"Total Resources\"", "\"Consumer\"", "\"Predator\""}, 
       "PointLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
            ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], "]"}]], "Output",
 CellChangeTimes->{3.72771210324784*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "This section is to save the results ",
 StyleBox["with ", "Subsection"],
 StyleBox["fixed e2 and p", "Subsection",
  FontWeight->"Bold"],
 StyleBox[" values but ", "Subsection"],
 StyleBox["\[Alpha] varying from 0 to 1", "Subsection",
  FontWeight->"Bold"]
}], "Subsection",
 CellChangeTimes->{{3.722579918705484*^9, 
  3.722579950439159*^9}},ExpressionUUID->"51acba99-e8c7-42cc-9391-\
148add21744b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", " ", "=", " ", 
   RowBox[{
    RowBox[{"Reap", "[", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{"NDSolve", "[", 
          RowBox[{"eqs", ",", " ", 
           RowBox[{"{", 
            RowBox[{"Res1", ",", " ", "Res2", ",", "Con", ",", " ", "Pred"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Sow", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Res1", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Res2", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",",
               " ", 
              RowBox[{"{", 
               RowBox[{
               "t", ",", " ", "8000", ",", " ", "10000", ",", " ", "0.01"}], 
               "}"}]}], "]"}], "//", "Mean"}]}], "}"}], "\[IndentingNewLine]",
          "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", "1", ",", " ", "0.01"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<K:\\\\IGP exp_in lab\\\\ProgressReport_20171115\\\\Type2.csv\>\"", 
    ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"aa", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.718471959583766*^9, 3.7184719790760336`*^9}, {
   3.718472099816351*^9, 3.718472138107117*^9}, {3.718472230043913*^9, 
   3.7184722694540415`*^9}, {3.718472980476659*^9, 3.71847298100642*^9}, {
   3.7184757560472913`*^9, 3.718475757306547*^9}, {3.718487806923459*^9, 
   3.7184878100619802`*^9}, 3.719684562555911*^9, {3.722579959963993*^9, 
   3.722579968316969*^9}},
 ExpressionUUID -> "2a975dd8-20e0-4e04-baa1-67d9b38ce3e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
This section is to save results with e2 varying from 0 to 0.5, p varying from \
0 to 0.15 and \[Alpha] varying from 0 to 1\
\>", "Subsection",
 CellChangeTimes->{{3.7225799862709484`*^9, 3.722580101277014*^9}, {
  3.7239146871612854`*^9, 3.723914692975872*^9}},
 ExpressionUUID -> "f03b609c-e30c-428b-978d-6c98029ff8a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "1.71641"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K1", "=", "8.13829"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "1.71641"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K2", "=", "8.13829"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "1.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e1", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "=", "0.38580"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h2", "=", "0.35959"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "20000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Res1", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"r1", "*", 
        RowBox[{"Res1", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Res1", "[", "t", "]"}], "K1"]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"A", "*", "p", "*", 
           RowBox[{"Res1", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S1", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "*", 
           RowBox[{"Res1", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Res2", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"r2", "*", 
        RowBox[{"Res2", "[", "t", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Res2", "[", "t", "]"}], "K2"]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"A", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "*", 
           RowBox[{"Res2", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S1", "*", "p", "*", 
           RowBox[{"Res2", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"B", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"B", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"H", "*", "A", "*", "p", "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"H", "*", "A", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res2", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{"M", "*", 
        RowBox[{"Con", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"S2", "*", "\[Alpha]", "*", 
           RowBox[{"Con", "[", "t", "]"}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"e1", "*", "S1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"e1", "*", "S1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"e2", "*", "S2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}], 
          RowBox[{"1", "+", 
           RowBox[{"S1", "*", "h1", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "*", 
            RowBox[{"Res1", "[", "t", "]"}]}], "+", 
           RowBox[{"S1", "*", "h1", "*", "p", "*", 
            RowBox[{"Res2", "[", "t", "]"}]}], "+", 
           RowBox[{"S2", "*", "h2", "*", "\[Alpha]", "*", 
            RowBox[{"Con", "[", "t", "]"}]}]}]], ")"}], "*", 
        RowBox[{"Pred", "[", "t", "]"}]}], "-", 
       RowBox[{"d", "*", 
        RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Res1", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Res2", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.722580956639426*^9, 3.7225810295920343`*^9}, 
   3.7239146994325933`*^9, {3.7239151731379385`*^9, 3.7239151865356827`*^9}, {
   3.7239159934099417`*^9, 3.7239160011440673`*^9}, {3.723916118893922*^9, 
   3.7239161226549425`*^9}, {3.7239161687227097`*^9, 
   3.7239162618944707`*^9}, {3.723916328383267*^9, 3.7239163655246058`*^9}, {
   3.7277026139957204`*^9, 3.727702614419919*^9}},
 ExpressionUUID -> "8eff09f7-de33-43f4-8799-a4685bfd7f1b"],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"aa", " ", "=", " ", 
     RowBox[{
      RowBox[{"Reap", "[", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
          RowBox[{"sol", "=", 
           RowBox[{"NDSolve", "[", 
            RowBox[{"eqs", ",", " ", 
             RowBox[{"{", 
              RowBox[{
              "Res1", ",", " ", "Res2", ",", "Con", ",", " ", "Pred"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"tab", " ", "=", "  ", 
           RowBox[{
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Res1", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Res2", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",",
               " ", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "t", ",", " ", "8000", ",", " ", "10000", ",", " ", "0.01"}], 
               "}"}]}], "\[IndentingNewLine]", "]"}], "//", "Mean"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Sow", "[", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "tab"}], "}"}], "\[IndentingNewLine]", 
           "]"}], ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "0", ",", "1", ",", " ", "0.01"}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "\"\<D:\\\\Research\\\\IGP_LabExp\\\\Analysis\\\\Type2ModResults\\\\\
Type2_e2_\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"e2", "*", "10"}], "]"}], "<>", "\"\<_p_\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"p", "*", "100"}], "]"}], "<>", "\"\<.csv\>\""}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"aa", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "4", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}]}], "]"}], 
    ";"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"e2", ",", " ", "0", ",", " ", "0.5", ",", " ", "0.01"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"p", ",", " ", "0", ",", " ", "0.15", ",", " ", "0.01"}], "}"}]}],
   "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.723916379310976*^9, 3.7239163846541204`*^9}, {
  3.7239164422738476`*^9, 3.7239165338735423`*^9}, {3.7239170117568884`*^9, 
  3.723917012276288*^9}, {3.723917401451458*^9, 3.723917440154925*^9}, {
  3.7239182429961*^9, 3.723918260763708*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "21"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "21"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "21"}], "}"}]}], "]"}]}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Total Resources\>\"", ",", " ", "\"\<Consumer\>\"", ",", " ", 
      "\"\<Predator\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQOzSovO37sh4TBrJgistFe6dVmZOxLG32k/5dbJ
CFcTCQcTYxA4bH+z4VeeexRM/qR9a66XdIqyhAPEtAv2XWqHz675IQ5Vf9k+
WTlU5aeUhEN6GghcsxfbOtn+719xqP6b9lPFD3fEWkk4nD0DAnfs3QQm8Fiv
gpn3wJ7fsWOT8xOYfQ/te7bf7Fi2XhJq/mP72N8s6mu6paD6n9hHrSrucZ8p
DbXvmf0PBUOxDaUyUPNe2Icws8zRiJOFmvfSvsDezW5pkRzUvNf2KtM3PfuR
LA817439ryZvu8PKClDz3tm3vAmXt65RgJr3wX7Gk2AViQsKDgDP7opC
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQOG1472v8j4aj9rJgistOd1KfPdEQzj77TnZbU+
mWH+1d7EGAQO2/tum3bAQBQmf9JeU1NjjvmTL/YQ0y7YJ7D5cC+e/wWq/rK9
yry9vqsSvtinp4HANfv1MbuSSt9/huq/aa8kdpSluPyz/dkzIHDH3ikrp+zs
609Q8x7YZ6tULbnu8wmq/qF9d+qplc/OfISa/9h+6QN9092KH6H6n9ibC8nW
71z6AWrfM/v7eVt7uAw/QM17YR+Qcs66lu091LyX9onrzz113PsOat5re8t3
L8/lfngLNe+N/bfs9dxbP7+FmvfOfuP6K4fqNd9Czftg3962c2L5sjf2AKtq
njw=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMb1/03Fy/8aT9rJgistL/++PznzAwYf6f94xtn
VF3W/7Q3MQaBw/brdnZZBkXD5E/aSx7kPbts8k97iGkX7Hs2ujH/lP4FVX/Z
/s8r+Sz9/p/26WkgcM3+XUOGv0XiL6j+m/ZhFVt2Wcr9tj97BgTu2B8SufHC
6eBvqHkP7J1U5Rss9/2Gqn9oz3Q+TWjfv99Q8x/b83w2yX1t/Aeq/4l9YNqv
/Te+/4ba98xeaxnvtRltMPNe2Jtwps+ZoQMz76U9X/rnqjVuMPe+tnc587X0
g/FPqHlv7LdbT177LPQH1Lx39gnBH+K3L/sONe+D/VtV1+3uFt/tAVeAoWI=

         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {0, 8.40643418811878}}, PlotRangeClipping -> True,
      ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 8.40643418811878}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Total Resources\"", "\"Consumer\"", "\"Predator\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.722581107507036*^9},ExpressionUUID->"e4498880-5b30-428c-92d3-\
3cfc6b2f0916"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Model results with type I functional response", \
"Section"]], "Subsection",
 CellChangeTimes->{{3.7185325963578334`*^9, 3.718532604238615*^9}, {
  3.7225801527800884`*^9, 
  3.722580162601801*^9}},ExpressionUUID->"942d5e99-2d11-4cbe-a38a-\
ba37faaaf212"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "2.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K1", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "2.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"K2", "=", "50"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", "0.3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S1", "=", "0.7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e1", "=", "0.3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e2", "=", "1.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "2.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "0.75"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tf", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqs", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Res1", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"r1", "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Res1", "[", "t", "]"}], "K1"]}], ")"}]}], "-", 
        RowBox[{"A", "*", "p", "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"S1", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}], "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Res2", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"r2", "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Res2", "[", "t", "]"}], "K2"]}], ")"}]}], "-", 
        RowBox[{"A", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}], "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"S1", "*", "p", "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Con", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"B", "*", "A", "*", "p", "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "+", 
        RowBox[{"B", "*", "A", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}], "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"M", "*", 
         RowBox[{"Con", "[", "t", "]"}]}], "-", 
        RowBox[{"\[Alpha]", "*", 
         RowBox[{"Con", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Pred", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"e1", "*", "S1", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}], "*", 
         RowBox[{"Res1", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}], "+", 
        RowBox[{"e1", "*", "S1", "*", "p", "*", 
         RowBox[{"Res2", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}], "+", 
        RowBox[{"e2", "*", "\[Alpha]", "*", 
         RowBox[{"Con", "[", "t", "]"}], "*", 
         RowBox[{"Pred", "[", "t", "]"}]}], "-", 
        RowBox[{"d", "*", 
         RowBox[{"Pred", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Res1", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Res2", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Con", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Pred", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aa", " ", "=", " ", 
   RowBox[{
    RowBox[{"Reap", "[", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{"NDSolve", "[", 
          RowBox[{"eqs", ",", " ", 
           RowBox[{"{", 
            RowBox[{"Res1", ",", " ", "Res2", ",", "Con", ",", " ", "Pred"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Sow", "[", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Res1", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Res2", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
                RowBox[{
                 RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",",
               " ", 
              RowBox[{"{", 
               RowBox[{
               "t", ",", " ", "8000", ",", " ", "10000", ",", " ", "0.01"}], 
               "}"}]}], "]"}], "//", "Mean"}]}], "}"}], "\[IndentingNewLine]",
          "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", "1", ",", " ", "0.01"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"aa", "[", 
              RowBox[{"[", "n", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"aa", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "  ", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Total Resources\>\"", ",", " ", "\"\<Consumer\>\"", ",", " ", 
      "\"\<Predator\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7185317057375917`*^9, 3.7185317113785973`*^9}, {
   3.718531741651435*^9, 3.7185318424595175`*^9}, {3.7185321309933896`*^9, 
   3.718532165472278*^9}, {3.718532291026865*^9, 3.718532350097881*^9}, {
   3.7185324744141426`*^9, 3.7185324799257917`*^9}, 3.7185327100850754`*^9, {
   3.7185329806648417`*^9, 3.7185329860553975`*^9}, {3.718533184681371*^9, 
   3.7185331907828116`*^9}, {3.7185332347111635`*^9, 
   3.7185332510535345`*^9}, {3.718533377998*^9, 3.718533380708382*^9}, {
   3.718533664589226*^9, 3.7185336658050184`*^9}, {3.7185338259180627`*^9, 
   3.718533835847007*^9}, {3.718533867625845*^9, 3.718533892919956*^9}, {
   3.718534129234771*^9, 3.7185341627600584`*^9}, {3.718534322964924*^9, 
   3.7185343959268727`*^9}, {3.71975199693289*^9, 3.719752054116332*^9}, {
   3.7197520894304748`*^9, 3.719752124053776*^9}, {3.719752655913686*^9, 
   3.7197526656906853`*^9}, {3.7197526966349745`*^9, 3.719752697385972*^9}, 
   3.7197539110392523`*^9, {3.719754034416345*^9, 
   3.7197540346860657`*^9}},ExpressionUUID->"3a05458d-e6c5-43b8-b723-\
11ce0d644293"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw1kglMk2cYxxnoFjC6iLqJTHAy5fvaQi/ackz+r4hHMNGBQ7YFdeo8kCA6
YYugQiImKhpF0InbIBuILpM6nUE3xSHHtCKHF4WChYIthR4MFKOAc7R7+iRf
vnzH+xy/3/PhhtS4Te5ubm6bxi/H3RXFN66mtFfwLHO6eqkhIwfdKVVv1IWu
5wLUFfccPrSPZ9f8DlhirxVBd2qiKXmT63sp0qbW1qxewbMzhY74BS+9tlyO
CXP9r0b3Kq3vsvk8s8Y63lxCRMkPi1fOcJ2/AkVD5ydfvs0zL23JjgVeV5F7
Pj088xVH+f5A6l92XbGdY3ziseph7gYW55WbGowc5b+JKwkT7BM6OVY6flpb
UoWXt+PXROs4qncLPjexN1fLMbkzaqAwa75ua+Gofi2U7mcQ1MqxmmFuvEId
uB5x9YF2jvq5jY7YeRWGLo7FOQvegW9v2hWYXf1pcDn/b3nRIMcMGY6Ed1E5
uerg6Jir33sQiNaa4r14ttPR3o4G7LGsWPurj4tPI2Zy8YZXAp79b6MZI9+V
A5E8zdMMvXAPv3sVz5Y5C9xH5NoI8dltLp73kfqRrLpqP88c1RKPPcDCCmuI
poineR+iu/b6ePDMOY72IfJKFSkndS7+j9CcVRm1apRn/o52/B5jaO5kn6HZ
AuLxGB+0Vv+2PUrAtmx2RAu2KZ+p67YKiI8WltrKH58dFzBHtulqLbgjRuvz
PwXEqxWzspKH6kwC9sKRbrgVpW5Blg3ThcSvDd7GnNHbi4Qs0plQh/PpNvFg
mpB46nC3/9xe3Tkhc7Z3oB3bAzfUZHUIiW8H8psMmg5vEWu454gO6JvU0bYY
EfF+Aum6Ww8u5IjYDGeDeqx/LX7zXpWI+OuReVG/MPC1iDnTJXaiMVnq1hYR
RD66EG6/fjRwTxDN04WNvcOiKTeDyE8XopNt7x58K5jm64JeNfLZ8SXB5MuA
nxft9J17NJjmNWDo988TQx8Hkz8Dnjf5TWv0E9P83Wh5Hi3QJ4nJZzdiCn2z
N1aIiUc3Pg27tkvkLiG/PZi3YE5BBy8hPj3QXA3JRpyEfPegzDvoRFymhHg9
hbq203/aWQn5f4qshFmZ+5okxO8p6sNfDOaNSGgfjNg1SdwUM19KPI1YXvzN
F2VxUtoPI16dvdP6U5aU+JoQsKbySHi5lPbFBOOa9oqUdinxNsEz13wy1EtG
+9OLgNehW06HyYh/L4r9/918OElG+9QL/cr85klnZOTDjEOe9Xqfehn5MGNw
X+i9S2My8mFG1uSMh83BcvJhxu6KbHHaejn56MOFEq1vYYGcfPQhKqDv0cd3
5OSjDzeiFp1OHJOTj3541LSVDktC2HGnj37kFCyNmLg5hHz0o1M6pejg9yHk
w4KVzx5N3Xs/hHxYcGp/yZPOdxTkw4J1Ef7L1ZEK8mFF9vs1ZcZ0Bfmw4quW
mWx/uYJ8WFGSZE/KMSrIhw0JytwM02wl+bBhSkpPfdlqJfmwobdfc736mJJ8
2OHZ6H9BpVGSDzuEA+4eHh4q8mFHUeuoYO4CFfkYALYG5p/4VkU+BmAZWX8x
9rKKfAwgQpX6MtGmIh//oCxgjvUSF8r+A+Jf9nc=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw1kglQlHUYxvcUtLYU0HGqhcGK0EwTtNEKn88jpUwJRB0TywtQ81gcwRVx
lYYzC0xRwTMGR0ZTVHBERsEDyDsVtUVR2MNl74NjAXfZ3dj9Xt+Zb775jv/7
Ps/ze0NXbIxL5HE4nMSBy3t/U9ujokbmLB/EbAuqmK1Mz8K0J8dqjVPePBch
SFrGDA0YxFwKzjbGXjqKHSPVfna9kL4fR6kqXXboupA5WOKtkzhwuChQWCKk
/ytQoJr/ZaREyJhivW/OQ6YoX/PJ7DfnL8DlCflALRYyQ+Rlkqgh1fi4uO5B
creA+tXg+tE7wuo7AmZ0QuENe/gVeFyl05v+ElD/Otzy+010OU3AHB84LS+7
Brcn07bpewHNu44F/gFSZ6iAifRVPdZxxJELe/k0vwHirWcrs+7xmXp7+MCE
Rgzxf5ifV8onPTfxZ1vM3JVpfCbON/AW+luL946Ywyd9tzHhV1l3WQifUaZ7
G95B8RbRYFE3j/TeQ4jfj7/Mv8VjUrzyJPdRmBd7UXqYR/r/RRM3P1sm4TEs
jYc4kidKTZrJIz8PMU81MTRiJI+J9g14hCkfrg9TG7nk7xHGqN8J3XaVy3in
JRQ2oaZl7BnnHi75fQxzWtJAcRmfHfljTJLWaK9M4ZL/J9Auj7/LEXGZEK+c
4KeoSFtzKlLBoTye4pCLK15UxWGSvW2S/oMus6lmXQ6H8pGjKvfdEWmLOYy3
W1CFHHdzpzduHsuhvJoxlmEqn7g96PG2szfjQEztjXPHPWDze4as+PflO7/z
YKqv4XMsG/5CGG1zg83zOd7m7l82eL8bPnnZLQiJLu+6+ZUbbL4v8LvQ1Jij
dOH+PW+9wKYTm5ujc11g836JGcOmhg37zIXhPoGtmMuxlKma+sHm34q48j9w
TdoPX7uENozWRStOB/eD5aHAhoBxSX83OMH6UWDq0o6TdWudYPkowFtxNkM/
1En+FDh26EL5uGoHWF5KSBJnmnYvdZBfJZRBifxAgQMsPyUWnjt1pPrUa/Kv
gvS1cGVm7GuwPFWoOlPUuamvj/JQQeXYrCo41geWrxol7uKr8ll9lI8a6WuP
in6w9ILFo0ble+WzHPt6Ka9XeJAysaU5qhcs/1dYcIIfYdH0UH6v0O4xl39d
0AN2HzRoEN8u/OeLHspTg0XpcyIK2uxg90ODJam2+/vy7JRvO+wHFfvbJtjB
7ks72ra2XFzf0k15t2NeW+jc6dndYPdHC4Pfqg0/j++m/LVYXnr+o5vPusDu
kxZx7jUbt2V1EQ8d+naMnyEb30U8dIiXvcx/9LyTeOhQv102aktOJ/HQ4bH4
G6UkopN46PFTcG7htdYO4qFHMafGmLyrg3jocV667uTqyR3EwwBrb0xKg8aG
3T4eBmQEf67M2GsjHgYYXI5de6fZiIcRfFNuV6DCSjyM0MQXxdRHWYmHESsF
3GGTD1uIhwkRiz/1S3WaiYcJG5xuY8YSM/Ewwap7a1XcFRPxMENTVeruFZuI
hxmtS0yTJDuNxMMMkTBwY63aQDwsMHgWO5SzDcTDgjGrZwUqTuuJhwV7YhsV
NQF64mFFsyMuNWWrjnhYcXlE2AN/pZZ4WLEjJaE581st8bBBLA5Pbq1sx/+A
chdm
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw1kwtMU3cUxktLKW1pe69SFl3AucQIbvGZ4APl+09xoLIhCDhmo0AEROdr
8QVsAR/NYCYiUB847SAQgcw122Q+qhtOZMKkRnlYcCAtIIUCZVuCQwh0tDue
5Obmvs75vu937tzk/TEpQoFAkDJ9uM5vyrQ7vvhWkwfL8jWEWzNPIeWMtrF0
ppCuddDnBtRtiRWyWwHawehbeqx6O3J9o+7N83JoS5NmSluF7FKxq6ow1rF0
XKIW0fsGRHZubPg9VsSGol13fkRL5/tx63Qi+r4aXx8tPJrVLGIyc9mBNbKb
EOZUqfbO8KR+t/G9V7TQL9qTBWny748G3sXpkthVh/I9qf+vCA+oqNSaPFn5
9NfmsnvIz/kmLEIupnm/4biHv48xQsyWuasWswV9onatmOY/wBZb9fKy+2JW
Oxo4PaEOaWPZRj+nmPQ8RN9YxdUlIV4sxj2wHgUDgQH/HPEifQ2o2tGwMf4n
L2bNdDX8A2H+Eds1w16ktxHlztxCYaCEHXTJO2DClPOXoPBkCel/DGNZwb7A
yxL2P40naIr9qLq8VUJ+niC4dyreqPRmEe4BT7FAfflOWrg3+XuKFxfnbf4u
25u5pmnym/BFUd3pkze9yW8zRsYd0+XN3HbMzfhEnCkamicl/y3gxTWaDI2U
zXHJCWjFpN1w4VyhlPJoRctM+6eol7K0VFc9w/3xZ/GHJ6WUjxl3Ll1fH7xU
xlzdfA1mHN1ZOZiTKqO82hA2YfaLvSRjr1ztRtvgGNrzrcEko/zaYX1dmpYv
kLNQd8PnuFPdum10qZzyfI6sxLzPu3bKmVue9k8c0nx2LfK8nPLtgIcg0Xf1
QzkzNbqqAysHMmuu/SunvDuR5SEzXZnvw9RugS/gTChIVW71ofxfIGqivmZS
68Pc7TRd6N9U7Len2od4WLDX863rcd0+5MeCcWem7a5KQXwssITN5kpWK8if
BetnaIqmdimIlxVdRoPVrFOQXytmVWQcfu+egvhZkV6hah6zK8h/N7qm9LlQ
K4lnN0y+7yx0hiopj248Uq9LWb5LSXx7sN2+rd12Vkn59CCViwR3W0m8e5A4
si/uB4uS8urFZnV2z0OJivj3QmXMMcYvVFF+vdDZy6s1sSrah5cwOBb/3J6h
ojxfIupeUqVJr6L9eInVUVEnV9SqKN8+hAw+XjfbpqJ96cOatqBjK8Uc5d2H
WYn9m0r9ONofGwomH1U+mM9R/rbp//+yvmwFR/tkg1q4+IPQDRzx6MeS3IRK
XQJHPPpxPs88cjWdIx79SNm6dvnhDI549EN45HWpM5cjHgPQBMzY+uFFjngM
4OCxsOMbKjjiMYCvdrR9LL3BEQ87PKYK/9Y+4NhZNw87zueU6WuaOOJhh0hw
9swNC0c8BpHwfO7kbgdHPAZxYl5MUOcERzwGoX8VHKeQ8sRjCH1zHHUTap54
DKE4+XRt5bs88RjChUlhse8inngMQ2Px0yGEJx7DKM5ZK14QzhOPYZzIrkBL
DE88HDjj//pi6HaeeDiw7Fj6dPHEw4Fgq04ed4gnHiNokOzv8MjmiccITmUv
CjmQxxOPEdR+uSavpIgnHn/hSpL/gqIrPPsPYGrXxQ==
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {0, 24.158964879843232`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 24.158964879843232`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Total Resources\"", "\"Consumer\"", "\"Predator\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7197527495007734`*^9, 3.719754021228301*^9, 
  3.7197542767297225`*^9},ExpressionUUID->"4e5a7a54-2f92-4068-9e41-\
67f397bdc036"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"aa", " ", "=", " ", 
  RowBox[{
   RowBox[{"Reap", "[", "\[IndentingNewLine]", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]", "=", "i"}], ";", "\[IndentingNewLine]", 
       RowBox[{"sol", "=", 
        RowBox[{"NDSolve", "[", 
         RowBox[{"eqs", ",", " ", 
          RowBox[{"{", 
           RowBox[{"Res1", ",", " ", "Res2", ",", "Con", ",", " ", "Pred"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "Tf"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Sow", "[", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Res1", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
               RowBox[{
                RowBox[{"Res2", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
               RowBox[{
                RowBox[{"Con", "[", "t", "]"}], "/.", "sol"}], ",", " ", 
               RowBox[{
                RowBox[{"Pred", "[", "t", "]"}], "/.", "sol"}]}], "}"}], ",", 
             " ", 
             RowBox[{"{", 
              RowBox[{
              "t", ",", " ", "8000", ",", " ", "10000", ",", " ", "0.01"}], 
              "}"}]}], "]"}], "//", "Mean"}]}], "}"}], "\[IndentingNewLine]", 
        "]"}], ";"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "0", ",", "1", ",", " ", "0.01"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<K:\\\\IGP exp_in lab\\\\ProgressReport_20171115\\\\Type1.csv\>\"", ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"aa", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"aa", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", " ", "101"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7185344288700747`*^9, 3.718534437508086*^9}, 
   3.719753967822258*^9},ExpressionUUID->"f5a008f8-0e2e-4d6f-b04c-\
b5be452ec4b4"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1904, 997},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 198, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[803, 29, 219, 5, 49, "Subsection"],
Cell[CellGroupData[{
Cell[1047, 38, 12737, 296, 886, "Input"],
Cell[13787, 336, 2232, 34, 31, "Output"],
Cell[16022, 372, 174635, 2942, 400, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190694, 3319, 727, 14, 41, "Subsubsection"],
Cell[CellGroupData[{
Cell[191446, 3337, 41147, 737, 1066, "Input"],
Cell[232596, 4076, 20936, 416, 397, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[253593, 4499, 418, 11, 49, "Subsection"],
Cell[254014, 4512, 3880, 99, 232, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257931, 4616, 330, 6, 49, "Subsection"],
Cell[258264, 4624, 7964, 204, 625, "Input"],
Cell[266231, 4830, 4572, 111, 412, "Input"],
Cell[CellGroupData[{
Cell[270828, 4945, 2766, 78, 172, "Input"],
Cell[273597, 5025, 16826, 354, 397, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[290472, 5385, 279, 5, 59, "Subsection"],
Cell[CellGroupData[{
Cell[290776, 5394, 10234, 264, 1004, "Input"],
Cell[301013, 5660, 20693, 417, 395, "Output"]
}, Open  ]],
Cell[321721, 6080, 3454, 92, 232, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

